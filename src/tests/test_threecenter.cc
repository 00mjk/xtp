/*
 * Copyright 2009-2018 The VOTCA Development Team (http://www.votca.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
#define BOOST_TEST_MAIN

#define BOOST_TEST_MODULE threecenter_test
#include <boost/test/unit_test.hpp>
#include <votca/xtp/orbitals.h>
#include <votca/xtp/threecenter.h>
#include <votca/xtp/ERIs.h>

using namespace votca::xtp;

BOOST_AUTO_TEST_SUITE(threecenter_test)

BOOST_AUTO_TEST_CASE(threecenter_dft) {
  
  ofstream xyzfile("molecule.xyz");
  xyzfile << " 5" << endl;
  xyzfile << " methane" << endl;
  xyzfile << " C            .000000     .000000     .000000" << endl;
  xyzfile << " H            .629118     .629118     .629118" << endl;
  xyzfile << " H           -.629118    -.629118     .629118" << endl;
  xyzfile << " H            .629118    -.629118    -.629118" << endl;
  xyzfile << " H           -.629118     .629118    -.629118" << endl;
  xyzfile.close();

  ofstream basisfile("3-21G.xml");
  basisfile <<"<basis name=\"3-21G\">" << endl;
  basisfile << "  <element name=\"H\">" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"5.447178e+00\">" << endl;
  basisfile << "        <contractions factor=\"1.562850e-01\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"8.245470e-01\">" << endl;
  basisfile << "        <contractions factor=\"9.046910e-01\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"1.831920e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "  </element>" << endl;
  basisfile << "  <element name=\"C\">" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"1.722560e+02\">" << endl;
  basisfile << "        <contractions factor=\"6.176690e-02\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"2.591090e+01\">" << endl;
  basisfile << "        <contractions factor=\"3.587940e-01\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"5.533350e+00\">" << endl;
  basisfile << "        <contractions factor=\"7.007130e-01\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"SP\">" << endl;
  basisfile << "      <constant decay=\"3.664980e+00\">" << endl;
  basisfile << "        <contractions factor=\"-3.958970e-01\" type=\"S\"/>" << endl;
  basisfile << "        <contractions factor=\"2.364600e-01\" type=\"P\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"7.705450e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.215840e+00\" type=\"S\"/>" << endl;
  basisfile << "        <contractions factor=\"8.606190e-01\" type=\"P\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"SP\">" << endl;
  basisfile << "      <constant decay=\"1.958570e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"S\"/>" << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"P\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "  </element>" << endl;
  basisfile << "</basis>" << endl;
  basisfile.close();
  
  Orbitals orbitals;
  orbitals.LoadFromXYZ("molecule.xyz");
  BasisSet basis;
  basis.LoadBasisSet("3-21G.xml");
  AOBasis aobasis;
  aobasis.AOBasisFill(&basis,orbitals.QMAtoms());
  TCMatrix_dft threec;
  threec.Fill(aobasis,aobasis,Eigen::MatrixXd::Identity(aobasis.AOBasisSize(),aobasis.AOBasisSize()));
  
  
  
  
  Eigen::MatrixXd Res0=Eigen::MatrixXd::Zero(aobasis.AOBasisSize(),aobasis.AOBasisSize());
  threec.getDatamatrix(0).AddtoEigenMatrix(Res0);

  
  Eigen::MatrixXd Res4=Eigen::MatrixXd::Zero(aobasis.AOBasisSize(),aobasis.AOBasisSize());
  threec.getDatamatrix(4).AddtoEigenMatrix(Res4);

  
  Eigen::MatrixXd Ref0=Eigen::MatrixXd::Zero(aobasis.AOBasisSize(),aobasis.AOBasisSize());
  Ref0<<2.29374 ,0.304177 ,0 ,0 ,0 ,0.337068 ,0 ,0 ,0 ,0.033705 ,0.150367 ,0.033705 ,0.150367 ,0.033705 ,0.150367 ,0.033705 ,0.150367,
0.304177 ,0.921384 ,0 ,0 ,0 ,0.632988 ,0 ,0 ,0 ,0.138532 ,0.319933 ,0.138532 ,0.319933 ,0.138532 ,0.319933 ,0.138532 ,0.319933,
0 ,0 ,0.967997 ,0 ,0 ,0 ,0.366964 ,0 ,0 ,0.109996 ,0.0905438 ,0.109996 ,0.0905438 ,-0.109996 ,-0.0905438 ,-0.109996 ,-0.0905438,
0 ,0 ,0 ,0.967997 ,0 ,0 ,0 ,0.366964 ,0 ,0.109996 ,0.0905438 ,-0.109996 ,-0.0905438 ,-0.109996 ,-0.0905438 ,0.109996 ,0.0905438,
0 ,0 ,0 ,0 ,0.967997 ,0 ,0 ,0 ,0.366964 ,0.109996 ,0.0905438 ,-0.109996 ,-0.0905438 ,0.109996 ,0.0905438 ,-0.109996 ,-0.0905438,
0.337068 ,0.632988 ,0 ,0 ,0 ,0.616586 ,0 ,0 ,0 ,0.17704 ,0.362827 ,0.17704 ,0.362827 ,0.17704 ,0.362827 ,0.17704 ,0.362827,
0 ,0 ,0.366964 ,0 ,0 ,0 ,0.423084 ,0 ,0 ,0.130034 ,0.131792 ,0.130034 ,0.131792 ,-0.130034 ,-0.131792 ,-0.130034 ,-0.131792,
0 ,0 ,0 ,0.366964 ,0 ,0 ,0 ,0.423084 ,0 ,0.130034 ,0.131792 ,-0.130034 ,-0.131792 ,-0.130034 ,-0.131792 ,0.130034 ,0.131792,
0 ,0 ,0 ,0 ,0.366964 ,0 ,0 ,0 ,0.423084 ,0.130034 ,0.131792 ,-0.130034 ,-0.131792 ,0.130034 ,0.131792 ,-0.130034 ,-0.131792,
0.033705 ,0.138532 ,0.109996 ,0.109996 ,0.109996 ,0.17704 ,0.130034 ,0.130034 ,0.130034 ,0.436704 ,0.280477 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251,
0.150367 ,0.319933 ,0.0905438 ,0.0905438 ,0.0905438 ,0.362827 ,0.131792 ,0.131792 ,0.131792 ,0.280477 ,0.39915 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028,
0.033705 ,0.138532 ,0.109996 ,-0.109996 ,-0.109996 ,0.17704 ,0.130034 ,-0.130034 ,-0.130034 ,0.00555884 ,0.0631251 ,0.436704 ,0.280477 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251,
0.150367 ,0.319933 ,0.0905438 ,-0.0905438 ,-0.0905438 ,0.362827 ,0.131792 ,-0.131792 ,-0.131792 ,0.0631251 ,0.182028 ,0.280477 ,0.39915 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028,
0.033705 ,0.138532 ,-0.109996 ,-0.109996 ,0.109996 ,0.17704 ,-0.130034 ,-0.130034 ,0.130034 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251 ,0.436704 ,0.280477 ,0.00555884 ,0.0631251,
0.150367 ,0.319933 ,-0.0905438 ,-0.0905438 ,0.0905438 ,0.362827 ,-0.131792 ,-0.131792 ,0.131792 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028 ,0.280477 ,0.39915 ,0.0631251 ,0.182028,
0.033705 ,0.138532 ,-0.109996 ,0.109996 ,-0.109996 ,0.17704 ,-0.130034 ,0.130034 ,-0.130034 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251 ,0.436704 ,0.280477,
0.150367 ,0.319933 ,-0.0905438 ,0.0905438 ,-0.0905438 ,0.362827 ,-0.131792 ,0.131792 ,-0.131792 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028 ,0.280477 ,0.39915;
  
  Eigen::MatrixXd Ref4=Eigen::MatrixXd::Zero(aobasis.AOBasisSize(),aobasis.AOBasisSize());
  Ref4<<0 ,0 ,0 ,0 ,0.21851 ,0 ,0 ,0 ,0.0305022 ,0.00646054 ,0.00674129 ,-0.00646054 ,-0.00674129 ,0.00646054 ,0.00674129 ,-0.00646054 ,-0.00674129,
0 ,0 ,0 ,0 ,0.896593 ,0 ,0 ,0 ,0.409428 ,0.125791 ,0.10102 ,-0.125791 ,-0.10102 ,0.125791 ,0.10102 ,-0.125791 ,-0.10102,
0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0.0866627 ,0.0226036 ,-0.0866627 ,-0.0226036 ,-0.0866627 ,-0.0226036 ,0.0866627 ,0.0226036,
0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0.0866627 ,0.0226036 ,0.0866627 ,0.0226036 ,-0.0866627 ,-0.0226036 ,-0.0866627 ,-0.0226036,
0.21851 ,0.896593 ,0 ,0 ,0 ,0.690122 ,0 ,0 ,0 ,0.17602 ,0.363256 ,0.17602 ,0.363256 ,0.17602 ,0.363256 ,0.17602 ,0.363256,
0 ,0 ,0 ,0 ,0.690122 ,0 ,0 ,0 ,0.56523 ,0.18263 ,0.159752 ,-0.18263 ,-0.159752 ,0.18263 ,0.159752 ,-0.18263 ,-0.159752,
0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0.122829 ,0.0489282 ,-0.122829 ,-0.0489282 ,-0.122829 ,-0.0489282 ,0.122829 ,0.0489282,
0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0.122829 ,0.0489282 ,0.122829 ,0.0489282 ,-0.122829 ,-0.0489282 ,-0.122829 ,-0.0489282,
0.0305022 ,0.409428 ,0 ,0 ,0 ,0.56523 ,0 ,0 ,0 ,0.201612 ,0.37355 ,0.201612 ,0.37355 ,0.201612 ,0.37355 ,0.201612 ,0.37355,
0.00646054 ,0.125791 ,0.0866627 ,0.0866627 ,0.17602 ,0.18263 ,0.122829 ,0.122829 ,0.201612 ,0.540893 ,0.311822 ,2.46557e-19 ,0.0523107 ,0.00882417 ,0.0808349 ,2.44863e-19 ,0.0523107,
0.00674129 ,0.10102 ,0.0226036 ,0.0226036 ,0.363256 ,0.159752 ,0.0489282 ,0.0489282 ,0.37355 ,0.311822 ,0.304029 ,-0.0523107 ,3.0974e-18 ,0.0808349 ,0.15978 ,-0.0523107 ,3.0974e-18,
-0.00646054 ,-0.125791 ,-0.0866627 ,0.0866627 ,0.17602 ,-0.18263 ,-0.122829 ,0.122829 ,0.201612 ,2.46557e-19 ,-0.0523107 ,-0.540893 ,-0.311822 ,-2.44863e-19 ,-0.0523107 ,-0.00882417 ,-0.0808349,
-0.00674129 ,-0.10102 ,-0.0226036 ,0.0226036 ,0.363256 ,-0.159752 ,-0.0489282 ,0.0489282 ,0.37355 ,0.0523107 ,3.0974e-18 ,-0.311822 ,-0.304029 ,0.0523107 ,-3.0974e-18 ,-0.0808349 ,-0.15978,
0.00646054 ,0.125791 ,-0.0866627 ,-0.0866627 ,0.17602 ,0.18263 ,-0.122829 ,-0.122829 ,0.201612 ,0.00882417 ,0.0808349 ,-2.44863e-19 ,0.0523107 ,0.540893 ,0.311822 ,2.46557e-19 ,0.0523107,
0.00674129 ,0.10102 ,-0.0226036 ,-0.0226036 ,0.363256 ,0.159752 ,-0.0489282 ,-0.0489282 ,0.37355 ,0.0808349 ,0.15978 ,-0.0523107 ,-3.0974e-18 ,0.311822 ,0.304029 ,-0.0523107 ,3.0974e-18,
-0.00646054 ,-0.125791 ,0.0866627 ,-0.0866627 ,0.17602 ,-0.18263 ,0.122829 ,-0.122829 ,0.201612 ,2.44863e-19 ,-0.0523107 ,-0.00882417 ,-0.0808349 ,2.46557e-19 ,-0.0523107 ,-0.540893 ,-0.311822,
-0.00674129 ,-0.10102 ,0.0226036 ,-0.0226036 ,0.363256 ,-0.159752 ,0.0489282 ,-0.0489282 ,0.37355 ,0.0523107 ,3.0974e-18 ,-0.0808349 ,-0.15978 ,0.0523107 ,3.0974e-18 ,-0.311822 ,-0.304029;
  
  bool check_threec=(Res0.isApprox(Ref0,0.00001) && Res4.isApprox(Ref4,0.00001) );
BOOST_CHECK_EQUAL(check_threec, 1);

}

BOOST_AUTO_TEST_CASE(threecenter_gwbse){
  Orbitals orbitals;
  orbitals.LoadFromXYZ("molecule.xyz");
  BasisSet basis;
  basis.LoadBasisSet("3-21G.xml");
  AOBasis aobasis;
  aobasis.AOBasisFill(&basis,orbitals.QMAtoms());
  
  AOKinetic kinetic;
kinetic.Fill(aobasis);

Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(kinetic.Matrix());

TCMatrix_gwbse tc;
tc.Initialize(aobasis.AOBasisSize(),0,5,0,7);
tc.Fill(aobasis,aobasis,es.eigenvectors());

AOOverlap overlap;
overlap.Fill(aobasis);

AOCoulomb cou;
cou.Fill(aobasis);

tc.MultiplyLeftWithAuxMatrix(cou.Pseudo_InvSqrt_GWBSE(overlap,1e-7));

Eigen::MatrixXd ref0=Eigen::MatrixXd::Zero(tc[0].rows(),tc[0].cols());
ref0<<0.0009558,6.09501e-17,5.10261e-17,-1.77523e-16,-0.000483692,1.25641e-16,1.13624e-16,3.49113e-17,
0.00199551,-1.76796e-15,-3.78378e-16,1.99477e-15,-0.00278814,-1.19882e-15,-1.5014e-15,-5.22152e-16,
2.33589e-16,2.68097e-05,0.00101201,0.000160909,-5.17503e-16,-0.000982253,0.000901279,1.34265e-05,
-1.69403e-16,-0.000804808,0.000120431,-0.000623336,5.76821e-16,-2.75288e-05,-4.98442e-05,0.00133194,
3.79845e-16,0.000634297,0.000110031,-0.000797701,-5.05853e-16,0.000900958,0.00098108,5.53355e-05,
0.00992842,4.24288e-15,7.91684e-16,-4.10509e-15,-0.0361156,2.55411e-15,3.56659e-15,1.02349e-15,
-3.71564e-16,-7.59087e-05,-0.00286538,-0.000455595,3.29709e-16,0.0222433,-0.0204096,-0.000304045,
1.40257e-16,0.00227872,-0.000340987,0.00176491,-8.34872e-16,0.000623396,0.00112873,-0.030162,
-8.83727e-16,-0.00179594,-0.00031154,0.0022586,1.13922e-15,-0.0204024,-0.0222167,-0.00125308,
0.00623938,0.000657434,-0.00568432,0.00576511,-0.0177986,0.000609668,-0.0102663,-0.00784719,
0.0169419,0.00138711,-0.0119932,0.0121637,-0.0452605,0.00138054,-0.0232473,-0.0177693,
0.00623938,-0.000902744,-0.00357558,-0.00723744,-0.0177986,0.0103961,0.000167828,0.00769675,
0.0169419,-0.00190468,-0.00754406,-0.0152702,-0.0452605,0.0235413,0.000380033,0.0174287,
0.00623938,-0.00646128,0.00467753,0.00153389,-0.0177986,-0.0107046,-0.000726315,0.00722718,
0.0169419,-0.0136325,0.00986905,0.00323632,-0.0452605,-0.0242397,-0.00164468,0.0163654,
0.00623938,0.00670659,0.00458237,-6.15627e-05,-0.0177986,-0.000301216,0.0108248,-0.00707674,
0.0169419,0.0141501,0.00966826,-0.00012989,-0.0452605,-0.000682081,0.024512,-0.0160247;
bool check0=ref0.isApprox(tc[0],1e-5);
if(!check0){
 cout<<"tc0"<<endl;
   cout<<tc[0]<<endl;
    cout<<"tc0_ref"<<endl;
   cout<<ref0<<endl;
 }
 BOOST_CHECK_EQUAL(check0 , true);
 
 
Eigen::MatrixXd ref2=Eigen::MatrixXd::Zero(tc[2].rows(),tc[2].cols());
ref2<<5.68529e-17,1.51703e-16,0.00117559,1.07012e-16,-1.4621e-16,-0.00100937,0.00113952,0.000202365,
-7.74752e-16,-2.23636e-15,0.00554791,-1.61158e-15,1.25135e-15,0.00519653,-0.00586657,-0.00104184,
0.00101201,3.45355e-05,-7.52406e-05,0.000467457,-0.0153749,0.00051097,0.00054582,0.000742267,
0.000120431,-0.00183078,-0.000632262,0.00224162,-0.00182965,0.00389351,0.00529033,0.000278448,
0.000110031,0.00230314,-0.000692024,0.0017359,-0.00167164,-0.000708039,0.000281462,0.00653789,
1.90299e-15,5.10075e-15,0.0182488,3.86161e-15,-2.94634e-15,0.00548658,-0.00619402,-0.00109999,
-0.00286538,-5.88099e-05,0.000128126,-0.000796025,-0.0149169,0.0025766,0.00275234,0.00374293,
-0.000340987,0.0031176,0.00107667,-0.00381721,-0.00177514,0.0196333,0.0266768,0.00140409,
-0.00031154,-0.00392197,0.00117843,-0.00295603,-0.00162185,-0.00357033,0.00141929,0.0329677,
-0.00568432,-0.000802811,0.0123328,-0.00703994,0.0189718,0.000436656,0.0153485,0.012689,
-0.0119932,-0.00192448,0.0312074,-0.016876,0.027268,-0.00245084,0.0324048,0.0243951,
-0.00357558,0.000693416,0.008138,0.00555922,0.0119337,-0.0093708,-0.00180593,-0.00829715,
-0.00754406,0.00166225,0.0211517,0.0133265,0.0171522,-0.0207997,0.00031041,-0.014868,
0.00467753,-0.00649259,0.0100917,0.00154132,-0.0156116,-0.0131239,-0.00261984,0.00954644,
0.00986905,-0.0155639,0.0258351,0.00369482,-0.0224384,-0.0278213,-0.00121234,0.0185156,
0.00458237,0.00660198,0.00990242,-6.06025e-05,-0.0152939,0.00104339,0.0128015,-0.00972516,
0.00966826,0.0158262,0.0253813,-0.000145275,-0.0219819,-0.00131569,0.0276395,-0.0175397;
bool check2=ref2.isApprox(tc[2],1e-5);
if(!check2){
 cout<<"tc2"<<endl;
   cout<<tc[2]<<endl;
    cout<<"tc2_ref"<<endl;
   cout<<ref2<<endl;
 }

BOOST_CHECK_EQUAL(check2 , true);
 

Eigen::MatrixXd ref4=Eigen::MatrixXd::Zero(tc[4].rows(),tc[4].cols());
ref4<<-0.000483692,-3.11902e-16,-1.50578e-16,3.13051e-16,0.0206426,-1.82183e-16,4.55365e-16,1.9082e-16,
-0.00278814,5.94679e-15,1.37971e-15,-4.55333e-15,0.205083,-3.94895e-15,-3.96211e-15,3.68108e-15,
-5.74787e-16,-0.000407306,-0.0153749,-0.0024446,3.09997e-15,-0.0663671,0.060896,0.000907175,
6.06349e-16,0.012227,-0.00182965,0.00947002,-3.1878e-15,-0.00186002,-0.00336779,0.0899941,
-4.72931e-16,-0.00963654,-0.00167164,0.0121191,-7.11339e-16,0.0608743,0.0662878,0.00373881,
-0.0361156,-1.36777e-14,-2.85154e-15,1.02574e-14,0.445569,1.01627e-14,8.29892e-15,-8.90954e-15,
4.42452e-16,-0.000395173,-0.0149169,-0.00237178,1.38491e-15,-0.172058,0.157874,0.00235187,
-9.61493e-16,0.0118628,-0.00177514,0.00918792,2.42837e-15,-0.00482214,-0.00873106,0.233312,
1.0438e-15,-0.00934949,-0.00162185,0.0117581,2.50823e-15,0.157818,0.171853,0.00969294,
-0.0177986,-0.00219423,0.0189718,-0.0192414,0.131633,-0.00312018,0.0525415,0.0401606,
-0.0452605,-0.00315375,0.027268,-0.0276555,0.267801,-0.004759,0.080138,0.0612543,
-0.0177986,0.00301297,0.0119337,0.0241554,0.131633,-0.0532057,-0.000858916,-0.0393907,
-0.0452605,0.00433051,0.0171522,0.0347184,0.267801,-0.0811512,-0.00131005,-0.06008,
-0.0177986,0.0215649,-0.0156116,-0.00511944,0.131633,0.0547843,0.00371716,-0.0369875,
-0.0452605,0.0309951,-0.0224384,-0.00735813,0.267801,0.0835589,0.00566954,-0.0564146,
-0.0177986,-0.0223837,-0.0152939,0.00020547,0.131633,0.00154158,-0.0553997,0.0362176,
-0.0452605,-0.0321719,-0.0219819,0.00029532,0.267801,0.00235126,-0.0844975,0.0552402;
bool check4=ref4.isApprox(tc[4],1e-5);
if(!check4){
 cout<<"tc4"<<endl;
   cout<<tc[4]<<endl;
    cout<<"tc4_ref"<<endl;
   cout<<ref4<<endl;
 }

BOOST_CHECK_EQUAL(check4 , true);
 


 
  
}
BOOST_AUTO_TEST_SUITE_END()
