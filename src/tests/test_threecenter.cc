/*
 * Copyright 2009-2019 The VOTCA Development Team (http://www.votca.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
#define BOOST_TEST_MAIN

#define BOOST_TEST_MODULE threecenter_test
#include <boost/test/unit_test.hpp>
#include <votca/tools/tokenizer.h>
#include <votca/xtp/ERIs.h>
#include <votca/xtp/aomatrix.h>
#include <votca/xtp/orbitals.h>
#include <votca/xtp/threecenter.h>

using namespace votca::xtp;
using namespace std;

BOOST_AUTO_TEST_SUITE(threecenter_test)

Eigen::MatrixXd ReadMatrixFromString(const std::string& matrix) {
  votca::tools::Tokenizer lines(matrix, "\n");

  std::vector<double> entries;
  int cols = 0;
  int rows = 0;
  for (auto line : lines) {
    if (line[0] == '#') {
      continue;
    }
    votca::tools::Tokenizer entries_tok(line, " ");
    std::vector<std::string> temp = entries_tok.ToVector();
    cols = temp.size();
    rows++;
    for (const auto& s : temp) {
      entries.push_back(std::stod(s));
    }
  }

  return Eigen::Map<Eigen::MatrixXd>(entries.data(), rows, cols);
}

BOOST_AUTO_TEST_CASE(threecenter_dft) {

  OPENMP::setMaxThreads(1);

  ofstream xyzfile("molecule.xyz");
  xyzfile << " 5" << endl;
  xyzfile << " methane" << endl;
  xyzfile << " C            .000000     .000000     .000000" << endl;
  xyzfile << " H            .629118     .629118     .629118" << endl;
  xyzfile << " H           -.629118    -.629118     .629118" << endl;
  xyzfile << " H            .629118    -.629118    -.629118" << endl;
  xyzfile << " H           -.629118     .629118    -.629118" << endl;
  xyzfile.close();

  ofstream basisfile("3-21G.xml");
  basisfile << "<basis name=\"3-21G\">" << endl;
  basisfile << "  <element name=\"H\">" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"5.447178e+00\">" << endl;
  basisfile << "        <contractions factor=\"1.562850e-01\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"8.245470e-01\">" << endl;
  basisfile << "        <contractions factor=\"9.046910e-01\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"1.831920e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "  </element>" << endl;
  basisfile << "  <element name=\"C\">" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"1.722560e+02\">" << endl;
  basisfile << "        <contractions factor=\"6.176690e-02\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"2.591090e+01\">" << endl;
  basisfile << "        <contractions factor=\"3.587940e-01\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"5.533350e+00\">" << endl;
  basisfile << "        <contractions factor=\"7.007130e-01\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"SP\">" << endl;
  basisfile << "      <constant decay=\"3.664980e+00\">" << endl;
  basisfile << "        <contractions factor=\"-3.958970e-01\" type=\"S\"/>"
            << endl;
  basisfile << "        <contractions factor=\"2.364600e-01\" type=\"P\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"7.705450e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.215840e+00\" type=\"S\"/>"
            << endl;
  basisfile << "        <contractions factor=\"8.606190e-01\" type=\"P\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"SP\">" << endl;
  basisfile << "      <constant decay=\"1.958570e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"S\"/>"
            << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"P\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "  </element>" << endl;
  basisfile << "</basis>" << endl;
  basisfile.close();

  Orbitals orbitals;
  orbitals.QMAtoms().LoadFromFile("molecule.xyz");
  BasisSet basis;
  basis.Load("3-21G.xml");
  AOBasis aobasis;
  aobasis.Fill(basis, orbitals.QMAtoms());
  TCMatrix_dft threec;
  threec.Fill(aobasis, aobasis);

  std::string ref0_string =
      " 1.60933 0.156026 7.9158e-17 -7.38386e-18 9.11858e-18 0.203748 "
      "1.01459e-17 -9.03068e-19 1.17412e-18 0.0195044 0.0905022 0.0195044 "
      "0.0905022 0.0195044 0.0905022 0.0195044 0.0905022\n"
      " 0.156026 0.189689 7.23701e-17 3.09035e-18 1.07874e-17 0.112228 "
      "-2.62193e-17 1.19079e-17 -2.80057e-18 0.0156068 0.0516639 0.0156068 "
      "0.0516639 0.0156068 0.0516639 0.0156068 0.0516639\n"
      " 7.9158e-17 7.23701e-17 0.252489 1.04726e-19 -3.57417e-18 -7.11809e-18 "
      "0.0409547 6.87544e-19 -3.72331e-18 0.00993143 0.00923661 0.00993143 "
      "0.00923661 -0.00993143 -0.00923661 -0.00993143 -0.00923661\n"
      "-7.38386e-18 3.09035e-18 1.04726e-19 0.252489 -5.09944e-18 1.27559e-17 "
      "6.87544e-19 0.0409547 1.26138e-17 0.00993143 0.00923661 -0.00993143 "
      "-0.00923661 -0.00993143 -0.00923661 0.00993143 0.00923661\n"
      " 9.11858e-18 1.07874e-17 -3.57417e-18 -5.09944e-18 0.252489 "
      "-6.12873e-19 -3.72331e-18 1.26138e-17 0.0409547 0.00993143 0.00923661 "
      "-0.00993143 -0.00923661 0.00993143 0.00923661 -0.00993143 -0.00923661\n"
      " 0.203748 0.112228 -7.11809e-18 1.27559e-17 -6.12873e-19 0.0739222 "
      "-1.00337e-16 4.22242e-17 -2.31423e-17 0.0109019 0.0339426 0.0109019 "
      "0.0339426 0.0109019 0.0339426 0.0109019 0.0339426\n"
      " 1.01459e-17 -2.62193e-17 0.0409547 6.87544e-19 -3.72331e-18 "
      "-1.00337e-16 0.00662462 8.67362e-18 -1.70764e-17 0.00383329 0.00241774 "
      "0.00383329 0.00241774 -0.00383329 -0.00241774 -0.00383329 -0.00241774\n"
      "-9.03068e-19 1.19079e-17 6.87544e-19 0.0409547 1.26138e-17 4.22242e-17 "
      "8.67362e-18 0.00662462 1.7331e-16 0.00383329 0.00241774 -0.00383329 "
      "-0.00241774 -0.00383329 -0.00241774 0.00383329 0.00241774\n"
      " 1.17412e-18 -2.80057e-18 -3.72331e-18 1.26138e-17 0.0409547 "
      "-2.31423e-17 -1.70764e-17 1.7331e-16 0.00662462 0.00383329 0.00241774 "
      "-0.00383329 -0.00241774 0.00383329 0.00241774 -0.00383329 -0.00241774\n"
      " 0.0195044 0.0156068 0.00993143 0.00993143 0.00993143 0.0109019 "
      "0.00383329 0.00383329 0.00383329 0.0143735 0.0108626 0.000680431 "
      "0.00420737 0.000680431 0.00420737 0.000680431 0.00420737\n"
      " 0.0905022 0.0516639 0.00923661 0.00923661 0.00923661 0.0339426 "
      "0.00241774 0.00241774 0.00241774 0.0108626 0.019639 0.00420737 "
      "0.0149384 0.00420737 0.0149384 0.00420737 0.0149384\n"
      " 0.0195044 0.0156068 0.00993143 -0.00993143 -0.00993143 0.0109019 "
      "0.00383329 -0.00383329 -0.00383329 0.000680431 0.00420737 0.0143735 "
      "0.0108626 0.000680431 0.00420737 0.000680431 0.00420737\n"
      " 0.0905022 0.0516639 0.00923661 -0.00923661 -0.00923661 0.0339426 "
      "0.00241774 -0.00241774 -0.00241774 0.00420737 0.0149384 0.0108626 "
      "0.019639 0.00420737 0.0149384 0.00420737 0.0149384\n"
      " 0.0195044 0.0156068 -0.00993143 -0.00993143 0.00993143 0.0109019 "
      "-0.00383329 -0.00383329 0.00383329 0.000680431 0.00420737 0.000680431 "
      "0.00420737 0.0143735 0.0108626 0.000680431 0.00420737\n"
      " 0.0905022 0.0516639 -0.00923661 -0.00923661 0.00923661 0.0339426 "
      "-0.00241774 -0.00241774 0.00241774 0.00420737 0.0149384 0.00420737 "
      "0.0149384 0.0108626 0.019639 0.00420737 0.0149384\n"
      " 0.0195044 0.0156068 -0.00993143 0.00993143 -0.00993143 0.0109019 "
      "-0.00383329 0.00383329 -0.00383329 0.000680431 0.00420737 0.000680431 "
      "0.00420737 0.000680431 0.00420737 0.0143735 0.0108626\n"
      " 0.0905022 0.0516639 -0.00923661 0.00923661 -0.00923661 0.0339426 "
      "-0.00241774 0.00241774 -0.00241774 0.00420737 0.0149384 0.00420737 "
      "0.0149384 0.00420737 0.0149384 0.0108626 0.019639";

  Eigen::MatrixXd Ref0 = ReadMatrixFromString(ref0_string);
  std::string ref4_string =
      "6.10201e-16 1.04083e-16 -1.43471e-17 2.38881e-17 0.115582 9.92184e-17 "
      "-2.22379e-18 3.68746e-18 0.0159 0.00332761 0.00350516 -0.00332761 "
      "-0.00350516 0.00332761 0.00350516 -0.00332761 -0.00350516\n"
      " 1.04083e-16 5.55112e-16 -1.17237e-16 1.90095e-16 0.400942 4.38974e-16 "
      "-6.62885e-17 1.14861e-16 0.160429 0.0438354 0.0379715 -0.0438354 "
      "-0.0379715 0.0438354 0.0379715 -0.0438354 -0.0379715\n"
      "-1.43471e-17 -1.17237e-16 5.00192e-16 -0.0118561 -3.89039e-17 "
      "-1.00727e-16 3.02627e-16 -0.00838998 -3.17098e-17 0.0247852 0.00498474 "
      "-0.0247852 -0.00498474 -0.0247852 -0.00498474 0.0247852 0.00498474\n"
      " 2.38881e-17 1.90095e-16 -0.0118561 5.00192e-16 -9.12004e-17 "
      "1.80524e-16 -0.00838998 3.02627e-16 -6.93378e-17 0.0247852 0.00498474 "
      "0.0247852 0.00498474 -0.0247852 -0.00498474 -0.0247852 -0.00498474\n"
      " 0.115582 0.400942 -3.89039e-17 -9.12004e-17 5.00192e-16 0.283457 "
      "-3.17098e-17 -6.93378e-17 3.02627e-16 0.0620134 0.144146 0.0620134 "
      "0.144146 0.0620134 0.144146 0.0620134 0.144146\n"
      " 9.92184e-17 4.38974e-16 -1.00727e-16 1.80524e-16 0.283457 5.86928e-16 "
      "-1.21176e-16 2.53015e-16 0.150009 0.0408784 0.0355068 -0.0408784 "
      "-0.0355068 0.0408784 0.0355068 -0.0408784 -0.0355068\n"
      "-2.22379e-18 -6.62885e-17 3.02627e-16 -0.00838998 -3.17098e-17 "
      "-1.21176e-16 5.82867e-16 -0.0119247 -8.61934e-17 0.0165925 0.00164473 "
      "-0.0165925 -0.00164473 -0.0165925 -0.00164473 0.0165925 0.00164473\n"
      " 3.68746e-18 1.14861e-16 -0.00838998 3.02627e-16 -6.93378e-17 "
      "2.53015e-16 -0.0119247 5.82867e-16 -1.4626e-16 0.0165925 0.00164473 "
      "0.0165925 0.00164473 -0.0165925 -0.00164473 -0.0165925 -0.00164473\n"
      " 0.0159 0.160429 -3.17098e-17 -6.93378e-17 3.02627e-16 0.150009 "
      "-8.61934e-17 -1.4626e-16 5.55937e-16 0.0403597 0.0808243 0.0403597 "
      "0.0808243 0.0403597 0.0808243 0.0403597 0.0808243\n"
      " 0.00332761 0.0438354 0.0247852 0.0247852 0.0620134 0.0408784 0.0165925 "
      "0.0165925 0.0403597 0.0699398 0.0446004 3.11592e-18 0.0118855 "
      "0.00334514 0.0207078 7.06088e-18 0.0118855\n"
      " 0.00350516 0.0379715 0.00498474 0.00498474 0.144146 0.0355068 "
      "0.00164473 0.00164473 0.0808243 0.0446004 0.0387592 -0.0118855 "
      "1.61347e-16 0.0207078 0.0350755 -0.0118855 2.86438e-16\n"
      " -0.00332761 -0.0438354 -0.0247852 0.0247852 0.0620134 -0.0408784 "
      "-0.0165925 0.0165925 0.0403597 3.11592e-18 -0.0118855 -0.0699398 "
      "-0.0446004 1.59804e-18 -0.0118855 -0.00334514 -0.0207078\n"
      " -0.00350516 -0.0379715 -0.00498474 0.00498474 0.144146 -0.0355068 "
      "-0.00164473 0.00164473 0.0808243 0.0118855 1.61347e-16 -0.0446004 "
      "-0.0387592 0.0118855 1.16578e-16 -0.0207078 -0.0350755\n"
      " 0.00332761 0.0438354 -0.0247852 -0.0247852 0.0620134 0.0408784 "
      "-0.0165925 -0.0165925 0.0403597 0.00334514 0.0207078 1.59804e-18 "
      "0.0118855 0.0699398 0.0446004 5.75984e-18 0.0118855\n"
      " 0.00350516 0.0379715 -0.00498474 -0.00498474 0.144146 0.0355068 "
      "-0.00164473 -0.00164473 0.0808243 0.0207078 0.0350755 -0.0118855 "
      "1.16578e-16 0.0446004 0.0387592 -0.0118855 2.30927e-16\n"
      " -0.00332761 -0.0438354 0.0247852 -0.0247852 0.0620134 -0.0408784 "
      "0.0165925 -0.0165925 0.0403597 7.06088e-18 -0.0118855 -0.00334514 "
      "-0.0207078 5.75984e-18 -0.0118855 -0.0699398 -0.0446004\n"
      " -0.00350516 -0.0379715 0.00498474 -0.00498474 0.144146 -0.0355068 "
      "0.00164473 -0.00164473 0.0808243 0.0118855 2.86438e-16 -0.0207078 "
      "-0.0350755 0.0118855 2.30927e-16 -0.0446004 -0.0387592";

  Eigen::MatrixXd Ref4 = ReadMatrixFromString(ref4_string);

  bool check_three1 = Ref0.isApprox(threec[0].FullMatrix(), 0.00001);
  if (!check_three1) {
    cout << "Res0" << endl;
    cout << threec[0].FullMatrix() << endl;
    cout << "0_ref" << endl;
    cout << Ref0 << endl;
  }
  BOOST_CHECK_EQUAL(check_three1, true);
  bool check_three2 = Ref4.isApprox(threec[4].FullMatrix(), 0.00001);
  if (!check_three2) {
    cout << "Res4" << endl;
    cout << threec[4].FullMatrix() << endl;
    cout << "4_ref" << endl;
    cout << Ref4 << endl;
  }
  BOOST_CHECK_EQUAL(check_three2, true);
}

BOOST_AUTO_TEST_CASE(threecenter_gwbse) {
  OPENMP::setMaxThreads(1);
  ofstream xyzfile("molecule.xyz");
  xyzfile << " 5" << endl;
  xyzfile << " methane" << endl;
  xyzfile << " C            .000000     .000000     .000000" << endl;
  xyzfile << " H            .629118     .629118     .629118" << endl;
  xyzfile << " H           -.629118    -.629118     .629118" << endl;
  xyzfile << " H            .629118    -.629118    -.629118" << endl;
  xyzfile << " H           -.629118     .629118    -.629118" << endl;
  xyzfile.close();

  ofstream basisfile("3-21G.xml");
  basisfile << "<basis name=\"3-21G\">" << endl;
  basisfile << "  <element name=\"H\">" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"5.447178e+00\">" << endl;
  basisfile << "        <contractions factor=\"1.562850e-01\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"8.245470e-01\">" << endl;
  basisfile << "        <contractions factor=\"9.046910e-01\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"1.831920e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "  </element>" << endl;
  basisfile << "  <element name=\"C\">" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"1.722560e+02\">" << endl;
  basisfile << "        <contractions factor=\"6.176690e-02\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"2.591090e+01\">" << endl;
  basisfile << "        <contractions factor=\"3.587940e-01\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"5.533350e+00\">" << endl;
  basisfile << "        <contractions factor=\"7.007130e-01\" type=\"S\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"SP\">" << endl;
  basisfile << "      <constant decay=\"3.664980e+00\">" << endl;
  basisfile << "        <contractions factor=\"-3.958970e-01\" type=\"S\"/>"
            << endl;
  basisfile << "        <contractions factor=\"2.364600e-01\" type=\"P\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"7.705450e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.215840e+00\" type=\"S\"/>"
            << endl;
  basisfile << "        <contractions factor=\"8.606190e-01\" type=\"P\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"SP\">" << endl;
  basisfile << "      <constant decay=\"1.958570e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"S\"/>"
            << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"P\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "  </element>" << endl;
  basisfile << "</basis>" << endl;
  basisfile.close();

  Orbitals orbitals;
  orbitals.QMAtoms().LoadFromFile("molecule.xyz");
  BasisSet basis;
  basis.Load("3-21G.xml");
  AOBasis aobasis;
  aobasis.Fill(basis, orbitals.QMAtoms());

  Eigen::MatrixXd MOs = Eigen::MatrixXd::Zero(17, 17);
  MOs << -0.00761992, -4.69664e-13, 8.35009e-15, -1.15214e-14, -0.0156169,
      -2.23157e-12, 1.52916e-14, 2.10997e-15, 8.21478e-15, 3.18517e-15,
      2.89043e-13, -0.00949189, 1.95787e-12, 1.22168e-14, -2.63092e-15,
      -0.22227, 1.00844, 0.233602, -3.18103e-12, 4.05093e-14, -4.70943e-14,
      0.1578, 4.75897e-11, -1.87447e-13, -1.02418e-14, 6.44484e-14, -2.6602e-14,
      6.5906e-12, -0.281033, -6.67755e-12, 2.70339e-14, -9.78783e-14, -1.94373,
      -0.36629, -1.63678e-13, -0.22745, -0.054851, 0.30351, 3.78688e-11,
      -0.201627, -0.158318, -0.233561, -0.0509347, -0.650424, 0.452606,
      -5.88565e-11, 0.453936, -0.165715, -0.619056, 7.0149e-12, 2.395e-14,
      -4.51653e-14, -0.216509, 0.296975, -0.108582, 3.79159e-11, -0.199301,
      0.283114, -0.0198557, 0.584622, 0.275311, 0.461431, -5.93732e-11,
      0.453057, 0.619523, 0.166374, 7.13235e-12, 2.56811e-14, -9.0903e-14,
      -0.21966, -0.235919, -0.207249, 3.75979e-11, -0.199736, -0.122681,
      0.255585, -0.534902, 0.362837, 0.461224, -5.91028e-11, 0.453245,
      -0.453298, 0.453695, 7.01644e-12, 2.60987e-14, 0.480866, 1.8992e-11,
      -2.56795e-13, 4.14571e-13, 2.2709, 4.78615e-10, -2.39153e-12,
      -2.53852e-13, -2.15605e-13, -2.80359e-13, 7.00137e-12, 0.145171,
      -1.96136e-11, -2.24876e-13, -2.57294e-14, 4.04176, 0.193617, -1.64421e-12,
      -0.182159, -0.0439288, 0.243073, 1.80753e-10, -0.764779, -0.600505,
      -0.885907, 0.0862014, 1.10077, -0.765985, 6.65828e-11, -0.579266,
      0.211468, 0.789976, -1.41532e-11, -1.29659e-13, -1.64105e-12, -0.173397,
      0.23784, -0.0869607, 1.80537e-10, -0.755957, 1.07386, -0.0753135,
      -0.989408, -0.465933, -0.78092, 6.72256e-11, -0.578145, -0.790571,
      -0.212309, -1.42443e-11, -1.31306e-13, -1.63849e-12, -0.17592, -0.188941,
      -0.165981, 1.79403e-10, -0.757606, -0.465334, 0.969444, 0.905262,
      -0.61406, -0.78057, 6.69453e-11, -0.578385, 0.578453, -0.578959,
      -1.40917e-11, -1.31002e-13, 0.129798, -0.274485, 0.00256652, -0.00509635,
      -0.0118465, 0.141392, -0.000497905, -0.000510338, -0.000526798,
      -0.00532572, 0.596595, 0.65313, -0.964582, -0.000361559, -0.000717866,
      -0.195084, 0.0246232, 0.0541331, -0.255228, 0.00238646, -0.0047388,
      -0.88576, 1.68364, -0.00592888, -0.00607692, -9.5047e-05, -0.000960887,
      0.10764, -0.362701, 1.53456, 0.000575205, 0.00114206, -0.793844,
      -0.035336, 0.129798, 0.0863299, -0.0479412, 0.25617, -0.0118465,
      -0.0464689, 0.0750316, 0.110468, -0.0436647, -0.558989, -0.203909,
      0.65313, 0.320785, 0.235387, 0.878697, -0.195084, 0.0246232, 0.0541331,
      0.0802732, -0.0445777, 0.238198, -0.88576, -0.553335, 0.893449, 1.31541,
      -0.00787816, -0.100855, -0.0367902, -0.362701, -0.510338, -0.374479,
      -1.39792, -0.793844, -0.035336, 0.129798, 0.0927742, -0.197727, -0.166347,
      -0.0118465, -0.0473592, 0.0582544, -0.119815, -0.463559, 0.320126,
      -0.196433, 0.65313, 0.321765, 0.643254, -0.642737, -0.195084, 0.0246232,
      0.0541331, 0.0862654, -0.183855, -0.154677, -0.88576, -0.563936, 0.693672,
      -1.42672, -0.0836372, 0.0577585, -0.0354411, -0.362701, -0.511897,
      -1.02335, 1.02253, -0.793844, -0.035336, 0.129798, 0.0953806, 0.243102,
      -0.0847266, -0.0118465, -0.0475639, -0.132788, 0.00985812, 0.507751,
      0.244188, -0.196253, 0.65313, 0.322032, -0.87828, -0.235242, -0.195084,
      0.0246232, 0.0541331, 0.088689, 0.226046, -0.0787824, -0.88576, -0.566373,
      -1.58119, 0.117387, 0.0916104, 0.0440574, -0.0354087, -0.362701,
      -0.512321, 1.39726, 0.374248, -0.793844, -0.035336;

  TCMatrix_gwbse tc;
  tc.Initialize(aobasis.AOBasisSize(), 0, 5, 0, 7);
  tc.Fill(aobasis, aobasis, MOs);

  Eigen::MatrixXd ref0b = Eigen::MatrixXd::Zero(8, 17);
  ref0b << 0.052453955915, 0.26945204403, -4.9641876153e-13, -4.3017169895e-13,
      -4.5508824269e-13, 0.27735882244, -7.0243260325e-13, -6.6612945222e-13,
      -6.7921572331e-13, 0.090104440628, 0.28902528964, 0.090104440629,
      0.28902528964, 0.090104440629, 0.28902528964, 0.090104440629,
      0.28902528964, -1.1155268557e-08, -6.8061504246e-08, -0.10899853614,
      -0.10375544679, -0.10526537461, -8.9385307499e-08, -0.11026675547,
      -0.10496269404, -0.10649013264, -0.13176416369, -0.11578580299,
      0.041441929548, 0.036416383001, 0.044535456481, 0.039134772786,
      0.045786627056, 0.040234212958, -3.5804367745e-09, -1.0802763365e-08,
      -0.026285674945, 0.14231625805, -0.11305692938, -1.1539101856e-08,
      -0.026591503739, 0.14397210606, -0.11437228963, 0.0012320642569,
      0.0010826601921, -0.023013802606, -0.020223043844, -0.094917168712,
      -0.083407008577, 0.11669893345, 0.10254735717, -4.332712982e-09,
      -2.2018043355e-08, 0.14544781729, -0.052034639861, -0.099317818251,
      -2.7857016712e-08, 0.14714001983, -0.052640069268, -0.10047339869,
      -0.0024464893656, -0.00214984874, 0.12297233119, 0.10806004661,
      -0.079853605298, -0.070170183026, -0.040672265127, -0.035740141775,
      0.047253781938, 0.19221821341, 3.2613352995e-11, 3.2622040307e-11,
      3.2385857572e-11, 0.10912151956, 4.1659397534e-11, 4.1630989674e-11,
      4.1355167053e-11, -0.0031472116733, 0.010847236182, -0.0031472117132,
      0.010847236135, -0.0031472117134, 0.010847236135, -0.0031472117132,
      0.010847236135, -9.2851961e-08, -5.002949892e-07, -0.078475753537,
      -0.077570437009, -0.077739721498, -6.4118466292e-07, -0.048412585503,
      -0.04785405442, -0.047958490892, 0.055883809681, 0.042287484666,
      -0.018366676723, -0.013898932902, -0.018718534244, -0.014165177912,
      -0.018799404164, -0.014226362882, 4.9818162148e-08, 2.7093703938e-07,
      -0.061619242479, 0.11019108878, -0.047748960593, 3.4790364457e-07,
      -0.038013517344, 0.067977673132, -0.02945684192, -0.00019684351386,
      -0.00014869611569, 0.029655944654, 0.022441493158, 0.023024865034,
      0.01742364516, -0.052483517022, -0.039714814863, 6.7265638491e-09,
      5.6985829797e-08, -0.09090463767, -0.0077281025645, 0.099476617254,
      7.8663430324e-08, -0.056079775674, -0.0047675621011, 0.061367908295,
      -0.0002016891448, -0.00015254552404, 0.043661903121, 0.033039797,
      -0.047356375446, -0.035835348615, 0.0038963601843, 0.0029485096143;

  bool check0_before = ref0b.isApprox(tc[0], 1e-5);
  if (!check0_before) {
    cout << "tc0" << endl;
    cout << tc[0] << endl;
    cout << "tc0_ref" << endl;
    cout << ref0b << endl;
  }
  BOOST_CHECK_EQUAL(check0_before, true);

  Eigen::MatrixXd ref2b = Eigen::MatrixXd::Zero(8, 17);
  ref2b << -3.58044e-09, -1.08028e-08, -0.0262857, 0.142316, -0.113057,
      -1.15391e-08, -0.0265915, 0.143972, -0.114372, 0.00123206, 0.00108266,
      -0.0230138, -0.020223, -0.0949172, -0.083407, 0.116699, 0.102547,
      9.54021e-09, -2.23538e-08, -0.00217721, 0.0101068, -0.00856299,
      -9.35387e-08, -0.00341331, 0.015845, -0.0134246, -0.00253892, -0.00159428,
      -0.0149157, -0.00936558, -0.0661098, -0.04151, 0.0835643, 0.0524694,
      0.0436978, 0.201784, -0.0215531, 0.00398082, -0.00501107, 0.232683,
      -0.0337897, 0.00624092, -0.00785608, 0.00994497, 0.228298, 0.0182043,
      0.233484, 0.150819, 0.316752, 0.222906, 0.362015, 1.16479e-09,
      -1.1638e-08, -0.00552672, -0.00926513, 0.0147801, -2.46699e-08,
      -0.00866447, -0.0145254, 0.0231714, -4.71412e-05, -2.96221e-05, -0.04426,
      -0.0277906, 0.118537, 0.0744287, -0.0742301, -0.0466087, -3.83792e-09,
      -1.12535e-08, -0.017741, 0.0960538, -0.0763057, -8.3889e-09, 0.00193927,
      -0.0104997, 0.00834096, -0.000237732, -0.000691164, 0.00444057, 0.01291,
      0.0183145, 0.0532455, -0.0225174, -0.0654643, -0.000267293, -0.00109263,
      0.00136471, -0.0064945, 0.00543171, -0.000943013, 0.00834688, -0.0397218,
      0.0332215, 0.000750763, 0.000994679, 0.00475257, 0.00856368, 0.0200663,
      0.0375282, -0.0248402, -0.0474083, 0.0323217, 0.132119, 0.0114547,
      -0.00489126, 0.00694045, 0.114024, 0.0700617, -0.0299176, 0.0424512,
      0.00337714, 0.0578195, -0.00433905, 0.0432251, -0.0213373, 0.0110747,
      -0.0658904, -0.0731935, -0.0141772, -0.057951, -0.00894259, -0.00455883,
      0.00757611, -0.0500143, -0.0546965, -0.0278838, 0.0463387, -0.00148532,
      -0.0253688, -0.012847, -0.0468582, 0.0493546, 0.0707899, 0.00366008,
      -0.0156367;

  bool check2_before = ref2b.isApprox(tc[2], 1e-5);
  if (!check2_before) {
    cout << "tc2" << endl;
    cout << tc[2] << endl;
    cout << "tc2_ref" << endl;
    cout << ref2b << endl;
  }

  BOOST_CHECK_EQUAL(check2_before, true);

  Eigen::MatrixXd ref4b = Eigen::MatrixXd::Zero(8, 17);
  ref4b << 0.0472538, 0.192218, 3.2613e-11, 3.26223e-11, 3.23861e-11, 0.109122,
      4.16604e-11, 4.16302e-11, 4.13551e-11, -0.00314721, 0.0108472,
      -0.00314721, 0.0108472, -0.00314721, 0.0108472, -0.00314721, 0.0108472,
      -9.69614e-09, -4.99998e-08, -0.0735666, -0.0700279, -0.071047,
      -2.88054e-08, 0.0080416, 0.0076548, 0.00776616, 0.0254243, 0.0739155,
      -0.00799633, -0.0232476, -0.00859324, -0.024983, -0.00883465, -0.0256848,
      -3.83792e-09, -1.12535e-08, -0.017741, 0.0960538, -0.0763057, -8.3889e-09,
      0.00193927, -0.0104997, 0.00834096, -0.000237732, -0.000691164,
      0.00444057, 0.01291, 0.0183145, 0.0532455, -0.0225174, -0.0654643,
      -4.05403e-09, -1.74883e-08, 0.0981674, -0.0351198, -0.0670328,
      -1.08265e-08, -0.0107307, 0.00383896, 0.00732739, 0.000472061, 0.00137243,
      -0.0237278, -0.0689835, 0.0154079, 0.0447953, 0.00784782, 0.0228158,
      0.0455444, 0.117954, 4.4569e-11, 4.45493e-11, 4.42396e-11, 0.0478717,
      -1.61634e-11, -1.61317e-11, -1.60405e-11, 0.0387858, 0.261043, 0.0387858,
      0.261043, 0.0387858, 0.261043, 0.0387858, 0.261043, -8.50072e-08,
      -3.87116e-07, -0.0459515, -0.0454214, -0.0455205, -2.34191e-07,
      -0.0225363, -0.0222763, -0.0223249, -0.0485099, -0.161219, 0.015943,
      0.0529854, 0.0162484, 0.0540005, 0.0163186, 0.0542338, 4.54389e-08,
      2.08758e-07, -0.0360811, 0.0645223, -0.0279594, 1.25806e-07, -0.0176956,
      0.0316445, -0.0137123, 0.000170843, 0.000567771, -0.0257425, -0.0855535,
      -0.0199865, -0.0664236, 0.0455581, 0.151409, 4.78832e-09, 3.70108e-08,
      -0.0532291, -0.00452519, 0.0582485, 1.85207e-08, -0.0261058, -0.00221932,
      0.0285675, 0.000175092, 0.000581897, -0.0379003, -0.125959, 0.0411074,
      0.136617, -0.00338222, -0.0112405;

  bool check4_before = ref4b.isApprox(tc[4], 1e-5);
  if (!check4_before) {
    cout << "tc4" << endl;
    cout << tc[4] << endl;
    cout << "tc4_ref" << endl;
    cout << ref4b << endl;
  }

  BOOST_CHECK_EQUAL(check4_before, true);
}

BOOST_AUTO_TEST_CASE(large_l_test) {
  OPENMP::setMaxThreads(1);
  std::ofstream xyzfile("C2.xyz");
  xyzfile << " 2" << std::endl;
  xyzfile << " C2" << std::endl;
  xyzfile << " C            .000000     .000000     .000000" << std::endl;
  xyzfile << " C            1.000000     .000000     .000000" << std::endl;
  xyzfile.close();

  QMMolecule mol("C", 0);
  mol.LoadFromFile("C2.xyz");

  ofstream basisfile("G.xml");
  basisfile << "<basis name=\"G\">" << endl;
  basisfile << "  <element name=\"C\">" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"G\">" << endl;
  basisfile << "      <constant decay=\"5.447178e+00\">" << endl;
  basisfile << "        <contractions factor=\"1.562850e-01\" type=\"G\"/>"
            << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "  </element>" << endl;
  basisfile << "</basis>" << std::endl;
  basisfile.close();

  ofstream auxbasisfile("I.xml");
  auxbasisfile << "<basis name=\"I\">" << endl;
  auxbasisfile << "  <element name=\"C\">" << endl;
  auxbasisfile << "    <shell scale=\"1.0\" type=\"I\">" << endl;
  auxbasisfile << "      <constant decay=\"5.447178e+00\">" << endl;
  auxbasisfile << "        <contractions factor=\"1.562850e-01\" type=\"I\"/>"
               << endl;
  auxbasisfile << "      </constant>" << endl;
  auxbasisfile << "    </shell>" << endl;
  auxbasisfile << "  </element>" << endl;
  auxbasisfile << "</basis>" << std::endl;
  auxbasisfile.close();

  BasisSet basisset;
  basisset.Load("G.xml");
  AOBasis dftbasis;
  dftbasis.Fill(basisset, mol);
  BasisSet auxbasisset;
  auxbasisset.Load("I.xml");
  AOBasis auxbasis;
  auxbasis.Fill(auxbasisset, mol);

  TCMatrix_dft threec;
  threec.Fill(auxbasis, dftbasis);
  int dftbasissize = 18;
  // we only test half of it because it gets a bit big
  std::array<Eigen::MatrixXd, 4> ref;
  std::array<std::string, 4> ref_string;

  ref_string[0] =
      " 0.0813694 1.21921e-19 -6.67319e-20 0.000255871 -0.000368408 "
      "-1.69226e-19 8.86939e-20 -4.85634e-05 3.20907e-05 -0.000890999 "
      "-3.99401e-22 2.69842e-21 -5.91818e-06 0.00122546 8.12218e-22 "
      "-1.85631e-21 1.18137e-05 -0.00132349\n"
      " 1.21921e-19 -0.00300879 -0.000183283 1.39412e-20 1.8567e-20 "
      "-0.00046873 -0.000113122 -1.97911e-20 -2.31653e-19 -2.24577e-22 "
      "3.21609e-05 3.23495e-06 -2.95529e-22 2.42129e-22 -0.000107498 "
      "-1.59518e-06 8.85921e-22 1.55986e-22\n"
      "-6.67319e-20 -0.000183283 -0.00301615 1.84691e-19 -8.87006e-20 "
      "0.000222699 -0.000510301 6.14499e-20 -1.63723e-19 -2.81792e-21 "
      "-3.31055e-06 -0.000591671 -9.95227e-22 4.81524e-21 8.41652e-06 "
      "0.000648742 1.41146e-21 -8.83074e-21\n"
      " 0.000255871 1.39412e-20 1.84691e-19 -0.087344 -6.31827e-05 4.45592e-20 "
      "1.74272e-19 -0.000118643 -0.000130532 5.79545e-06 4.32193e-22 "
      "-6.61661e-22 0.000466426 -6.4717e-06 -9.59239e-22 -4.64811e-23 "
      "-0.00100822 1.32816e-06\n"
      "-0.000368408 1.8567e-20 -8.87006e-20 -6.31827e-05 -0.0872068 "
      "-9.31614e-20 1.13089e-19 0.000129546 -0.00016663 0.00115455 4.92141e-22 "
      "-4.84529e-21 6.68228e-06 -0.00160487 -9.72892e-22 3.66195e-21 "
      "-1.49108e-05 0.00176922\n"
      "-1.69226e-19 -0.00046873 0.000222699 4.45592e-20 -9.31614e-20 0.0694623 "
      "1.96013e-06 7.90463e-22 -6.12856e-20 6.06213e-22 -0.000105821 "
      "-8.22404e-06 8.96139e-22 -7.12387e-22 0.000352313 4.60011e-06 "
      "-2.68399e-21 -1.04111e-22\n"
      " 8.86939e-20 -0.000113122 -0.000510301 1.74272e-19 1.13089e-19 "
      "1.96013e-06 0.0694836 6.03332e-20 1.91284e-21 2.45391e-21 1.68297e-06 "
      "0.000611142 7.18169e-22 -4.35397e-21 -4.84092e-06 -0.000719351 "
      "-8.86829e-22 8.52525e-21\n"
      "-4.85634e-05 -1.97911e-20 6.14499e-20 -0.000118643 0.000129546 "
      "7.90463e-22 6.03332e-20 -0.0143026 -1.74412e-06 -1.15682e-05 "
      "-1.45451e-21 2.24325e-21 -0.000855248 1.44396e-05 3.34911e-21 "
      "-3.75641e-22 0.00144364 -7.45132e-06\n"
      " 3.20907e-05 -2.31653e-19 -1.63723e-19 -0.000130532 -0.00016663 "
      "-6.12856e-20 1.91284e-21 -1.74412e-06 -0.0143258 -0.00106106 "
      "-2.08579e-22 9.96766e-21 -1.68617e-06 0.00150178 2.56404e-22 "
      "-8.7038e-21 8.50369e-06 -0.00148161\n"
      "-0.000890999 -2.24577e-22 -2.81792e-21 5.79545e-06 0.00115455 "
      "6.06213e-22 2.45391e-21 -1.15682e-05 -0.00106106 -0.00994595 "
      "4.06955e-20 -1.81051e-19 -0.000348414 0.00276106 2.18459e-19 "
      "6.99607e-20 6.64906e-05 -0.000942407\n"
      "-3.99401e-22 3.21609e-05 -3.31055e-06 4.32193e-22 4.92141e-22 "
      "-0.000105821 1.68297e-06 -1.45451e-21 -2.08579e-22 4.06955e-20 "
      "-0.00672396 0.000250442 -8.27277e-20 -1.56997e-19 0.00168277 "
      "0.000154644 -1.03284e-19 3.19687e-19\n"
      " 2.69842e-21 3.23495e-06 -0.000591671 -6.61661e-22 -4.84529e-21 "
      "-8.22404e-06 0.000611142 2.24325e-21 9.96766e-21 -1.81051e-19 "
      "0.000250442 -0.00765158 -1.0287e-19 -1.62451e-19 -0.000301095 "
      "0.00149804 -7.01564e-20 -2.46921e-21\n"
      "-5.91818e-06 -2.95529e-22 -9.95227e-22 0.000466426 6.68228e-06 "
      "8.96139e-22 7.18169e-22 -0.000855248 -1.68617e-06 -0.000348414 "
      "-8.27277e-20 -1.0287e-19 -0.00642127 8.30795e-05 2.16233e-19 "
      "-1.74692e-20 0.00466022 0.00017558\n"
      " 0.00122546 2.42129e-22 4.81524e-21 -6.4717e-06 -0.00160487 "
      "-7.12387e-22 -4.35397e-21 1.44396e-05 0.00150178 0.00276106 "
      "-1.56997e-19 -1.62451e-19 8.30795e-05 -0.00809455 -1.06038e-19 "
      "1.68828e-19 -0.000177806 0.00520077\n"
      " 8.12218e-22 -0.000107498 8.41652e-06 -9.59239e-22 -9.72892e-22 "
      "0.000352313 -4.84092e-06 3.34911e-21 2.56404e-22 2.18459e-19 0.00168277 "
      "-0.000301095 2.16233e-19 -1.06038e-19 -0.00896904 7.67552e-07 "
      "-8.45039e-20 -1.61592e-20\n"
      "-1.85631e-21 -1.59518e-06 0.000648742 -4.64811e-23 3.66195e-21 "
      "4.60011e-06 -0.000719351 -3.75641e-22 -8.7038e-21 6.99607e-20 "
      "0.000154644 0.00149804 -1.74692e-20 1.68828e-19 7.67552e-07 -0.00899039 "
      "1.71012e-20 -8.86859e-20\n"
      " 1.18137e-05 8.85921e-22 1.41146e-21 -0.00100822 -1.49108e-05 "
      "-2.68399e-21 -8.86829e-22 0.00144364 8.50369e-06 6.64906e-05 "
      "-1.03284e-19 -7.01564e-20 0.00466022 -0.000177806 -8.45039e-20 "
      "1.71012e-20 -0.0192904 9.39644e-07\n"
      " -0.00132349 1.55986e-22 -8.83074e-21 1.32816e-06 0.00176922 "
      "-1.04111e-22 8.52525e-21 -7.45132e-06 -0.00148161 -0.000942407 "
      "3.19687e-19 -2.46921e-21 0.00017558 0.00520077 -1.61592e-20 "
      "-8.86859e-20 9.39644e-07 -0.019062";

  ref_string[1] =
      "-5.43523e-17 0.0581771 1.28112e-17 -1.56812e-18 4.5967e-18 7.65466e-05 "
      "-5.50132e-19 -2.67696e-18 9.00625e-18 -4.2557e-19 -6.84184e-05 "
      "3.18125e-20 -9.41754e-20 5.47042e-19 0.000162848 -2.16955e-20 "
      "2.98515e-19 -3.53837e-19\n"
      " 0.0581771 -5.30631e-17 6.31086e-18 7.64125e-18 -0.0390494 3.46556e-18 "
      "-5.64649e-18 -2.53662e-17 -4.64876e-05 -0.00010165 -7.99358e-20 "
      "1.304e-19 -7.25741e-20 0.000130282 2.05121e-19 -9.17829e-20 1.76009e-19 "
      "-6.01776e-05\n"
      " 1.28112e-17 6.31086e-18 -5.68161e-17 0.0389678 8.54736e-18 4.40636e-18 "
      "6.29327e-18 2.58404e-05 2.97988e-17 -2.02598e-20 -1.39168e-19 "
      "1.24658e-18 -0.000221617 -1.1498e-19 3.87322e-19 -1.03433e-18 "
      "0.000653992 9.72262e-19\n"
      "-1.56812e-18 7.64125e-18 0.0389678 -4.99589e-17 2.34453e-18 "
      "-1.51622e-18 0.0639804 -1.16248e-18 1.88954e-17 9.98969e-20 5.42783e-20 "
      "-0.000236757 2.35927e-19 -1.73459e-19 -1.0818e-19 0.000125724 "
      "-4.89225e-19 2.37476e-19\n"
      " 4.5967e-18 -0.0390494 8.54736e-18 2.34453e-18 -6.16283e-17 -0.0639315 "
      "-2.86172e-17 8.55423e-18 2.76038e-18 5.40981e-19 8.00951e-05 "
      "1.06257e-19 1.68036e-19 -7.4701e-19 -0.000198317 -1.14083e-19 "
      "-5.13226e-19 6.74611e-19\n"
      " 7.65466e-05 3.46556e-18 4.40636e-18 -1.51622e-18 -0.0639315 "
      "-5.49077e-17 -1.82847e-17 3.85147e-18 -0.0259588 0.000214762 2.0558e-19 "
      "-3.85377e-19 1.32678e-19 -0.000283019 -5.60102e-19 2.75892e-19 "
      "-3.05564e-19 0.000153394\n"
      "-5.50132e-19 -5.64649e-18 6.29327e-18 0.0639804 -2.86172e-17 "
      "-1.82847e-17 -6.0067e-17 0.0259281 3.29362e-18 -4.08831e-20 1.06802e-19 "
      "-1.07791e-18 6.09088e-05 2.02004e-19 -3.01332e-19 1.03987e-18 "
      "-0.000247983 -1.04095e-18\n"
      "-2.67696e-18 -2.53662e-17 2.58404e-05 -1.16248e-18 8.55423e-18 "
      "3.85147e-18 0.0259281 -5.99519e-17 -2.321e-20 -3.32131e-19 -1.18187e-19 "
      "0.000571075 -4.51091e-19 5.55723e-19 2.1991e-19 -0.000311016 "
      "1.48718e-18 -7.27807e-19\n"
      " 9.00625e-18 -4.64876e-05 2.97988e-17 1.88954e-17 2.76038e-18 "
      "-0.0259588 3.29362e-18 -2.321e-20 -5.97415e-17 -3.59704e-19 "
      "-2.55361e-06 -1.10655e-18 -2.46058e-19 6.94632e-19 4.23149e-05 "
      "1.05022e-18 7.37562e-19 -1.53758e-18\n"
      " -4.2557e-19 -0.00010165 -2.02598e-20 9.98969e-20 5.40981e-19 "
      "0.000214762 -4.08831e-20 -3.32131e-19 -3.59704e-19 -5.85111e-17 "
      "-0.000279182 4.41282e-18 -3.00215e-18 3.77869e-18 -0.00107761 "
      "3.97249e-19 1.00303e-17 -7.52114e-18\n"
      "-6.84184e-05 -7.99358e-20 -1.39168e-19 5.42783e-20 8.00951e-05 "
      "2.0558e-19 1.06802e-19 -1.18187e-19 -2.55361e-06 -0.000279182 "
      "-4.48853e-17 -1.34732e-17 3.63975e-18 0.000583044 3.82116e-18 "
      "1.92575e-17 1.15512e-17 0.000561393\n"
      " 3.18125e-20 1.304e-19 1.24658e-18 -0.000236757 1.06257e-19 "
      "-3.85377e-19 -1.07791e-18 0.000571075 -1.10655e-18 4.41282e-18 "
      "-1.34732e-17 -4.87054e-17 0.000933746 2.20928e-18 -2.02725e-17 "
      "3.15745e-18 -0.00101792 -1.5996e-17\n"
      "-9.41754e-20 -7.25741e-20 -0.000221617 2.35927e-19 1.68036e-19 "
      "1.32678e-19 6.09088e-05 -4.51091e-19 -2.46058e-19 -3.00215e-18 "
      "3.63975e-18 0.000933746 -3.92514e-17 -3.45245e-18 -1.02069e-17 "
      "-0.00105994 3.92872e-18 -1.07084e-17\n"
      " 5.47042e-19 0.000130282 -1.1498e-19 -1.73459e-19 -7.4701e-19 "
      "-0.000283019 2.02004e-19 5.55723e-19 6.94632e-19 3.77869e-18 "
      "0.000583044 2.20928e-18 -3.45245e-18 -3.15059e-17 0.000450629 "
      "3.10939e-18 9.77337e-18 -2.34777e-18\n"
      " 0.000162848 2.05121e-19 3.87322e-19 -1.0818e-19 -0.000198317 "
      "-5.60102e-19 -3.01332e-19 2.1991e-19 4.23149e-05 -0.00107761 "
      "3.82116e-18 -2.02725e-17 -1.02069e-17 0.000450629 -6.30261e-17 "
      "3.41391e-19 1.26605e-18 -0.00128728\n"
      "-2.16955e-20 -9.17829e-20 -1.03433e-18 0.000125724 -1.14083e-19 "
      "2.75892e-19 1.03987e-18 -0.000311016 1.05022e-18 3.97249e-19 "
      "1.92575e-17 3.15745e-18 -0.00105994 3.10939e-18 3.41391e-19 -5.5022e-17 "
      "0.00157102 2.37117e-18\n"
      " 2.98515e-19 1.76009e-19 0.000653992 -4.89225e-19 -5.13226e-19 "
      "-3.05564e-19 -0.000247983 1.48718e-18 7.37562e-19 1.00303e-17 "
      "1.15512e-17 -0.00101792 3.92872e-18 9.77337e-18 1.26605e-18 0.00157102 "
      "-4.85784e-17 7.46174e-19\n"
      "-3.53837e-19 -6.01776e-05 9.72262e-19 2.37476e-19 6.74611e-19 "
      "0.000153394 -1.04095e-18 -7.27807e-19 -1.53758e-18 -7.52114e-18 "
      "0.000561393 -1.5996e-17 -1.07084e-17 -2.34777e-18 -0.00128728 "
      "2.37117e-18 7.46174e-19 -4.87189e-17";

  ref_string[2] =
      " 0.000763723 5.40212e-18 -2.82406e-17 0.000201143 -0.000126435 "
      "-7.33223e-18 -2.02354e-18 -2.41736e-05 1.26508e-05 -1.14084e-06 "
      "2.92419e-20 -2.98359e-19 0.000439466 1.57204e-06 -6.37752e-20 "
      "2.4717e-19 -0.00103123 -1.57141e-06\n"
      " 5.40212e-18 0.00074744 0.058097 -1.938e-17 3.96721e-19 -0.000150302 "
      "-0.066083 2.11639e-17 -6.05155e-18 3.24322e-20 -1.45995e-07 0.000109393 "
      "1.07735e-19 -3.02298e-20 3.77766e-07 -9.01414e-05 -3.13727e-19 "
      "-3.44263e-20\n"
      "-2.82406e-17 0.058097 0.000784973 7.76177e-18 -1.71499e-17 0.0662129 "
      "-0.000174021 5.65924e-18 -2.13179e-17 2.77435e-19 -6.15117e-05 "
      "2.34152e-06 9.65702e-20 -3.46625e-19 0.000221424 -2.00233e-06 "
      "3.24741e-20 -9.45209e-20\n"
      " 0.000201143 -1.938e-17 7.76177e-18 0.000772363 -0.000152242 "
      "2.16648e-17 5.61269e-18 -1.40429e-05 0.0438336 -0.000470951 "
      "-8.93733e-20 5.6331e-20 5.82317e-07 0.000546308 2.06945e-19 "
      "-1.50765e-22 -1.30364e-06 -0.000223298\n"
      "-0.000126435 3.96721e-19 -1.71499e-17 -0.000152242 0.000801729 "
      "-5.3772e-18 4.24194e-17 -0.0437828 -1.79119e-05 1.41615e-06 "
      "-2.57274e-20 3.43173e-19 -0.000440928 -2.06407e-06 4.49636e-20 "
      "-2.79427e-19 0.00103682 2.44447e-06\n"
      "-7.33223e-18 -0.000150302 0.0662129 2.16648e-17 -5.3772e-18 0.000832365 "
      "2.55859e-05 -1.00518e-17 -2.26815e-18 -9.13616e-20 3.61622e-07 "
      "-0.000374926 -2.13749e-19 8.62e-20 -9.94085e-07 0.000315638 6.33917e-19 "
      "9.10312e-20\n"
      "-2.02354e-18 -0.066083 -0.000174021 5.61269e-18 4.24194e-17 2.55859e-05 "
      "0.000836181 2.79135e-18 -9.50919e-18 -1.54479e-19 3.13903e-05 "
      "-1.91144e-06 -6.07816e-20 1.65087e-19 -0.000132339 1.89262e-06 "
      "-1.03188e-19 2.83554e-19\n"
      "-2.41736e-05 2.11639e-17 5.65924e-18 -1.40429e-05 -0.0437828 "
      "-1.00518e-17 2.79135e-18 0.000931744 -1.2951e-05 0.000872958 "
      "2.27293e-19 -2.04498e-20 -1.04977e-06 -0.000975911 -5.30941e-19 "
      "-1.23036e-19 3.33804e-06 0.000298789\n"
      " 1.26508e-05 -6.05155e-18 -2.13179e-17 0.0438336 -1.79119e-05 "
      "-2.26815e-18 -9.50919e-18 -1.2951e-05 0.000930169 -8.0589e-07 "
      "-3.93507e-20 3.36471e-19 3.80322e-05 1.6191e-06 1.45962e-19 -3.3523e-19 "
      "-0.000202327 -3.73838e-06\n"
      "-1.14084e-06 3.24322e-20 2.77435e-19 -0.000470951 1.41615e-06 "
      "-9.13616e-20 -1.54479e-19 0.000872958 -8.0589e-07 -0.000967196 "
      "1.57764e-18 -1.32157e-17 0.00212322 0.000144172 -2.16816e-17 "
      "8.52557e-18 -0.000836608 -1.43171e-05\n"
      " 2.92419e-20 -1.45995e-07 -6.15117e-05 -8.93733e-20 -2.57274e-20 "
      "3.61622e-07 3.13903e-05 2.27293e-19 -3.93507e-20 1.57764e-18 "
      "-0.000944085 3.59446e-05 -3.39514e-18 1.18454e-17 0.000165601 "
      "-0.0018612 -2.39501e-17 -4.17059e-17\n"
      "-2.98359e-19 0.000109393 2.34152e-06 5.6331e-20 3.43173e-19 "
      "-0.000374926 -1.91144e-06 -2.04498e-20 3.36471e-19 -1.32157e-17 "
      "3.59446e-05 -0.000997514 1.38405e-17 -1.23808e-17 0.00282045 "
      "0.000193125 -2.18309e-18 8.45631e-18\n"
      " 0.000439466 1.07735e-19 9.65702e-20 5.82317e-07 -0.000440928 "
      "-2.13749e-19 -6.07816e-20 -1.04977e-06 3.80322e-05 0.00212322 "
      "-3.39514e-18 1.38405e-17 -0.000977976 -0.00200583 2.23934e-17 "
      "1.29076e-17 1.89954e-05 -0.00210035\n"
      " 1.57204e-06 -3.02298e-20 -3.46625e-19 0.000546308 -2.06407e-06 "
      "8.62e-20 1.65087e-19 -0.000975911 1.6191e-06 0.000144172 1.18454e-17 "
      "-1.23808e-17 -0.00200583 -0.00101142 9.18044e-18 6.04844e-18 0.00337152 "
      "2.27886e-05\n"
      "-6.37752e-20 3.77766e-07 0.000221424 2.06945e-19 4.49636e-20 "
      "-9.94085e-07 -0.000132339 -5.30941e-19 1.45962e-19 -2.16816e-17 "
      "0.000165601 0.00282045 2.23934e-17 9.18044e-18 -0.00104623 0.000278571 "
      "-1.29488e-18 -4.94696e-19\n"
      " 2.4717e-19 -9.01414e-05 -2.00233e-06 -1.50765e-22 -2.79427e-19 "
      "0.000315638 1.89262e-06 -1.23036e-19 -3.3523e-19 8.52557e-18 -0.0018612 "
      "0.000193125 1.29076e-17 6.04844e-18 0.000278571 -0.00105004 3.90914e-19 "
      "-2.07673e-18\n"
      " -0.00103123 -3.13727e-19 3.24741e-20 -1.30364e-06 0.00103682 "
      "6.33917e-19 -1.03188e-19 3.33804e-06 -0.000202327 -0.000836608 "
      "-2.39501e-17 -2.18309e-18 1.89954e-05 0.00337152 -1.29488e-18 "
      "3.90914e-19 -0.00115673 -3.94179e-05\n"
      "-1.57141e-06 -3.44263e-20 -9.45209e-20 -0.000223298 2.44447e-06 "
      "9.10312e-20 2.83554e-19 0.000298789 -3.73838e-06 -1.43171e-05 "
      "-4.17059e-17 8.45631e-18 -0.00210035 2.27886e-05 -4.94696e-19 "
      "-2.07673e-18 -3.94179e-05 -0.00115522";

  ref_string[3] =
      " -0.00771459 -1.77597e-18 -3.20792e-18 2.07788e-05 0.00106957 "
      "-8.48856e-19 -5.66528e-18 -3.33679e-06 -0.000349271 0.00042977 "
      "2.27517e-21 -8.88604e-20 -4.08361e-06 -0.000874484 -5.09229e-21 "
      "6.92328e-20 8.15166e-06 0.00186155\n"
      "-1.77597e-18 -0.00704949 -1.34933e-05 -5.3934e-18 1.66035e-18 "
      "0.000352228 -8.22431e-06 4.40752e-18 2.1232e-19 6.17308e-21 -0.00011235 "
      "2.00519e-06 1.34036e-20 -8.25109e-21 0.000243261 -9.08221e-07 "
      "-4.67211e-20 5.12625e-21\n"
      "-3.20792e-18 -1.34933e-05 -0.00852371 -6.84319e-19 1.30191e-18 "
      "2.15141e-05 0.0011608 1.48149e-18 5.14438e-18 8.71072e-20 -2.29569e-06 "
      "-0.000937819 1.32992e-20 -1.4671e-19 5.83678e-06 0.00128329 "
      "-3.23934e-20 2.49617e-19\n"
      " 2.07788e-05 -5.3934e-18 -6.84319e-19 -0.00741563 -9.84874e-06 "
      "3.91964e-18 -2.44264e-18 0.0658271 -1.40706e-05 3.61203e-06 "
      "-1.56246e-20 1.00108e-20 0.000579775 -3.91612e-06 3.75201e-20 "
      "-4.89827e-21 -0.000987805 3.01259e-07\n"
      " 0.00106957 1.66035e-18 1.30191e-18 -9.84874e-06 -0.00840001 "
      "1.56244e-18 3.4552e-18 8.24209e-06 -0.0647473 -0.000941901 -2.49879e-21 "
      "1.45503e-19 4.72525e-06 0.00163956 5.60812e-21 -1.20092e-19 "
      "-1.05454e-05 -0.00294678\n"
      "-8.48856e-19 0.000352228 2.15141e-05 3.91964e-18 1.56244e-18 -0.0945527 "
      "5.67416e-06 -9.90221e-19 7.45901e-19 -1.43521e-20 0.000240009 "
      "-5.09719e-06 -3.28852e-20 1.96639e-20 -0.000527982 2.63882e-06 "
      "1.14723e-19 -1.38149e-20\n"
      "-5.66528e-18 -8.22431e-06 0.0011608 -2.44264e-18 3.4552e-18 5.67416e-06 "
      "0.0783776 -6.96327e-19 -9.25382e-19 -6.85503e-20 1.24552e-06 0.00142252 "
      "-5.31666e-21 1.17508e-19 -3.5641e-06 -0.00149684 1.15075e-20 "
      "-2.09893e-19\n"
      "-3.33679e-06 4.40752e-18 1.48149e-18 0.0658271 8.24209e-06 -9.90221e-19 "
      "-6.96327e-19 -0.00828105 -2.42527e-06 -7.20841e-06 4.68701e-20 "
      "-2.99137e-20 -0.00094624 8.73493e-06 -1.16657e-19 1.58867e-20 "
      "0.00178345 -3.21703e-06\n"
      "-0.000349271 2.1232e-19 5.14438e-18 -1.40706e-05 -0.0647473 7.45901e-19 "
      "-9.25382e-19 -2.42527e-06 -0.00868438 0.00224633 -1.90674e-21 "
      "-2.10636e-19 -1.67686e-06 -0.00339694 4.86672e-21 1.935e-19 7.26058e-06 "
      "0.00489088\n"
      " 0.00042977 6.17308e-21 8.71072e-20 3.61203e-06 -0.000941901 "
      "-1.43521e-20 -6.85503e-20 -7.20841e-06 0.00224633 -0.00374038 "
      "1.24565e-18 -3.30341e-19 -0.000376362 -0.00912856 -7.01089e-19 "
      "-2.5784e-18 7.22143e-05 0.00602099\n"
      " 2.27517e-21 -0.00011235 -2.29569e-06 -1.56246e-20 -2.49879e-21 "
      "0.000240009 1.24552e-06 4.68701e-20 -1.90674e-21 1.24565e-18 -0.0104098 "
      "0.000271542 -1.4343e-18 -3.77324e-19 0.000349208 0.000167767 "
      "1.12369e-18 -2.14753e-18\n"
      "-8.88604e-20 2.00519e-06 -0.000937819 1.00108e-20 1.45503e-19 "
      "-5.09719e-06 0.00142252 -2.99137e-20 -2.10636e-19 -3.30341e-19 "
      "0.000271542 0.00362349 1.22238e-18 1.67257e-18 -0.000322745 -0.0115724 "
      "-4.78417e-19 1.98736e-18\n"
      "-4.08361e-06 1.34036e-20 1.32992e-20 0.000579775 4.72525e-06 "
      "-3.28852e-20 -5.31666e-21 -0.00094624 -1.67686e-06 -0.000376362 "
      "-1.4343e-18 1.22238e-18 -0.0100334 8.6304e-05 1.0966e-18 2.13534e-18 "
      "-0.00494364 0.000187168\n"
      "-0.000874484 -8.25109e-21 -1.4671e-19 -3.91612e-06 0.00163956 "
      "1.96639e-20 1.17508e-19 8.73493e-06 -0.00339694 -0.00912856 "
      "-3.77324e-19 1.67257e-18 8.6304e-05 0.0038285 -7.45853e-19 4.13726e-19 "
      "-0.000193665 -0.00597263\n"
      "-5.09229e-21 0.000243261 5.83678e-06 3.75201e-20 5.60812e-21 "
      "-0.000527982 -3.5641e-06 -1.16657e-19 4.86672e-21 -7.01089e-19 "
      "0.000349208 -0.000322745 1.0966e-18 -7.45853e-19 -0.00223485 "
      "4.79663e-06 1.30869e-18 -4.38832e-19\n"
      " 6.92328e-20 -9.08221e-07 0.00128329 -4.89827e-21 -1.20092e-19 "
      "2.63882e-06 -0.00149684 1.58867e-20 1.935e-19 -2.5784e-18 0.000167767 "
      "-0.0115724 2.13534e-18 4.13726e-19 4.79663e-06 -0.00392453 3.78512e-19 "
      "1.4209e-18\n"
      " 8.15166e-06 -4.67211e-20 -3.23934e-20 -0.000987805 -1.05454e-05 "
      "1.14723e-19 1.15075e-20 0.00178345 7.26058e-06 7.22143e-05 1.12369e-18 "
      "-4.78417e-19 -0.00494364 -0.000193665 1.30869e-18 3.78512e-19 "
      "-0.00594456 -6.65368e-07\n"
      " 0.00186155 5.12625e-21 2.49617e-19 3.01259e-07 -0.00294678 "
      "-1.38149e-20 -2.09893e-19 -3.21703e-06 0.00489088 0.00602099 "
      "-2.14753e-18 1.98736e-18 0.000187168 -0.00597263 -4.38832e-19 "
      "1.4209e-18 -6.65368e-07 0.00117692";

  std::array<int, 4> indeces = {0, 1, 3, 12};
  for (int i = 0; i < 4; i++) {
    ref[i] = ReadMatrixFromString(ref_string[i]);
  }

  for (int i = 0; i < 4; i++) {
    bool check = ref[i].isApprox(threec[indeces[i]].FullMatrix(), 1e-5);
    BOOST_CHECK_EQUAL(check, true);
    if (!check) {
      cout << "ref " << indeces[i] << endl;
      cout << ref[i] << endl;
      cout << "result " << indeces[i] << endl;
      cout << threec[indeces[i]].FullMatrix() << endl;
    }
  }
}
BOOST_AUTO_TEST_SUITE_END()
