/*
 * Copyright 2009-2018 The VOTCA Development Team (http://www.votca.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
#define BOOST_TEST_MAIN

#define BOOST_TEST_MODULE threecenter_test
#include <boost/test/unit_test.hpp>
#include <votca/xtp/orbitals.h>
#include <votca/xtp/threecenter.h>
#include <votca/xtp/ERIs.h>

using namespace votca::xtp;
using namespace std;

BOOST_AUTO_TEST_SUITE(threecenter_test)

BOOST_AUTO_TEST_CASE(threecenter_dft) {
  
  ofstream xyzfile("molecule.xyz");
  xyzfile << " 5" << endl;
  xyzfile << " methane" << endl;
  xyzfile << " C            .000000     .000000     .000000" << endl;
  xyzfile << " H            .629118     .629118     .629118" << endl;
  xyzfile << " H           -.629118    -.629118     .629118" << endl;
  xyzfile << " H            .629118    -.629118    -.629118" << endl;
  xyzfile << " H           -.629118     .629118    -.629118" << endl;
  xyzfile.close();

  ofstream basisfile("3-21G.xml");
  basisfile <<"<basis name=\"3-21G\">" << endl;
  basisfile << "  <element name=\"H\">" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"5.447178e+00\">" << endl;
  basisfile << "        <contractions factor=\"1.562850e-01\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"8.245470e-01\">" << endl;
  basisfile << "        <contractions factor=\"9.046910e-01\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"1.831920e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "  </element>" << endl;
  basisfile << "  <element name=\"C\">" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"S\">" << endl;
  basisfile << "      <constant decay=\"1.722560e+02\">" << endl;
  basisfile << "        <contractions factor=\"6.176690e-02\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"2.591090e+01\">" << endl;
  basisfile << "        <contractions factor=\"3.587940e-01\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"5.533350e+00\">" << endl;
  basisfile << "        <contractions factor=\"7.007130e-01\" type=\"S\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"SP\">" << endl;
  basisfile << "      <constant decay=\"3.664980e+00\">" << endl;
  basisfile << "        <contractions factor=\"-3.958970e-01\" type=\"S\"/>" << endl;
  basisfile << "        <contractions factor=\"2.364600e-01\" type=\"P\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "      <constant decay=\"7.705450e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.215840e+00\" type=\"S\"/>" << endl;
  basisfile << "        <contractions factor=\"8.606190e-01\" type=\"P\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "    <shell scale=\"1.0\" type=\"SP\">" << endl;
  basisfile << "      <constant decay=\"1.958570e-01\">" << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"S\"/>" << endl;
  basisfile << "        <contractions factor=\"1.000000e+00\" type=\"P\"/>" << endl;
  basisfile << "      </constant>" << endl;
  basisfile << "    </shell>" << endl;
  basisfile << "  </element>" << endl;
  basisfile << "</basis>" << endl;
  basisfile.close();
  
  Orbitals orbitals;
  orbitals.LoadFromXYZ("molecule.xyz");
  BasisSet basis;
  basis.LoadBasisSet("3-21G.xml");
  AOBasis aobasis;
  aobasis.AOBasisFill(&basis,orbitals.QMAtoms());
  TCMatrix_dft threec;
  threec.Fill(aobasis,aobasis,Eigen::MatrixXd::Identity(aobasis.AOBasisSize(),aobasis.AOBasisSize()));
  
  
  
  
  Eigen::MatrixXd Res0=Eigen::MatrixXd::Zero(aobasis.AOBasisSize(),aobasis.AOBasisSize());
  threec.getDatamatrix(0).AddtoEigenMatrix(Res0);

  
  Eigen::MatrixXd Res4=Eigen::MatrixXd::Zero(aobasis.AOBasisSize(),aobasis.AOBasisSize());
  threec.getDatamatrix(4).AddtoEigenMatrix(Res4);

  
  Eigen::MatrixXd Ref0=Eigen::MatrixXd::Zero(aobasis.AOBasisSize(),aobasis.AOBasisSize());
  Ref0<<2.29374 ,0.304177 ,0 ,0 ,0 ,0.337068 ,0 ,0 ,0 ,0.033705 ,0.150367 ,0.033705 ,0.150367 ,0.033705 ,0.150367 ,0.033705 ,0.150367,
0.304177 ,0.921384 ,0 ,0 ,0 ,0.632988 ,0 ,0 ,0 ,0.138532 ,0.319933 ,0.138532 ,0.319933 ,0.138532 ,0.319933 ,0.138532 ,0.319933,
0 ,0 ,0.967997 ,0 ,0 ,0 ,0.366964 ,0 ,0 ,0.109996 ,0.0905438 ,0.109996 ,0.0905438 ,-0.109996 ,-0.0905438 ,-0.109996 ,-0.0905438,
0 ,0 ,0 ,0.967997 ,0 ,0 ,0 ,0.366964 ,0 ,0.109996 ,0.0905438 ,-0.109996 ,-0.0905438 ,-0.109996 ,-0.0905438 ,0.109996 ,0.0905438,
0 ,0 ,0 ,0 ,0.967997 ,0 ,0 ,0 ,0.366964 ,0.109996 ,0.0905438 ,-0.109996 ,-0.0905438 ,0.109996 ,0.0905438 ,-0.109996 ,-0.0905438,
0.337068 ,0.632988 ,0 ,0 ,0 ,0.616586 ,0 ,0 ,0 ,0.17704 ,0.362827 ,0.17704 ,0.362827 ,0.17704 ,0.362827 ,0.17704 ,0.362827,
0 ,0 ,0.366964 ,0 ,0 ,0 ,0.423084 ,0 ,0 ,0.130034 ,0.131792 ,0.130034 ,0.131792 ,-0.130034 ,-0.131792 ,-0.130034 ,-0.131792,
0 ,0 ,0 ,0.366964 ,0 ,0 ,0 ,0.423084 ,0 ,0.130034 ,0.131792 ,-0.130034 ,-0.131792 ,-0.130034 ,-0.131792 ,0.130034 ,0.131792,
0 ,0 ,0 ,0 ,0.366964 ,0 ,0 ,0 ,0.423084 ,0.130034 ,0.131792 ,-0.130034 ,-0.131792 ,0.130034 ,0.131792 ,-0.130034 ,-0.131792,
0.033705 ,0.138532 ,0.109996 ,0.109996 ,0.109996 ,0.17704 ,0.130034 ,0.130034 ,0.130034 ,0.436704 ,0.280477 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251,
0.150367 ,0.319933 ,0.0905438 ,0.0905438 ,0.0905438 ,0.362827 ,0.131792 ,0.131792 ,0.131792 ,0.280477 ,0.39915 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028,
0.033705 ,0.138532 ,0.109996 ,-0.109996 ,-0.109996 ,0.17704 ,0.130034 ,-0.130034 ,-0.130034 ,0.00555884 ,0.0631251 ,0.436704 ,0.280477 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251,
0.150367 ,0.319933 ,0.0905438 ,-0.0905438 ,-0.0905438 ,0.362827 ,0.131792 ,-0.131792 ,-0.131792 ,0.0631251 ,0.182028 ,0.280477 ,0.39915 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028,
0.033705 ,0.138532 ,-0.109996 ,-0.109996 ,0.109996 ,0.17704 ,-0.130034 ,-0.130034 ,0.130034 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251 ,0.436704 ,0.280477 ,0.00555884 ,0.0631251,
0.150367 ,0.319933 ,-0.0905438 ,-0.0905438 ,0.0905438 ,0.362827 ,-0.131792 ,-0.131792 ,0.131792 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028 ,0.280477 ,0.39915 ,0.0631251 ,0.182028,
0.033705 ,0.138532 ,-0.109996 ,0.109996 ,-0.109996 ,0.17704 ,-0.130034 ,0.130034 ,-0.130034 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251 ,0.00555884 ,0.0631251 ,0.436704 ,0.280477,
0.150367 ,0.319933 ,-0.0905438 ,0.0905438 ,-0.0905438 ,0.362827 ,-0.131792 ,0.131792 ,-0.131792 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028 ,0.0631251 ,0.182028 ,0.280477 ,0.39915;
  
  Eigen::MatrixXd Ref4=Eigen::MatrixXd::Zero(aobasis.AOBasisSize(),aobasis.AOBasisSize());
  Ref4<<0 ,0 ,0 ,0 ,0.21851 ,0 ,0 ,0 ,0.0305022 ,0.00646054 ,0.00674129 ,-0.00646054 ,-0.00674129 ,0.00646054 ,0.00674129 ,-0.00646054 ,-0.00674129,
0 ,0 ,0 ,0 ,0.896593 ,0 ,0 ,0 ,0.409428 ,0.125791 ,0.10102 ,-0.125791 ,-0.10102 ,0.125791 ,0.10102 ,-0.125791 ,-0.10102,
0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0.0866627 ,0.0226036 ,-0.0866627 ,-0.0226036 ,-0.0866627 ,-0.0226036 ,0.0866627 ,0.0226036,
0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0.0866627 ,0.0226036 ,0.0866627 ,0.0226036 ,-0.0866627 ,-0.0226036 ,-0.0866627 ,-0.0226036,
0.21851 ,0.896593 ,0 ,0 ,0 ,0.690122 ,0 ,0 ,0 ,0.17602 ,0.363256 ,0.17602 ,0.363256 ,0.17602 ,0.363256 ,0.17602 ,0.363256,
0 ,0 ,0 ,0 ,0.690122 ,0 ,0 ,0 ,0.56523 ,0.18263 ,0.159752 ,-0.18263 ,-0.159752 ,0.18263 ,0.159752 ,-0.18263 ,-0.159752,
0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0.122829 ,0.0489282 ,-0.122829 ,-0.0489282 ,-0.122829 ,-0.0489282 ,0.122829 ,0.0489282,
0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0.122829 ,0.0489282 ,0.122829 ,0.0489282 ,-0.122829 ,-0.0489282 ,-0.122829 ,-0.0489282,
0.0305022 ,0.409428 ,0 ,0 ,0 ,0.56523 ,0 ,0 ,0 ,0.201612 ,0.37355 ,0.201612 ,0.37355 ,0.201612 ,0.37355 ,0.201612 ,0.37355,
0.00646054 ,0.125791 ,0.0866627 ,0.0866627 ,0.17602 ,0.18263 ,0.122829 ,0.122829 ,0.201612 ,0.540893 ,0.311822 ,2.46557e-19 ,0.0523107 ,0.00882417 ,0.0808349 ,2.44863e-19 ,0.0523107,
0.00674129 ,0.10102 ,0.0226036 ,0.0226036 ,0.363256 ,0.159752 ,0.0489282 ,0.0489282 ,0.37355 ,0.311822 ,0.304029 ,-0.0523107 ,3.0974e-18 ,0.0808349 ,0.15978 ,-0.0523107 ,3.0974e-18,
-0.00646054 ,-0.125791 ,-0.0866627 ,0.0866627 ,0.17602 ,-0.18263 ,-0.122829 ,0.122829 ,0.201612 ,2.46557e-19 ,-0.0523107 ,-0.540893 ,-0.311822 ,-2.44863e-19 ,-0.0523107 ,-0.00882417 ,-0.0808349,
-0.00674129 ,-0.10102 ,-0.0226036 ,0.0226036 ,0.363256 ,-0.159752 ,-0.0489282 ,0.0489282 ,0.37355 ,0.0523107 ,3.0974e-18 ,-0.311822 ,-0.304029 ,0.0523107 ,-3.0974e-18 ,-0.0808349 ,-0.15978,
0.00646054 ,0.125791 ,-0.0866627 ,-0.0866627 ,0.17602 ,0.18263 ,-0.122829 ,-0.122829 ,0.201612 ,0.00882417 ,0.0808349 ,-2.44863e-19 ,0.0523107 ,0.540893 ,0.311822 ,2.46557e-19 ,0.0523107,
0.00674129 ,0.10102 ,-0.0226036 ,-0.0226036 ,0.363256 ,0.159752 ,-0.0489282 ,-0.0489282 ,0.37355 ,0.0808349 ,0.15978 ,-0.0523107 ,-3.0974e-18 ,0.311822 ,0.304029 ,-0.0523107 ,3.0974e-18,
-0.00646054 ,-0.125791 ,0.0866627 ,-0.0866627 ,0.17602 ,-0.18263 ,0.122829 ,-0.122829 ,0.201612 ,2.44863e-19 ,-0.0523107 ,-0.00882417 ,-0.0808349 ,2.46557e-19 ,-0.0523107 ,-0.540893 ,-0.311822,
-0.00674129 ,-0.10102 ,0.0226036 ,-0.0226036 ,0.363256 ,-0.159752 ,0.0489282 ,-0.0489282 ,0.37355 ,0.0523107 ,3.0974e-18 ,-0.0808349 ,-0.15978 ,0.0523107 ,3.0974e-18 ,-0.311822 ,-0.304029;
  
  bool check_threec=(Res0.isApprox(Ref0,0.00001) && Res4.isApprox(Ref4,0.00001) );
BOOST_CHECK_EQUAL(check_threec, 1);

}

BOOST_AUTO_TEST_CASE(threecenter_gwbse){
  Orbitals orbitals;
  orbitals.LoadFromXYZ("molecule.xyz");
  BasisSet basis;
  basis.LoadBasisSet("3-21G.xml");
  AOBasis aobasis;
  aobasis.AOBasisFill(&basis,orbitals.QMAtoms());
  
Eigen::MatrixXd MOs=Eigen::MatrixXd::Zero(17,17);
MOs<<-0.00761992, -4.69664e-13, 8.35009e-15, -1.15214e-14, -0.0156169, -2.23157e-12, 1.52916e-14, 2.10997e-15, 8.21478e-15, 3.18517e-15, 2.89043e-13, -0.00949189, 1.95787e-12, 1.22168e-14, -2.63092e-15, -0.22227, 1.00844,
0.233602, -3.18103e-12, 4.05093e-14, -4.70943e-14, 0.1578, 4.75897e-11, -1.87447e-13, -1.02418e-14, 6.44484e-14, -2.6602e-14, 6.5906e-12, -0.281033, -6.67755e-12, 2.70339e-14, -9.78783e-14, -1.94373, -0.36629,
-1.63678e-13, -0.22745, -0.054851, 0.30351, 3.78688e-11, -0.201627, -0.158318, -0.233561, -0.0509347, -0.650424, 0.452606, -5.88565e-11, 0.453936, -0.165715, -0.619056, 7.0149e-12, 2.395e-14,
-4.51653e-14, -0.216509, 0.296975, -0.108582, 3.79159e-11, -0.199301, 0.283114, -0.0198557, 0.584622, 0.275311, 0.461431, -5.93732e-11, 0.453057, 0.619523, 0.166374, 7.13235e-12, 2.56811e-14,
-9.0903e-14, -0.21966, -0.235919, -0.207249, 3.75979e-11, -0.199736, -0.122681, 0.255585, -0.534902, 0.362837, 0.461224, -5.91028e-11, 0.453245, -0.453298, 0.453695, 7.01644e-12, 2.60987e-14,
0.480866, 1.8992e-11, -2.56795e-13, 4.14571e-13, 2.2709, 4.78615e-10, -2.39153e-12, -2.53852e-13, -2.15605e-13, -2.80359e-13, 7.00137e-12, 0.145171, -1.96136e-11, -2.24876e-13, -2.57294e-14, 4.04176, 0.193617,
-1.64421e-12, -0.182159, -0.0439288, 0.243073, 1.80753e-10, -0.764779, -0.600505, -0.885907, 0.0862014, 1.10077, -0.765985, 6.65828e-11, -0.579266, 0.211468, 0.789976, -1.41532e-11, -1.29659e-13,
-1.64105e-12, -0.173397, 0.23784, -0.0869607, 1.80537e-10, -0.755957, 1.07386, -0.0753135, -0.989408, -0.465933, -0.78092, 6.72256e-11, -0.578145, -0.790571, -0.212309, -1.42443e-11, -1.31306e-13,
-1.63849e-12, -0.17592, -0.188941, -0.165981, 1.79403e-10, -0.757606, -0.465334, 0.969444, 0.905262, -0.61406, -0.78057, 6.69453e-11, -0.578385, 0.578453, -0.578959, -1.40917e-11, -1.31002e-13,
0.129798, -0.274485, 0.00256652, -0.00509635, -0.0118465, 0.141392, -0.000497905, -0.000510338, -0.000526798, -0.00532572, 0.596595, 0.65313, -0.964582, -0.000361559, -0.000717866, -0.195084, 0.0246232,
0.0541331, -0.255228, 0.00238646, -0.0047388, -0.88576, 1.68364, -0.00592888, -0.00607692, -9.5047e-05, -0.000960887, 0.10764, -0.362701, 1.53456, 0.000575205, 0.00114206, -0.793844, -0.035336,
0.129798, 0.0863299, -0.0479412, 0.25617, -0.0118465, -0.0464689, 0.0750316, 0.110468, -0.0436647, -0.558989, -0.203909, 0.65313, 0.320785, 0.235387, 0.878697, -0.195084, 0.0246232,
0.0541331, 0.0802732, -0.0445777, 0.238198, -0.88576, -0.553335, 0.893449, 1.31541, -0.00787816, -0.100855, -0.0367902, -0.362701, -0.510338, -0.374479, -1.39792, -0.793844, -0.035336,
0.129798, 0.0927742, -0.197727, -0.166347, -0.0118465, -0.0473592, 0.0582544, -0.119815, -0.463559, 0.320126, -0.196433, 0.65313, 0.321765, 0.643254, -0.642737, -0.195084, 0.0246232,
0.0541331, 0.0862654, -0.183855, -0.154677, -0.88576, -0.563936, 0.693672, -1.42672, -0.0836372, 0.0577585, -0.0354411, -0.362701, -0.511897, -1.02335, 1.02253, -0.793844, -0.035336,
0.129798, 0.0953806, 0.243102, -0.0847266, -0.0118465, -0.0475639, -0.132788, 0.00985812, 0.507751, 0.244188, -0.196253, 0.65313, 0.322032, -0.87828, -0.235242, -0.195084, 0.0246232,
0.0541331, 0.088689, 0.226046, -0.0787824, -0.88576, -0.566373, -1.58119, 0.117387, 0.0916104, 0.0440574, -0.0354087, -0.362701, -0.512321, 1.39726, 0.374248, -0.793844, -0.035336;


Eigen::SelfAdjointEigenSolver<Eigen::MatrixXd> es(MOs);

TCMatrix_gwbse tc;
tc.Initialize(aobasis.AOBasisSize(),0,5,0,7);
tc.Fill(aobasis,aobasis,es.eigenvectors());

MatrixXfd ref0b=MatrixXfd::Zero(8,17);
ref0b<<0.336218,1.39093,0.0186112,0.00601363,-0.166764,2.32884,0.0465326,0.0244358,-0.207012,0.71836,1.93578,0.826105,2.04895,0.688182,1.87607,0.809543,2.03072,
0.00435851,-0.102483,-0.0563588,0.093053,0.0462074,-0.312938,-0.0887906,0.178322,0.0612667,-0.0367409,-0.22384,-0.241936,-0.439947,-0.146895,-0.336519,-0.0308175,-0.219756,
-0.0596371,-0.262859,-0.0894921,0.146547,0.0931631,-0.437726,-0.187499,0.243277,0.109115,-0.100236,-0.324661,-0.352775,-0.586001,-0.110299,-0.332787,0.00171717,-0.219899,
-0.0667323,-0.446644,0.0372459,-0.0811052,0.352816,-0.913805,0.037529,-0.177131,0.587896,-0.156842,-0.634213,-0.378972,-0.925803,-0.121459,-0.545931,-0.617082,-1.15434,
0.0590876,0.242845,-0.0665619,-0.0158415,0.0689358,0.397982,-0.158326,-0.0475815,0.105061,0.0800057,0.277889,0.0682226,0.254215,0.283936,0.493672,0.103193,0.326839,
-0.0754367,-0.369556,0.124048,-0.0440066,-0.301088,-0.686753,0.190009,-0.107074,-0.403276,-0.391898,-0.766345,-0.0151537,-0.341754,-0.349454,-0.763277,-0.214948,-0.573506,
0.00151784,0.0613927,0.106567,-0.0996093,0.0708232,0.147334,0.154574,-0.121097,0.0665385,0.08502,0.169036,0.166168,0.235331,0.052114,0.139192,-0.0930317,-0.000279624,
-0.208377,-0.787094,0.058348,0.047099,0.0533631,-1.30087,0.108253,0.0663621,0.147967,-0.331983,-0.965677,-0.466443,-1.13467,-0.406236,-1.09131,-0.498511,-1.17201;


bool check0_before=ref0b.isApprox(tc[0],1e-5);
if(!check0_before){
 cout<<"tc0"<<endl;
   cout<<tc[0]<<endl;
    cout<<"tc0_ref"<<endl;
   cout<<ref0b<<endl;
 }
 BOOST_CHECK_EQUAL(check0_before , true);
 
 
MatrixXfd ref2b=MatrixXfd::Zero(8,17);
ref2b<<-0.0596371,-0.262859,-0.0894921,0.146547,0.0931631,-0.437726,-0.187499,0.243277,0.109115,-0.100236,-0.324661,-0.352775,-0.586001,-0.110299,-0.332787,0.00171717,-0.219899,
0.196555,1.05024,0.216398,-0.200909,-0.151842,2.08968,0.559826,-0.518043,-0.436508,0.569636,1.67618,1.31004,2.60311,0.50584,1.60934,0.569195,1.61839,
0.410502,2.23027,0.0733595,-0.243347,-0.328106,4.58995,0.175924,-0.586826,-0.83366,1.19789,3.64482,2.23177,4.9358,1.35238,3.93203,1.70996,4.21548,
-0.0613387,-0.300968,0.186942,-0.43055,0.100666,-0.546204,0.461448,-1.07064,0.215949,-0.208816,-0.572832,0.313552,0.167942,0.0224585,-0.136122,-1.04385,-1.34389,
0.144353,0.768896,0.0433971,-0.232317,0.0749941,1.60243,0.0947773,-0.597909,0.135447,0.420126,1.31415,0.657302,1.7239,0.703116,1.73873,0.241193,1.12193,
-0.167223,-0.828358,-0.131763,0.140884,-0.0139204,-1.51458,-0.123139,0.167774,-0.0390306,-0.480364,-1.26091,-0.641679,-1.39483,-0.508277,-1.34219,-0.540663,-1.25891,
-0.249362,-1.10424,-0.103893,0.108565,0.108235,-1.86655,-0.181763,0.198213,0.188779,-0.515668,-1.47457,-0.877237,-1.82258,-0.53701,-1.49742,-0.599493,-1.50961,
0.0804586,0.341648,0.0814916,-0.20214,-0.0473466,0.556603,0.254463,-0.44309,-0.0816084,0.153614,0.392243,0.477035,0.818408,0.194988,0.4883,-0.166977,0.147402;
bool check2_before=ref2b.isApprox(tc[2],1e-5);
if(!check2_before){
 cout<<"tc2"<<endl;
   cout<<tc[2]<<endl;
    cout<<"tc2_ref"<<endl;
   cout<<ref2b<<endl;
 }

BOOST_CHECK_EQUAL(check2_before , true);
 

MatrixXfd ref4b=MatrixXfd::Zero(8,17);
ref4b<<0.0590876,0.242845,-0.0665619,-0.0158415,0.0689358,0.397982,-0.158326,-0.0475815,0.105061,0.0800057,0.277889,0.0682226,0.254215,0.283936,0.493672,0.103193,0.326839,
0.00283958,-0.0714498,0.276019,-0.031211,-0.0882073,-0.274316,0.719882,-0.049564,-0.329065,-0.0523204,-0.151027,0.186986,0.21491,-0.679276,-0.836882,-0.137211,-0.375107,
0.144353,0.768896,0.0433971,-0.232317,0.0749941,1.60243,0.0947773,-0.597909,0.135447,0.420126,1.31415,0.657302,1.7239,0.703116,1.73873,0.241193,1.12193,
0.115996,0.610269,-0.142215,-0.13796,0.064147,1.22881,-0.357836,-0.373145,0.0671531,0.213917,0.820341,0.384305,1.1018,0.648645,1.43358,0.516909,1.08451,
0.490565,2.69273,-0.186255,-0.44623,0.427093,5.60139,-0.493813,-1.13709,1.03154,1.70474,4.78848,1.67602,4.86942,3.07279,6.34113,1.48631,4.42819,
-0.253251,-1.09002,0.00258709,0.363916,-0.300395,-1.92798,0.168072,0.807765,-0.604719,-0.314107,-1.39532,-0.610417,-1.64341,-1.24063,-2.37703,-0.329063,-1.23027,
-0.125036,-0.576173,-0.0977194,0.0986759,-0.0529367,-0.975337,-0.15429,0.148185,-0.1214,-0.365575,-0.872578,-0.352264,-0.874348,-0.356075,-0.869824,-0.224077,-0.679911,
0.0656302,0.16222,-0.0984546,-0.0648117,-0.106086,0.256507,-0.181952,-0.106245,-0.279207,-0.118735,-0.0277291,0.128689,0.294436,0.0909587,0.185812,0.234924,0.368739;
bool check4_before=ref4b.isApprox(tc[4],1e-5);
if(!check4_before){
 cout<<"tc4"<<endl;
   cout<<tc[4]<<endl;
    cout<<"tc4_ref"<<endl;
   cout<<ref4b<<endl;
 }

BOOST_CHECK_EQUAL(check4_before , true);



AOOverlap overlap;
overlap.Fill(aobasis);

AOCoulomb cou;
cou.Fill(aobasis);

tc.MultiplyRightWithAuxMatrix(cou.Pseudo_InvSqrt_GWBSE(overlap,1e-7));

MatrixXfd ref0=MatrixXfd::Zero(8,17);
ref0<<0.0939232,0.219368,0.00495117,0.000804597,-0.0729979,0.13739,0.00696294,0.00478386,-0.0200121,0.0389264,0.0760469,0.0547564,0.0795814,0.0365567,0.0677829,0.0505495,0.0782995,
0.0224641,0.00921769,-0.0211193,0.0258861,0.0189117,-0.0288699,-0.0137562,0.0130217,0.00331352,0.0107509,-0.00347822,-0.0464899,-0.0226593,-0.0272647,-0.0194952,0.0110007,-0.0104903,
-0.012949,-0.0428916,-0.0216539,0.0499806,0.0409619,-0.0302492,-0.0146058,0.0260351,0.00765542,-0.00374158,-0.0149187,-0.0631541,-0.0261028,0.00176973,-0.00669614,0.0366564,-0.0040056,
0.011771,-0.0415008,0.0111424,-0.0205949,0.129138,-0.0672341,-0.0152112,-0.0189321,0.0668814,0.00595871,-0.0154946,-0.0250112,-0.0376711,0.00171252,-0.0118616,-0.103139,-0.0616342,
0.0171505,0.0406538,-0.0150292,0.0021462,0.0240518,0.0171286,-0.0178244,0.00391888,0.00466245,-0.0091706,0.00643242,-0.00289609,0.00669013,0.0565199,0.0287536,-0.00485172,0.0118561,
-0.0124642,-0.0469265,0.0507441,-0.00601699,-0.125693,-0.0294416,0.0297799,-0.0047834,-0.0300515,-0.065158,-0.0454877,0.0208954,-0.00393377,-0.0270398,-0.0377723,-0.0247001,-0.0185425,
-0.00976268,0.00287428,0.0377951,-0.0401404,0.0348101,0.0125044,0.00758262,-0.00197023,0.0039325,0.0118967,0.00627573,0.0425228,0.0119905,-0.000255293,0.00680444,-0.032145,-0.00318548,
-0.0733744,-0.120048,0.0208915,0.0211367,0.00755754,-0.0815667,0.0149893,0.00832174,0.022022,-0.00881529,-0.0294568,-0.0387472,-0.040386,-0.0116033,-0.0435117,-0.0484191,-0.042425;
bool check0=ref0.isApprox(tc[0],1e-5);
if(!check0){
 cout<<"tc0xV"<<endl;
   cout<<tc[0]<<endl;
    cout<<"tc0xV_ref"<<endl;
   cout<<ref0<<endl;
 }
 BOOST_CHECK_EQUAL(check0 , true);
 
 
MatrixXfd ref2=MatrixXfd::Zero(8,17);
ref2<<-0.012949,-0.0428916,-0.0216539,0.0499806,0.0409619,-0.0302492,-0.0146058,0.0260351,0.00765542,-0.00374158,-0.0149187,-0.0631541,-0.0261028,0.00176973,-0.00669614,0.0366564,-0.0040056,
0.017622,0.101956,0.044047,-0.0434954,-0.016584,0.122054,0.0640003,-0.0687151,-0.0335158,0.0238429,0.055769,0.225908,0.161566,0.000842837,0.0428888,0.0457836,0.0532358,
0.0330987,0.185668,0.0136586,-0.0637613,-0.058573,0.264871,0.000886149,-0.0801498,-0.0889383,0.0552929,0.13922,0.323527,0.266473,0.0620767,0.16027,0.203682,0.171413,
-0.0132824,-0.0356779,0.0212544,-0.0904446,0.0164997,-0.0125038,0.0101977,-0.126562,0.00644199,0.00104654,-0.0236069,0.112602,0.0539549,0.0119696,0.0124766,-0.297706,-0.0955989,
0.00889059,0.0658514,0.0119975,-0.0542669,0.0222697,0.119365,0.00916533,-0.0857015,0.0160843,0.00618084,0.0520005,0.0422201,0.107804,0.0602209,0.0959932,-0.0427022,0.0408316,
-0.0255692,-0.105694,-0.065187,0.0661245,-0.0131105,-0.0820978,-0.0202752,0.0156736,-0.0282576,-0.0315237,-0.0317199,-0.0818085,-0.048012,-0.0327635,-0.0606673,-0.0927944,-0.0492965,
-0.0571381,-0.172138,-0.0349256,0.0344547,0.0291246,-0.107346,-0.019641,0.0193678,0.00844898,-0.011048,-0.0497355,-0.121928,-0.0711614,-0.0186364,-0.0534069,-0.0529674,-0.0482813,
0.0185382,0.0590289,-0.00172833,-0.0502471,-0.023657,0.0446189,0.0145284,-0.0514341,-0.0182877,0.0209436,0.0114529,0.0886949,0.0479038,0.0065343,0.0130556,-0.115054,-0.00325873;

bool check2=ref2.isApprox(tc[2],1e-5);
if(!check2){
 cout<<"tc2xV"<<endl;
   cout<<tc[2]<<endl;
    cout<<"tc2XV_ref"<<endl;
   cout<<ref2<<endl;
 }

BOOST_CHECK_EQUAL(check2 , true);
 

MatrixXfd ref4=MatrixXfd::Zero(8,17);
ref4<<0.0171505,0.0406538,-0.0150292,0.0021462,0.0240518,0.0171286,-0.0178244,0.00391888,0.00466245,-0.0091706,0.00643242,-0.00289609,0.00669013,0.0565199,0.0287536,-0.00485172,0.0118561,
0.00681066,0.0252101,0.0578103,-0.0277775,0.011108,0.0175626,0.0960993,-0.0380811,-0.0104962,-0.0254359,-0.00368193,0.0267371,0.0479029,-0.223767,-0.0718885,4.39591e-05,-0.0131691,
0.00889059,0.0658514,0.0119975,-0.0542669,0.0222697,0.119365,0.00916533,-0.0857015,0.0160843,0.00618084,0.0520005,0.0422201,0.107804,0.0602209,0.0959932,-0.0427022,0.0408316,
0.0132785,0.0548945,-0.025497,-0.0367048,0.0361117,0.0675567,-0.0505682,-0.0593505,0.00876536,-0.0119372,0.0246741,0.0222057,0.0599249,0.0797611,0.0812238,0.10032,0.0215045,
0.0356772,0.208556,-0.0142335,-0.0941815,0.0889733,0.336821,-0.0211086,-0.151308,0.124055,0.112386,0.185804,0.0774364,0.20928,0.516724,0.325751,0.0945121,0.169194,
-0.0631143,-0.150455,-0.0431561,0.0909072,-0.0985997,-0.131364,-0.00993435,0.096295,-0.0920368,0.092781,-0.0400387,-0.0236557,-0.0569189,-0.204827,-0.127028,0.00193807,-0.0407194,
-0.0234814,-0.0920183,-0.039012,0.0414337,-0.0139907,-0.0586992,-0.0230553,0.0207335,-0.0188896,-0.033088,-0.0311068,-0.0179224,-0.0332649,-0.028195,-0.0340945,-0.0119087,-0.0210245,
0.0405087,0.0176388,-0.0279052,-0.0248606,-0.0207972,0.0228646,-0.020485,-0.0158606,-0.0355595,-0.0456526,-0.00961824,0.0101069,0.0183804,0.00919637,-0.00641223,0.0523364,0.0160416;

bool check4=ref4.isApprox(tc[4],1e-5);
if(!check4){
 cout<<"tc4xV"<<endl;
   cout<<tc[4]<<endl;
    cout<<"tc4xV_ref"<<endl;
   cout<<ref4<<endl;
 }

BOOST_CHECK_EQUAL(check4 , true);
 


 
  
}
BOOST_AUTO_TEST_SUITE_END()
