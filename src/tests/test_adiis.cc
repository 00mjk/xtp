/*
 * Copyright 2009-2018 The VOTCA Development Team (http://www.votca.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
#define BOOST_TEST_MAIN

#define BOOST_TEST_MODULE adiis_test
#include <boost/test/unit_test.hpp>
#include <Eigen/Dense>
#include <votca/xtp/adiis.h>


using namespace votca::xtp;

BOOST_AUTO_TEST_SUITE(adiis_test)

BOOST_AUTO_TEST_CASE(coeffs_test) {
  std::vector<Eigen::MatrixXd* > _dmatHist;
  std::vector<Eigen::MatrixXd* > _mathist;
  
  
  
  ADIIS adiis;

  
Eigen::MatrixXd* d1=new Eigen::MatrixXd;
*d1=Eigen::MatrixXd::Zero(17,17);
(*d1)<<0.00157507236,0.0337453821,4.48904516e-16,-5.93152213e-16,7.87132607e-17,0.0308759804,2.51254428e-16,-1.49094084e-16,5.77899242e-17,0.00415998114,-0.00445631597,0.00415998114,-0.00445631597,0.00415998114,-0.00445631597,0.00415998114,-0.00445631597,
0.0337453821,0.722983175,2.6642664e-15,-4.44783339e-15,3.45846178e-16,0.661507233,4.39853895e-15,-2.02475102e-15,1.04832445e-15,0.0891261613,-0.0954750329,0.0891261613,-0.0954750329,0.0891261613,-0.0954750329,0.0891261613,-0.0954750329,
4.48904516e-16,2.6642664e-15,1.5219863,2.88657986e-15,2.09034179e-15,-7.942125e-15,0.215492472,2.87270208e-15,-1.40512602e-15,0.141933218,-0.0402359119,0.141933218,-0.0402359119,-0.141933218,0.0402359119,-0.141933218,0.0402359119,
-5.93152213e-16,-4.44783339e-15,2.88657986e-15,1.5219863,-2.31759056e-15,9.21105467e-15,-2.22044605e-15,0.215492472,1.62630326e-15,0.141933218,-0.0402359119,-0.141933218,0.0402359119,-0.141933218,0.0402359119,0.141933218,-0.0402359119,
7.87132607e-17,3.45846178e-16,2.09034179e-15,-2.31759056e-15,1.5219863,2.98901767e-15,-2.04957579e-15,4.79737777e-15,0.215492472,0.141933218,-0.0402359119,-0.141933218,0.0402359119,0.141933218,-0.0402359119,-0.141933218,0.0402359119,
0.0308759804,0.661507233,-7.942125e-15,9.21105467e-15,2.98901767e-15,0.605258649,2.55488257e-15,2.77790162e-17,1.33758513e-15,0.0815476797,-0.0873567007,0.0815476797,-0.0873567007,0.0815476797,-0.0873567007,0.0815476797,-0.0873567007,
2.51254428e-16,4.39853895e-15,0.215492472,-2.22044605e-15,-2.04957579e-15,2.55488257e-15,0.0305107908,3.2959746e-17,-5.2903645e-16,0.0200958051,-0.00569685557,0.0200958051,-0.00569685557,-0.0200958051,0.00569685557,-0.0200958051,0.00569685557,
-1.49094084e-16,-2.02475102e-15,2.87270208e-15,0.215492472,4.79737777e-15,2.77790162e-17,3.2959746e-17,0.0305107908,9.55941055e-16,0.0200958051,-0.00569685557,-0.0200958051,0.00569685557,-0.0200958051,0.00569685557,0.0200958051,-0.00569685557,
5.77899242e-17,1.04832445e-15,-1.40512602e-15,1.62630326e-15,0.215492472,1.33758513e-15,-5.2903645e-16,9.55941055e-16,0.0305107908,0.0200958051,-0.00569685557,-0.0200958051,0.00569685557,0.0200958051,-0.00569685557,-0.0200958051,0.00569685557,
0.00415998114,0.0891261613,0.141933218,0.141933218,0.141933218,0.0815476797,0.0200958051,0.0200958051,0.0200958051,0.0506951329,-0.0230263694,-0.00224894011,-0.00801752871,-0.00224894011,-0.00801752871,-0.00224894011,-0.00801752871,
-0.00445631597,-0.0954750329,-0.0402359119,-0.0402359119,-0.0402359119,-0.0873567007,-0.00569685557,-0.00569685557,-0.00569685557,-0.0230263694,0.015799236,-0.00801752871,0.0115444576,-0.00801752871,0.0115444576,-0.00801752871,0.0115444576,
0.00415998114,0.0891261613,0.141933218,-0.141933218,-0.141933218,0.0815476797,0.0200958051,-0.0200958051,-0.0200958051,-0.00224894011,-0.00801752871,0.0506951329,-0.0230263694,-0.00224894011,-0.00801752871,-0.00224894011,-0.00801752871,
-0.00445631597,-0.0954750329,-0.0402359119,0.0402359119,0.0402359119,-0.0873567007,-0.00569685557,0.00569685557,0.00569685557,-0.00801752871,0.0115444576,-0.0230263694,0.015799236,-0.00801752871,0.0115444576,-0.00801752871,0.0115444576,
0.00415998114,0.0891261613,-0.141933218,-0.141933218,0.141933218,0.0815476797,-0.0200958051,-0.0200958051,0.0200958051,-0.00224894011,-0.00801752871,-0.00224894011,-0.00801752871,0.0506951329,-0.0230263694,-0.00224894011,-0.00801752871,
-0.00445631597,-0.0954750329,0.0402359119,0.0402359119,-0.0402359119,-0.0873567007,0.00569685557,0.00569685557,-0.00569685557,-0.00801752871,0.0115444576,-0.00801752871,0.0115444576,-0.0230263694,0.015799236,-0.00801752871,0.0115444576,
0.00415998114,0.0891261613,-0.141933218,0.141933218,-0.141933218,0.0815476797,-0.0200958051,0.0200958051,-0.0200958051,-0.00224894011,-0.00801752871,-0.00224894011,-0.00801752871,-0.00224894011,-0.00801752871,0.0506951329,-0.0230263694,
-0.00445631597,-0.0954750329,0.0402359119,-0.0402359119,0.0402359119,-0.0873567007,0.00569685557,-0.00569685557,0.00569685557,-0.00801752871,0.0115444576,-0.00801752871,0.0115444576,-0.00801752871,0.0115444576,-0.0230263694,0.015799236;

Eigen::MatrixXd* d2=new Eigen::MatrixXd;  
*d2=Eigen::MatrixXd::Zero(17,17);
(*d2)<<0.00113067308,0.0234807013,2.75153357e-15,2.20623526e-15,2.55343929e-15,0.0242194843,-1.14836338e-14,-1.19349082e-14,-1.16818695e-14,0.00233470139,-0.00503225244,0.00233470139,-0.00503225244,0.00233470139,-0.00503225244,0.00233470139,-0.00503225244,
0.0234807013,0.506795831,1.96929344e-14,1.47658637e-14,1.82565083e-14,0.449981495,-1.47659218e-13,-1.58085765e-13,-1.53118968e-13,0.0652840601,-0.0572374845,0.0652840601,-0.0572374845,0.0652840601,-0.0572374845,0.0652840601,-0.0572374845,
2.75153357e-15,1.96929344e-14,1.06570509,8.25406367e-15,7.13839524e-15,-1.35007168e-13,0.148654077,-3.17926675e-14,-3.34484393e-14,0.101236262,-0.0202701873,0.101236262,-0.0202701873,-0.101236262,0.0202701873,-0.101236262,0.0202701873,
2.20623526e-15,1.47658637e-14,8.25406367e-15,1.06570509,4.63958841e-15,-1.21838502e-13,-3.61166392e-14,0.148654077,-3.27138056e-14,0.101236262,-0.0202701873,-0.101236262,0.0202701873,-0.101236262,0.0202701873,0.101236262,-0.0202701873,
2.55343929e-15,1.82565083e-14,7.13839524e-15,4.63958841e-15,1.06570509,-1.27947338e-13,-3.37586513e-14,-3.05460952e-14,0.148654077,0.101236262,-0.0202701873,-0.101236262,0.0202701873,0.101236262,-0.0202701873,-0.101236262,0.0202701873,
0.0242194843,0.449981495,-1.35007168e-13,-1.21838502e-13,-1.27947338e-13,0.665224564,1.39489732e-12,1.48799728e-12,1.43172697e-12,0.00358237918,-0.238424879,0.00358237918,-0.238424879,0.00358237918,-0.238424879,0.00358237918,-0.238424879,
-1.14836338e-14,-1.47659218e-13,0.148654077,-3.61166392e-14,-3.37586513e-14,1.39489732e-12,0.0366081166,1.73861099e-13,1.75622228e-13,0.00095821862,-0.0589496747,0.00095821862,-0.0589496747,-0.00095821862,0.0589496747,-0.00095821862,0.0589496747,
-1.19349082e-14,-1.58085765e-13,-3.17926675e-14,0.148654077,-3.05460952e-14,1.48799728e-12,1.73861099e-13,0.0366081166,1.688846e-13,0.00095821862,-0.0589496747,-0.00095821862,0.0589496747,-0.00095821862,0.0589496747,0.00095821862,-0.0589496747,
-1.16818695e-14,-1.53118968e-13,-3.34484393e-14,-3.27138056e-14,0.148654077,1.43172697e-12,1.75622228e-13,1.688846e-13,0.0366081166,0.00095821862,-0.0589496747,-0.00095821862,0.0589496747,0.00095821862,-0.0589496747,-0.00095821862,0.0589496747,
0.00233470139,0.0652840601,0.101236262,0.101236262,0.101236262,0.00358237918,0.00095821862,0.00095821862,0.00095821862,0.0811405658,0.164877199,-0.000991884457,-0.0135897555,-0.000991884457,-0.0135897555,-0.000991884457,-0.0135897555,
-0.00503225244,-0.0572374845,-0.0202701873,-0.0202701873,-0.0202701873,-0.238424879,-0.0589496747,-0.0589496747,-0.0589496747,0.164877199,0.735401758,-0.0135897555,-0.0598903608,-0.0135897555,-0.0598903608,-0.0135897555,-0.0598903608,
0.00233470139,0.0652840601,0.101236262,-0.101236262,-0.101236262,0.00358237918,0.00095821862,-0.00095821862,-0.00095821862,-0.000991884457,-0.0135897555,0.0811405658,0.164877199,-0.000991884457,-0.0135897555,-0.000991884457,-0.0135897555,
-0.00503225244,-0.0572374845,-0.0202701873,0.0202701873,0.0202701873,-0.238424879,-0.0589496747,0.0589496747,0.0589496747,-0.0135897555,-0.0598903608,0.164877199,0.735401758,-0.0135897555,-0.0598903608,-0.0135897555,-0.0598903608,
0.00233470139,0.0652840601,-0.101236262,-0.101236262,0.101236262,0.00358237918,-0.00095821862,-0.00095821862,0.00095821862,-0.000991884457,-0.0135897555,-0.000991884457,-0.0135897555,0.0811405658,0.164877199,-0.000991884457,-0.0135897555,
-0.00503225244,-0.0572374845,0.0202701873,0.0202701873,-0.0202701873,-0.238424879,0.0589496747,0.0589496747,-0.0589496747,-0.0135897555,-0.0598903608,-0.0135897555,-0.0598903608,0.164877199,0.735401758,-0.0135897555,-0.0598903608,
0.00233470139,0.0652840601,-0.101236262,0.101236262,-0.101236262,0.00358237918,-0.00095821862,0.00095821862,-0.00095821862,-0.000991884457,-0.0135897555,-0.000991884457,-0.0135897555,-0.000991884457,-0.0135897555,0.0811405658,0.164877199,
-0.00503225244,-0.0572374845,0.0202701873,-0.0202701873,0.0202701873,-0.238424879,0.0589496747,-0.0589496747,0.0589496747,-0.0135897555,-0.0598903608,-0.0135897555,-0.0598903608,-0.0135897555,-0.0598903608,0.164877199,0.735401758;

Eigen::MatrixXd* d3=new Eigen::MatrixXd;  
*d3=Eigen::MatrixXd::Zero(17,17);
 (*d3)<< 0.000793901464,0.0119355753,-1.40268798e-14,-1.33736083e-14,-1.38284636e-14,0.0131916418,-1.90038465e-14,-1.7115047e-14,-1.83111368e-14,-0.000639170975,-0.00567797114,-0.000639170975,-0.00567797114,-0.000639170975,-0.00567797114,-0.000639170975,-0.00567797114,
0.0119355753,0.288311753,4.43648439e-14,4.18260894e-14,4.49262449e-14,0.251249645,-4.31548671e-14,-5.88017665e-14,-4.92704812e-14,0.0488884146,-0.0128520365,0.0488884146,-0.0128520365,0.0488884146,-0.0128520365,0.0488884146,-0.0128520365,
-1.40268798e-14,4.43648439e-14,0.609528476,2.43268911e-13,2.3613892e-13,6.89095958e-13,0.0942236916,-2.95492904e-13,-3.04053598e-13,0.0783697835,0.0355432545,0.0783697835,0.0355432545,-0.0783697835,-0.0355432545,-0.0783697835,-0.0355432545,
-1.33736083e-14,4.18260894e-14,2.43268911e-13,0.609528476,2.40424903e-13,6.58378116e-13,-3.05059296e-13,0.0942236916,-3.01807142e-13,0.0783697835,0.0355432545,-0.0783697835,-0.0355432545,-0.0783697835,-0.0355432545,0.0783697835,0.0355432545,
-1.38284636e-14,4.49262449e-14,2.3613892e-13,2.40424903e-13,0.609528476,6.82646824e-13,-3.03093482e-13,-3.00641592e-13,0.0942236916,0.0783697835,0.0355432545,-0.0783697835,-0.0355432545,0.0783697835,0.0355432545,-0.0783697835,-0.0355432545,
0.0131916418,0.251249645,6.89095958e-13,6.58378116e-13,6.82646824e-13,0.36941951,1.26872449e-12,1.29369708e-12,1.28160653e-12,0.00483257769,-0.128030592,0.00483257768,-0.128030592,0.00483257768,-0.128030592,0.00483257768,-0.128030592,
-1.90038465e-14,-4.31548671e-14,0.0942236916,-3.05059296e-13,-3.03093482e-13,1.26872449e-12,0.0278620861,-3.63843298e-13,-3.64665746e-13,0.014801376,-0.00263635698,0.014801376,-0.00263635698,-0.014801376,0.00263635698,-0.014801376,0.00263635698,
-1.7115047e-14,-5.88017665e-14,-2.95492904e-13,0.0942236916,-3.00641592e-13,1.29369708e-12,-3.63843298e-13,0.0278620861,-3.69133933e-13,0.014801376,-0.00263635698,-0.014801376,0.00263635698,-0.014801376,0.00263635698,0.014801376,-0.00263635698,
-1.83111368e-14,-4.92704812e-14,-3.04053598e-13,-3.01807142e-13,0.0942236916,1.28160653e-12,-3.64665746e-13,-3.69133933e-13,0.0278620861,0.014801376,-0.00263635698,-0.014801376,0.00263635698,0.014801376,-0.00263635698,-0.014801376,0.00263635698,
-0.000639170975,0.0488884146,0.0783697835,0.0783697835,0.0783697835,0.00483257769,0.014801376,0.014801376,0.014801376,0.148361157,0.295418249,-0.00505338103,-0.0308437927,-0.00505338103,-0.0308437927,-0.00505338103,-0.0308437927,
-0.00567797114,-0.0128520365,0.0355432545,0.0355432545,0.0355432545,-0.128030592,-0.00263635698,-0.00263635698,-0.00263635698,0.295418249,0.817121133,-0.0308437927,-0.102944558,-0.0308437927,-0.102944558,-0.0308437927,-0.102944558,
-0.000639170975,0.0488884146,0.0783697835,-0.0783697835,-0.0783697835,0.00483257768,0.014801376,-0.014801376,-0.014801376,-0.00505338103,-0.0308437927,0.148361157,0.295418249,-0.00505338103,-0.0308437927,-0.00505338103,-0.0308437927,
-0.00567797114,-0.0128520365,0.0355432545,-0.0355432545,-0.0355432545,-0.128030592,-0.00263635698,0.00263635698,0.00263635698,-0.0308437927,-0.102944558,0.295418249,0.817121133,-0.0308437927,-0.102944558,-0.0308437927,-0.102944558,
-0.000639170975,0.0488884146,-0.0783697835,-0.0783697835,0.0783697835,0.00483257768,-0.014801376,-0.014801376,0.014801376,-0.00505338103,-0.0308437927,-0.00505338103,-0.0308437927,0.148361157,0.295418249,-0.00505338103,-0.0308437927,
-0.00567797114,-0.0128520365,-0.0355432545,-0.0355432545,0.0355432545,-0.128030592,0.00263635698,0.00263635698,-0.00263635698,-0.0308437927,-0.102944558,-0.0308437927,-0.102944558,0.295418249,0.817121133,-0.0308437927,-0.102944558,
-0.000639170975,0.0488884146,-0.0783697835,0.0783697835,-0.0783697835,0.00483257768,-0.014801376,0.014801376,-0.014801376,-0.00505338103,-0.0308437927,-0.00505338103,-0.0308437927,-0.00505338103,-0.0308437927,0.148361157,0.295418249,
-0.00567797114,-0.0128520365,-0.0355432545,0.0355432545,-0.0355432545,-0.128030592,0.00263635698,-0.00263635698,0.00263635698,-0.0308437927,-0.102944558,-0.0308437927,-0.102944558,-0.0308437927,-0.102944558,0.295418249,0.817121133;
 
Eigen::MatrixXd* h1=new Eigen::MatrixXd;

 
 
Eigen::MatrixXd* h2=new Eigen::MatrixXd;
 
Eigen::MatrixXd*h3=new Eigen::MatrixXd;

 
Eigen::VectorXd Coeffs=adiis.CalcCoeff(_dmatHist,_mathist);  
  
for (std::vector< Eigen::MatrixXd* >::iterator it = _mathist.begin() ; it !=_mathist.end(); ++it){
      delete *it;
  }
  _mathist.clear();
   for (std::vector< Eigen::MatrixXd* >::iterator it = _dmatHist.begin() ; it !=_dmatHist.end(); ++it){
      delete *it;
  }
  _dmatHist.clear();
   

Eigen::VectorXd Ref;

bool check_adiis=Coeffs.isApprox(Ref,0.00001);
  
BOOST_CHECK_EQUAL(check_adiis, 1);

}

BOOST_AUTO_TEST_SUITE_END()
