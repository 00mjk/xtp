.hg/store/fncache:data/netbeans/libmd2qm/nbproject/Makefile-Release.mk.i
.hg/store/fncache:data/netbeans/ctp_map/nbproject/Makefile-impl.mk.i
.hg/store/fncache:data/netbeans/ctp_diode/nbproject/Makefile-variables.mk.i
.hg/store/fncache:data/netbeans/libctp/nbproject/Makefile-Debug.mk.orig.i
.hg/store/fncache:data/scripts/ProJ-eff.py.i
.hg/store/fncache:data/netbeans/libmd2qm/nbproject/Makefile-Debug.mk.i
.hg/store/fncache:data/netbeans/ctp_diode/nbproject/Package-Debug.bash.i
.hg/store/fncache:data/netbeans/libctp/nbproject/Makefile-Release.mk.i
.hg/store/fncache:data/netbeans/ctp_run/nbproject/Makefile-Debug.mk.i
.hg/store/fncache:data/netbeans/ctp_diode/nbproject/Makefile-impl.mk.i
.hg/store/fncache:data/netbeans/libctp/nbproject/Makefile-Release.mk.orig.i
.hg/store/fncache:data/netbeans/ctp_map/nbproject/Makefile-variables.mk.i
.hg/store/fncache:data/netbeans/libmd2qm/nbproject/Makefile-variables.mk.i
.hg/store/fncache:data/netbeans/libctp/nbproject/Makefile-impl.mk.i
.hg/store/fncache:data/netbeans/libctp/nbproject/Makefile-variables.mk.i
.hg/store/fncache:data/netbeans/ctp_map/nbproject/Makefile-Debug.mk.i
.hg/store/fncache:data/netbeans/ctp_diode/nbproject/Package-Release.bash.i
.hg/store/fncache:data/netbeans/ctp_run/nbproject/Makefile-Release.mk.i
.hg/store/fncache:data/netbeans/libctp/nbproject/Makefile-Debug.mk.i
.hg/store/fncache:data/netbeans/ctp_run/nbproject/Makefile-impl.mk.i
.hg/store/fncache:data/netbeans/ctp_map/nbproject/Makefile-Release.mk.i
.hg/store/fncache:data/netbeans/ctp_diode/nbproject/Makefile-Release.mk.i
.hg/store/fncache:data/src/dipro/DIPRO-TI.f90.i
.hg/store/fncache:data/netbeans/libmd2qm/nbproject/Makefile-impl.mk.i
.hg/store/fncache:data/netbeans/ctp_run/nbproject/Makefile-variables.mk.i
.hg/store/fncache:data/netbeans/ctp_diode/nbproject/Makefile-Debug.mk.i
.hgignore:netbeans/libctp/nbproject/Package-Debug.bash
.hgignore:netbeans/libctp/nbproject/Package-Release.bash
.hgignore:netbeans/ctp_map/nbproject/Package-Debug.bash
.hgignore:netbeans/ctp_map/nbproject/Package-Release.bash
.hgignore:netbeans/ctp_run/nbproject/Package-Debug.bash
.hgignore:netbeans/ctp_run/nbproject/Package-Release.bash
CMakeLists.txt:project(votca-ctp)
CMakeLists.txt:set(PROJECT_VERSION "1.3-dev")
CMakeLists.txt:set (BOOST_CFLAGS_PKG "-I${Boost_INCLUDE_DIRS}")
CMakeLists.txt:string(REGEX REPLACE "^(.*)/lib([^/]*)\\.[^.]*$" "-L\\1 -l\\2" BOOST_LIBS_PKG ${BOOST_LIBRARIES})
CMakeLists.txt:    message(FATAL_ERROR "Could not find needed header - ${HEADER}")
CMakeLists.txt:    message(FATAL_ERROR "Could not find needed header - ${HEADER}")
CMakeLists.txt:    message(FATAL_ERROR "Could not find needed math function - ${FUNC}")
CMakeModules/FindMercurial.cmake:# - Extract information from a Mercurial repository
CMakeModules/FindMercurial.cmake:#  MERCURIAL_EXECUTABLE - path to mercurial executable
CMakeModules/FindMercurial.cmake:#  MERCURIAL_VERSION - mercurial version
CMakeModules/FindMercurial.cmake:#  MERCURIAL_FOUND - true if mercurial was found
CMakeModules/FindMercurial.cmake:#  MERCURIAL_HG_INFO(<dir> <var-prefix>)
CMakeModules/FindMercurial.cmake:#  <var-prefix>_HG_ID - global revision id of the working copy (at <dir>)
CMakeModules/FindMercurial.cmake:#  <var-prefix>_HG_CHANGESET - changeset id of the working copy
CMakeModules/FindMercurial.cmake:#  <var-prefix>_HG_AUTHOR - commit author of this changeset
CMakeModules/FindMercurial.cmake:#  <var-prefix>_HG_DATE - commit date of this changeset
CMakeModules/FindMercurial.cmake:#  <var-prefix>_HG_TAGS - tags belonging to this changeset
CMakeModules/FindMercurial.cmake:#  <var-prefix>_HG_BRANCH - (non-default) branch name of this changeset
CMakeModules/FindMercurial.cmake:#  <var-prefix>_HG_SUMMARY - commit message summary of this changeset
CMakeModules/FindMercurial.cmake:      MERCURIAL_COMMAND(${dir} id -i)
CMakeModules/FindMercurial.cmake:	STRING(REGEX REPLACE "^([0-9a-f]+).*"
CMakeModules/FindMercurial.cmake:	MERCURIAL_COMMAND(${dir} log -r ${${prefix}_HG_CHANGESET})
CMakeModules/FindMercurial.cmake:	  # (non-default) branch name of this changeset
CMakeModules/FindMercurial.cmake:  STRING(REGEX REPLACE "^Mercurial Distributed SCM \\(version ([.0-9]+)\\).*"
CMakeModules/FindSQLITE3.cmake:# - Find libgmx
CMakeModules/FindSQLITE3.cmake:#  SQLITE3_INCLUDE_DIRS - where to find sqlite3.h, etc
CMakeModules/FindSQLITE3.cmake:#  SQLITE3_LIBRARIES    - List of libraries when using sqlite3.
CMakeModules/FindSQLITE3.cmake:#  SQLITE3_FOUND        - True if sqlite3 found.
CMakeModules/FindSQLITE3.cmake:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
CMakeModules/FindSQLITE3.cmake:#     http://www.apache.org/licenses/LICENSE-2.0
CMakeModules/FindVOTCA_BOOST.cmake:# - Find libvotca_boost
CMakeModules/FindVOTCA_BOOST.cmake:#  VOTCA_BOOST_INCLUDE_DIRS - where to find headers etc.
CMakeModules/FindVOTCA_BOOST.cmake:#  VOTCA_BOOST_LIBRARIES    - List of libraries when using expat.
CMakeModules/FindVOTCA_BOOST.cmake:#  VOTCA_BOOST_FOUND        - True if expat found.
CMakeModules/FindVOTCA_BOOST.cmake:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
CMakeModules/FindVOTCA_BOOST.cmake:#     http://www.apache.org/licenses/LICENSE-2.0
CMakeModules/FindVOTCA_CSG.cmake:# - Find libvotca_csg
CMakeModules/FindVOTCA_CSG.cmake:#  VOTCA_CSG_INCLUDE_DIRS - where to find votca/csg/version.h, etc.
CMakeModules/FindVOTCA_CSG.cmake:#  VOTCA_CSG_LIBRARIES    - List of libraries when using expat.
CMakeModules/FindVOTCA_CSG.cmake:#  VOTCA_CSG_FOUND        - True if expat found.
CMakeModules/FindVOTCA_CSG.cmake:#  VOTCA_CSG_HAS_SQLITE3  - True if votca csg was build with sqlite3 support
CMakeModules/FindVOTCA_CSG.cmake:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
CMakeModules/FindVOTCA_CSG.cmake:#     http://www.apache.org/licenses/LICENSE-2.0
CMakeModules/FindVOTCA_CSG.cmake:    message(FATAL_ERROR "Could not find VotcaCsgFromC in ${VOTCA_CSG_LIBRARY};${VOTCA_CSG_DEP_LIBRARIES}, take look at the error message in ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log to find out what was going wrong. If you don't have pkg-config installed you will most likely have to set VOTCA_CSG_LIBRARY and VOTCA_CSG_DEP_LIBRARIES by hand, which set votca_csg lib  it's depencies (i.e. -DVOTCA_CSG_LIBRARY='/path/to/libvotca_csg.so" -VOTCA_CSG_DEP_LIBRARIES="/path/to/libgsl.so;/path/to/libm.so') !")
CMakeModules/FindVOTCA_KMCOLD.cmake:# - Find libvotca_kmcold
CMakeModules/FindVOTCA_KMCOLD.cmake:#  VOTCA_KMCOLD_INCLUDE_DIRS - where to find votca/kmcold/version.h, etc.
CMakeModules/FindVOTCA_KMCOLD.cmake:#  VOTCA_KMCOLD_LIBRARIES    - List of libraries when using expat.
CMakeModules/FindVOTCA_KMCOLD.cmake:#  VOTCA_KMCOLD_FOUND        - True if expat found.
CMakeModules/FindVOTCA_KMCOLD.cmake:#  VOTCA_KMCOLD_HAS_SQLITE3  - True if votca kmcold was build with sqlite3 support
CMakeModules/FindVOTCA_KMCOLD.cmake:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
CMakeModules/FindVOTCA_KMCOLD.cmake:#     http://www.apache.org/licenses/LICENSE-2.0
CMakeModules/FindVOTCA_KMCOLD.cmake:    message(FATAL_ERROR "Could not find VotcaKmcOldFromC in ${VOTCA_KMCOLD_LIBRARY};${VOTCA_KMCOLD_DEP_LIBRARIES}, take look at the error message in ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log to find out what was going wrong. If you don't have pkg-config installed you will most likely have to set VOTCA_KMCOLD_LIBRARY and VOTCA_KMCOLD_DEP_LIBRARIES by hand, which set votca_kmcold lib  it's depencies (i.e. -DVOTCA_KMCOLD_LIBRARY='/path/to/libvotca_kmcold.so" -VOTCA_KMCOLD_DEP_LIBRARIES="/path/to/libgsl.so;/path/to/libm.so') !")
CMakeModules/FindVOTCA_MOO.cmake:# - Find libvotca_moo
CMakeModules/FindVOTCA_MOO.cmake:#  VOTCA_MOO_INCLUDE_DIRS - where to find votca/moo/version.h, etc.
CMakeModules/FindVOTCA_MOO.cmake:#  VOTCA_MOO_LIBRARIES    - List of libraries when using expat.
CMakeModules/FindVOTCA_MOO.cmake:#  VOTCA_MOO_FOUND        - True if expat found.
CMakeModules/FindVOTCA_MOO.cmake:#  VOTCA_MOO_HAS_SQLITE3  - True if votca moo was build with sqlite3 support
CMakeModules/FindVOTCA_MOO.cmake:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
CMakeModules/FindVOTCA_MOO.cmake:#     http://www.apache.org/licenses/LICENSE-2.0
CMakeModules/FindVOTCA_MOO.cmake:    message(FATAL_ERROR "Could not find VotcaMooFromC in ${VOTCA_MOO_LIBRARY};${VOTCA_MOO_DEP_LIBRARIES}, take look at the error message in ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log to find out what was going wrong. If you don't have pkg-config installed you will most likely have to set VOTCA_MOO_LIBRARY and VOTCA_MOO_DEP_LIBRARIES by hand, which set votca_moo lib  it's depencies (i.e. -DVOTCA_MOO_LIBRARY='/path/to/libvotca_moo.so" -VOTCA_MOO_DEP_LIBRARIES="/path/to/libgsl.so;/path/to/libm.so') !")
CMakeModules/FindVOTCA_TOOLS.cmake:# - Find libvotca_tools
CMakeModules/FindVOTCA_TOOLS.cmake:#  VOTCA_TOOLS_INCLUDE_DIRS - where to find votca/tools/version.h, etc.
CMakeModules/FindVOTCA_TOOLS.cmake:#  VOTCA_TOOLS_LIBRARIES    - List of libraries when using expat.
CMakeModules/FindVOTCA_TOOLS.cmake:#  VOTCA_TOOLS_FOUND        - True if expat found.
CMakeModules/FindVOTCA_TOOLS.cmake:#  VOTCA_TOOLS_HAS_SQLITE3  - True if votca tools was build with sqlite3 support
CMakeModules/FindVOTCA_TOOLS.cmake:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
CMakeModules/FindVOTCA_TOOLS.cmake:#     http://www.apache.org/licenses/LICENSE-2.0
CMakeModules/FindVOTCA_TOOLS.cmake:    message(FATAL_ERROR "Could not find VotcaToolsFromC in ${VOTCA_TOOLS_LIBRARY};${VOTCA_TOOLS_DEP_LIBRARIES}, take look at the error message in ${CMAKE_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/CMakeError.log to find out what was going wrong. If you don't have pkg-config installed you will most likely have to set VOTCA_TOOLS_LIBRARY and VOTCA_TOOLS_DEP_LIBRARIES by hand, which set votca_tools lib  it's depencies (i.e. -DVOTCA_TOOLS_LIBRARY='/path/to/libvotca_tools.so" -VOTCA_TOOLS_DEP_LIBRARIES="/path/to/libgsl.so;/path/to/libm.so') !")
CMakeModules/hgscript.cmake:execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different ${OUTPUT}.tmp ${OUTPUT})
CMakeModules/hgscript.cmake:execute_process(COMMAND ${CMAKE_COMMAND} -E remove ${OUTPUT}.tmp)
CMakeModules/hgversion.cmake:execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different ${NEW_HG_HEADER} ${HG_HEADER})
CMakeModules/hgversion.cmake:execute_process(COMMAND ${CMAKE_COMMAND} -E remove ${NEW_HG_HEADER})
LICENSE:      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
LICENSE:      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
LICENSE:      cross-claim or counterclaim in a lawsuit) alleging that the Work
LICENSE:          wherever such third-party notices normally appear. The contents
LICENSE:      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
LICENSE:      identification within third-party archives.
LICENSE:       http://www.apache.org/licenses/LICENSE-2.0
NOTICE:Versatile Object-oriented Toolkit for Coarse-graining Applications
NOTICE:Copyright 2009-2011 The VOTCA Development Team
README:  J. Chem. Theo. Comp. 7, 3335-3345 (2011) 
README:* Versatile Object-oriented Toolkit for Coarse-graining Applications,
README:for votca at http://groups.google.com/group/votca-ctp
include/votca/ctp/apolarsite.h:            : _id(-1),  _isVirtual(false), _locX(vec(1,0,0)),
include/votca/ctp/apolarsite.h:        e12  = pol2.getPos() - pol1.getPos();
include/votca/ctp/apolarsite.h:    //        rbx = - pol2._locX * e12;
include/votca/ctp/apolarsite.h:    //        rby = - pol2._locY * e12;
include/votca/ctp/apolarsite.h:    //        rbz = - pol2._locZ * e12;
include/votca/ctp/apolarsite.h:            rbx = - rax;
include/votca/ctp/apolarsite.h:            rby = - ray;
include/votca/ctp/apolarsite.h:            rbz = - raz;
include/votca/ctp/apolarsite.h:        // Fields generated by rank-1 induced m'poles
include/votca/ctp/apolarsite.h:    double u3;      //  |-> NOTE: Only needed when using Thole model
include/votca/ctp/apolarsite.h:    double R3;      //  |-> NOTE: reciprocal, i.e. e.g. R3 = 1/(R*R*R)
include/votca/ctp/apolarsite.h:    inline double lambda3() { return 1 - exp( -a*u3); }
include/votca/ctp/apolarsite.h:    inline double lambda5() { return 1 - (1 + a*u3) * exp( -a*u3); }
include/votca/ctp/apolarsite.h:    inline double lambda7() { return 1 - (1 + a*u3 + 0.6*a*a*u3*u3) * exp( -a*u3); }
include/votca/ctp/apolarsite.h:    inline double lambda9() { return 1 - (1 + a*u3 + (18*a*a*u3*u3 + 9*a*a*a*u3*u3*u3)/35) * exp( -a*u3); }
include/votca/ctp/apolarsite.h:    inline double T20_00()  { return R3 * 0.5 * (3 * raz*raz - 1); }
include/votca/ctp/apolarsite.h:    inline double T22c_00() { return R3 * 0.5 * sqrt(3) * (rax*rax - ray*ray); }
include/votca/ctp/apolarsite.h:    inline double T00_20()  { return R3 * 0.5 * (3 * rbz*rbz - 1); }
include/votca/ctp/apolarsite.h:    inline double T00_22c() { return R3 * 0.5 * sqrt(3) * (rbx*rbx - rby*rby); }
include/votca/ctp/apolarsite.h:    inline double T20_1x()  { return R4 * 0.5 * (15*raz*raz*rbx + 6*raz*czx - 3*rbx); }
include/votca/ctp/apolarsite.h:    inline double T20_1y()  { return R4 * 0.5 * (15*raz*raz*rby + 6*raz*czy - 3*rby); }
include/votca/ctp/apolarsite.h:    inline double T20_1z()  { return R4 * 0.5 * (15*raz*raz*rbz + 6*raz*czz - 3*rbz); }
include/votca/ctp/apolarsite.h:    inline double T22c_1x() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbx + 2*rax*cxx - 2*ray*cyx); }
include/votca/ctp/apolarsite.h:    inline double T22c_1y() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rby + 2*rax*cxy - 2*ray*cyy); }
include/votca/ctp/apolarsite.h:    inline double T22c_1z() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbz + 2*rax*cxz - 2*ray*cyz); }
include/votca/ctp/apolarsite.h:    inline double T1x_20()  { return R4 * 0.5 * (15*rbz*rbz*rax + 6*rbz*cxz - 3*rax); }
include/votca/ctp/apolarsite.h:    inline double T1y_20()  { return R4 * 0.5 * (15*rbz*rbz*ray + 6*rbz*cyz - 3*ray); }
include/votca/ctp/apolarsite.h:    inline double T1z_20()  { return R4 * 0.5 * (15*rbz*rbz*raz + 6*rbz*czz - 3*raz); }
include/votca/ctp/apolarsite.h:    inline double T1x_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*rax + 2*rbx*cxx - 2*rby*cxy); }
include/votca/ctp/apolarsite.h:    inline double T1y_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*ray + 2*rbx*cyx - 2*rby*cyy); }
include/votca/ctp/apolarsite.h:    inline double T1z_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*raz + 2*rbx*czx - 2*rby*czy); }
include/votca/ctp/apolarsite.h:    inline double TU20_1x()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbx + lambda5()*(6*raz*czx - 3*rbx)); }
include/votca/ctp/apolarsite.h:    inline double TU20_1y()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rby + lambda5()*(6*raz*czy - 3*rby)); }
include/votca/ctp/apolarsite.h:    inline double TU20_1z()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbz + lambda5()*(6*raz*czz - 3*rbz)); }
include/votca/ctp/apolarsite.h:    inline double TU22c_1x() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbx + lambda5()*(2*rax*cxx - 2*ray*cyx)); }
include/votca/ctp/apolarsite.h:    inline double TU22c_1y() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rby + lambda5()*(2*rax*cxy - 2*ray*cyy)); }
include/votca/ctp/apolarsite.h:    inline double TU22c_1z() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbz + lambda5()*(2*rax*cxz - 2*ray*cyz)); }
include/votca/ctp/apolarsite.h:    inline double TU1x_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*rax + lambda5()*(6*rbz*cxz - 3*rax)); }
include/votca/ctp/apolarsite.h:    inline double TU1y_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*ray + lambda5()*(6*rbz*cyz - 3*ray)); }
include/votca/ctp/apolarsite.h:    inline double TU1z_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*raz + lambda5()*(6*rbz*czz - 3*raz)); }
include/votca/ctp/apolarsite.h:    inline double TU1x_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*rax + lambda5()*(2*rbx*cxx - 2*rby*cxy)); }
include/votca/ctp/apolarsite.h:    inline double TU1y_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*ray + lambda5()*(2*rbx*cyx - 2*rby*cyy)); }
include/votca/ctp/apolarsite.h:    inline double TU1z_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*raz + lambda5()*(2*rbx*czx - 2*rby*czy)); }
include/votca/ctp/apolarsite.h:    inline double T20_20()   { return R5 * 0.75 * (35*raz*raz*rbz*rbz - 5*raz*raz - 5*rbz*rbz + 20*raz*rbz*czz + 2*czz*czz + 1); }
include/votca/ctp/apolarsite.h:    inline double T20_21c()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rbz - 5*rbx*rbz + 10*raz*rbx*czz + 10*raz*rbz*czx + 2*czx*czz); }
include/votca/ctp/apolarsite.h:    inline double T20_21s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rby*rbz - 5*rby*rbz + 10*raz*rby*czz + 10*raz*rbz*czy + 2*czy*czz); }
include/votca/ctp/apolarsite.h:    inline double T20_22c()  { return R5 * 0.25 * sqrt(3) * (35*raz*raz*rbx*rbx - 35*raz*raz*rby*rby - 5*rbx*rbx + 5*rby*rby + 20*raz*rbx*czx - 20*raz*rby*czy + 2*czx*czx - 2*czy*czy); }
include/votca/ctp/apolarsite.h:    inline double T20_22s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rby - 5*rbx*rby + 10*raz*rbx*czy + 10*raz*rby*czx + 2*czx*czy); }
include/votca/ctp/apolarsite.h:    inline double T21c_22c() { return R5 * 0.5 * (35*rax*raz*rbx*rbx - 35*rax*raz*rby*rby + 10*rax*rbx*czx - 10*rax*rby*czy + 10*raz*rbx*cxx - 10*raz*rby*cxy + 2*cxx*czx - 2*cxy*czy); }
include/votca/ctp/apolarsite.h:    inline double T21s_22c() { return R5 * 0.5 * (35*ray*raz*rbx*rbx - 35*ray*raz*rby*rby + 10*ray*rbx*czx - 10*ray*rby*czy + 10*raz*rbx*cyx - 10*raz*rby*cyy + 2*cyx*czx - 2*cyy*czy); }
include/votca/ctp/apolarsite.h:    inline double T22c_22c() { return R5 * 0.25 * (35*rax*rax*rbx*rbx - 35*rax*rax*rby*rby - 35*ray*ray*rbx*rbx + 35*ray*ray*rby*rby + 20*rax*rbx*cxx - 20*rax*rby*cxy - 20*ray*rbx*cyx + 20*ray*rby*cyy + 2*cxx*cxx - 2*cxy*cxy - 2*cyx*cyx + 2*cyy*cyy); }
include/votca/ctp/apolarsite.h:    inline double T22c_22s() { return R5 * 0.5 * (35*rax*rax*rbx*rby - 35*ray*ray*rbx*rby + 10*rax*rbx*cxy + 10*rax*rby*cxx - 10*ray*rbx*cyy - 10*ray*rby*cyx + 2*cxx*cxy - 2*cyx*cyy); }
include/votca/ctp/apolarsite.h:    inline double T21c_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*raz - 5*rax*raz + 10*rbz*rax*czz + 10*rbz*raz*cxz + 2*cxz*czz); }
include/votca/ctp/apolarsite.h:    inline double T21s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*ray*raz - 5*ray*raz + 10*rbz*ray*czz + 10*rbz*raz*cyz + 2*cyz*czz); }
include/votca/ctp/apolarsite.h:    inline double T22c_20()  { return R5 * 0.25 * sqrt(3) * (35*rbz*rbz*rax*rax - 35*rbz*rbz*ray*ray - 5*rax*rax + 5*ray*ray + 20*rbz*rax*cxz - 20*rbz*ray*cyz + 2*cxz*cxz - 2*cyz*cyz); }
include/votca/ctp/apolarsite.h:    inline double T22s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*ray - 5*rax*ray + 10*rbz*rax*cyz + 10*rbz*ray*cxz + 2*cxz*cyz); }
include/votca/ctp/apolarsite.h:    inline double T22c_21c() { return R5 * 0.5 * (35*rbx*rbz*rax*rax - 35*rbx*rbz*ray*ray + 10*rbx*rax*cxz - 10*rbx*ray*cyz + 10*rbz*rax*cxx - 10*rbz*ray*cyx + 2*cxx*cxz - 2*cyx*cyz); }
include/votca/ctp/apolarsite.h:    inline double T22c_21s() { return R5 * 0.5 * (35*rby*rbz*rax*rax - 35*rby*rbz*ray*ray + 10*rby*rax*cxz - 10*rby*ray*cyz + 10*rbz*rax*cxy - 10*rbz*ray*cyy + 2*cxy*cxz - 2*cyy*cyz); }
include/votca/ctp/apolarsite.h:    inline double T22s_22c() { return R5 * 0.5 * (35*rbx*rbx*rax*ray - 35*rby*rby*rax*ray + 10*rbx*rax*cyx + 10*rbx*ray*cxx - 10*rby*rax*cyy - 10*rby*ray*cxy + 2*cxx*cyx - 2*cxy*cyy); }
include/votca/ctp/atom.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/atom.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/atom.h:         _hasQM(false), _qmId(-1) { }
include/votca/ctp/atom.h:       : _id(stencil->getId()),              _top(NULL),
include/votca/ctp/atom.h:         _element(stencil->getElement()),    _hasQM(stencil->HasQMPart()),
include/votca/ctp/atom.h:         _weight(stencil->getWeight()),      _qmId(stencil->getQMId()),
include/votca/ctp/atom.h:         _name(stencil->getName()+"_ghost"), _mol(NULL), 
include/votca/ctp/atom.h:         _qmPos(stencil->getQMPos()),        _pos(stencil->getPos()),
include/votca/ctp/atom.h:         _bPos(true),                        _resnr(stencil->getResnr()),
include/votca/ctp/atom.h:         _resname(stencil->getResname())       { }
include/votca/ctp/atom.h:    inline const double &getQ() { return _q->second; }
include/votca/ctp/atom.h:    if (qmid > -1) {
include/votca/ctp/atom.h:        _qmId = -1;
include/votca/ctp/calculatorfactory.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/calculatorfactory.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/fragment.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/fragment.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/fragment.h:     Fragment(int id, string name) : _id(id), _name(name), _symmetry(-1) { }
include/votca/ctp/molecule.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/molecule.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/paircalculator.h:    if (!top->isRigid()) {
include/votca/ctp/paircalculator.h:        bool isRigid = top->Rigidify();
include/votca/ctp/paircalculator.h:    QMNBList &nblist = top->NBList();
include/votca/ctp/paircalculator.h:        if ( (*pit)->getId() == -1 ) {
include/votca/ctp/paircalculator.h:            string pairId = boost::lexical_cast<string>((*pit)->getId());
include/votca/ctp/paircalculator.h:            (*pit)->WritePDB(pdbname);
include/votca/ctp/parallelpaircalc.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/parallelpaircalc.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/parallelsitecalc.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/parallelsitecalc.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/parallelsitecalc.h:    if (!top->isRigid()) {
include/votca/ctp/parallelsitecalc.h:        bool isRigid = top->Rigidify();
include/votca/ctp/parallelsitecalc.h:    this->InitSlotData(top);
include/votca/ctp/parallelsitecalc.h:    _nextSite = top->Segments().begin();
include/votca/ctp/parallelsitecalc.h:        siteOps[id]->Start();
include/votca/ctp/parallelsitecalc.h:        siteOps[id]->WaitDone();
include/votca/ctp/parallelsitecalc.h:    this->PostProcess(top);
include/votca/ctp/parallelsitecalc.h:    if (_nextSite == top->Segments().end()) {
include/votca/ctp/parallelsitecalc.h:        //cout << endl << "... ... " << "Evaluating site " << workOnThis->getId() << endl;
include/votca/ctp/parallelsitecalc.h:        Segment *seg = _master->RequestNextSite(_id, _top);
include/votca/ctp/parallelsitecalc.h:        else { this->_master->EvalSite(_top, seg, _id, this); }
include/votca/ctp/polarsite.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/polarsite.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/polarsite.h:            : _id(-1),  _locX(vec(1,0,0)),
include/votca/ctp/qmapplication.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/qmapplication.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/qmcalculator.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/qmcalculator.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/qmdatabase.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/qmdatabase.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/qmnblist.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/qmnblist.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/qmpair.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/qmpair.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/qmpair.h:                _id(-1),    _hasGhost(0),
include/votca/ctp/qmpair.h:   vec       getPos() { return 0.5*(first->getPos() + second->getPos()); }
include/votca/ctp/qmpair.h:   double   getJeff2(int state) { return (state == -1) ? _Jeff2_e : _Jeff2_h; }
include/votca/ctp/qmpair.h:   vector<double> &Js(int state) { return (state==-1) ? _Js_e : _Js_h; }
include/votca/ctp/qmpair.h:   double   getdE12(int state) { return second->getSiteEnergy(state)
include/votca/ctp/qmpair.h:                                       -first->getSiteEnergy(state); }
include/votca/ctp/segment.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/segment.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/segment.h:    //   +1(=> h)   e.static + pol. energy E(+1) - E(0)
include/votca/ctp/segment.h:    //   -1(=> e)   e.static + pol. energy E(-1) - E(0)
include/votca/ctp/segmenttype.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/segmenttype.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/statesaversqlite.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/statesaversqlite.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/topology.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/topology.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/topology.h:    Molecule    *getMolecule(int id) { return _molecules[id-1]; }
include/votca/ctp/topology.h:    Segment     *getSegment(int id)  { return _segments[id-1]; }
include/votca/ctp/topology.h:    Fragment    *getFragment(int id) { return _fragments[id-1]; }
include/votca/ctp/topology.h:    Atom        *getAtom(int id)     { return _atoms[id-1]; }
include/votca/ctp/topology.h:    PolarSite   *getPolarSite(int id) { return _polarSites[id-1]; }
include/votca/ctp/topology.h:    APolarSite  *getAPolarSite(int id) { return _apolarSites[id-1]; }
include/votca/ctp/topology.h:    SegmentType *getSegmentType(int id) { return _segmentTypes[id-1]; }
include/votca/ctp/topology.h:    const matrix    &getBox() { return _bc->getBox(); }
include/votca/ctp/topology.h:    double           BoxVolume() { _bc->BoxVolume(); }
include/votca/ctp/version.h: * Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
include/votca/ctp/version.h: *     http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/Makefile:RM = /usr/bin/cmake -E remove -f
include/votca/ctp/Makefile:# The top-level source directory on which CMake was run.
include/votca/ctp/Makefile:# The top-level build directory on which CMake was run.
include/votca/ctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
include/votca/ctp/Makefile:	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
include/votca/ctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
include/votca/ctp/Makefile:	/usr/bin/cmake -P cmake_install.cmake
include/votca/ctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
include/votca/ctp/Makefile:	/usr/bin/cmake -P cmake_install.cmake
include/votca/ctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
include/votca/ctp/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
include/votca/ctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
include/votca/ctp/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
include/votca/ctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
include/votca/ctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
include/votca/ctp/Makefile:	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
include/votca/ctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles /people/thnfs/homes/melnyk/votca/src/ctp/include/votca/ctp/CMakeFiles/progress.marks
include/votca/ctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 include/votca/ctp/all
include/votca/ctp/Makefile:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
include/votca/ctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 include/votca/ctp/clean
include/votca/ctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 include/votca/ctp/preinstall
include/votca/ctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 include/votca/ctp/preinstall
include/votca/ctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
include/votca/ctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
include/votca/ctp/cmake_install.cmake:    STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
include/votca/ctp/gaussian.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/gaussian.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/logger.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/logger.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/logger.h:*   \brief Logger for thread-safe output of messages
include/votca/ctp/logger.h:            //dynamic_cast<LogBuffer *>( rdbuf())->FlushBuffer();
include/votca/ctp/logger.h:		//rdbuf()->pubsync();
include/votca/ctp/logger.h:		dynamic_cast<LogBuffer *>( rdbuf() )->setLogLevel(LogLevel);
include/votca/ctp/logger.h:            dynamic_cast<LogBuffer *>( rdbuf() )->setMultithreading( _maverick );
include/votca/ctp/logger.h:            dynamic_cast<LogBuffer *>( rdbuf() )->setPreface(level, preface);
include/votca/ctp/logger.h:        return dynamic_cast<LogBuffer *>( rdbuf() )->Messages();
include/votca/ctp/logger.h:        os  << (timeinfo->tm_year)+1900
include/votca/ctp/logger.h:            << "-" << timeinfo->tm_mon + 1
include/votca/ctp/logger.h:            << "-" << timeinfo->tm_mday 
include/votca/ctp/logger.h:            << " " << timeinfo->tm_hour
include/votca/ctp/logger.h:            << ":" << timeinfo->tm_min 
include/votca/ctp/logger.h:            << ":"  << timeinfo->tm_sec;
include/votca/ctp/orbitals.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/orbitals.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/orbitals.h:// XML archive which uses wide characters (use for UTF-8 output ),
include/votca/ctp/orbitals.h:    // returns indeces of a re-sorted in a descending order vector of energies
include/votca/ctp/orbitals.h:    // Allow serialization to access non-public data members
include/votca/ctp/orbitals.h:    //Allow Gaussian object to access non-public data members
include/votca/ctp/progressobserver.h:        : _jobs(NULL), _nThreads(-1), _progFile("nofile"), _lockFile("nofile"),
include/votca/ctp/progressobserver.h:          { _metajit = _jobs->begin(); _nextjit = _jobsToProc.begin(); }
include/votca/ctp/qmmachine.h:// QM-MM ITERATION CLASS - OBSERVES CONVERGENCE LOOP                          //
include/votca/ctp/qmtool.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/qmtool.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/toolfactory.h: *            Copyright 2009-2012 The VOTCA Development Team
include/votca/ctp/toolfactory.h: *              http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/xinductor.h: * Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
include/votca/ctp/xinductor.h: *     http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/xinductor.h:                    { _actor = XInteractor(top, forker->_aDamp); };
include/votca/ctp/xinductor.h:                while (_forker->NextChunkTodo(_id,1)) {
include/votca/ctp/xinductor.h:                    this->InterInduce();
include/votca/ctp/xinductor.h:                    _forker->OpenChunks(_chunk1, _chunk2);
include/votca/ctp/xinductor.h:                while (_forker->NextChunkTodo(_id,0)) {
include/votca/ctp/xinductor.h:                    this->InterEnergy();
include/votca/ctp/xinductor.h:                    _forker->OpenChunks(_chunk1, _chunk2);
include/votca/ctp/xinductor.h:                for (pit1 = (*_qmm)[i]->begin(); pit1 < (*_qmm)[i]->end(); ++pit1) {
include/votca/ctp/xinductor.h:                for (pit2 = (*_qmm)[j]->begin(); pit2 < (*_qmm)[j]->end(); ++pit2) {
include/votca/ctp/xinductor.h:                       = _forker->_job->isInCenter((*_qmm)[i]->getId());
include/votca/ctp/xinductor.h:                       = _forker->_job->isInCenter((*_qmm)[j]->getId());
include/votca/ctp/xinductor.h:                // Pair-non-pair interaction
include/votca/ctp/xinductor.h:                    for (pit1 = (*_qmm)[i]->begin();
include/votca/ctp/xinductor.h:                         pit1 < (*_qmm)[i]->end();
include/votca/ctp/xinductor.h:                    for (pit2 = (*_qmm)[j]->begin();
include/votca/ctp/xinductor.h:                         pit2 < (*_qmm)[j]->end();
include/votca/ctp/xinductor.h:                // Pair-pair interaction
include/votca/ctp/xinductor.h:                    for (pit1 = (*_qmm)[i]->begin();
include/votca/ctp/xinductor.h:                         pit1 < (*_qmm)[i]->end();
include/votca/ctp/xinductor.h:                    for (pit2 = (*_qmm)[j]->begin();
include/votca/ctp/xinductor.h:                         pit2 < (*_qmm)[j]->end();
include/votca/ctp/xinductor.h:                // Non-pair-non-pair interaction
include/votca/ctp/xinductor.h:                    for (pit1 = (*_qmm)[i]->begin();
include/votca/ctp/xinductor.h:                         pit1 < (*_qmm)[i]->end();
include/votca/ctp/xinductor.h:                    for (pit2 = (*_qmm)[j]->begin();
include/votca/ctp/xinductor.h:                         pit2 < (*_qmm)[j]->end();
include/votca/ctp/xinductor.h:        int T = this->_subthreads;                  // Threads
include/votca/ctp/xinductor.h:        int nt = (N-nr) / C;                        // Chunk size
include/votca/ctp/xinductor.h:                    printf("--------+");
include/votca/ctp/xinductor.h:                printf("--------+");
include/votca/ctp/xinductor.h:                        _indus[indu_id]->Setc1c2(i,j);
include/votca/ctp/xinductor.h:                        _indus[indu_id]->Setnx12ny12(_nx1[i][j],
include/votca/ctp/xinductor.h:            for (pit = (*sit)->begin();
include/votca/ctp/xinductor.h:                 pit < (*sit)->end(); ++pit) {
include/votca/ctp/xinductor.h:                (*pit)->WritePdbLine(out, "QMM");
include/votca/ctp/xinductor.h:            for (pit = (*sit)->begin();
include/votca/ctp/xinductor.h:                 pit < (*sit)->end(); ++pit) {
include/votca/ctp/xinductor.h:                (*pit)->WritePdbLine(out, "MM2");
include/votca/ctp/xinductor.h:    // Polar-site containers    
include/votca/ctp/xinteractor.h: * Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
include/votca/ctp/xinteractor.h: *     http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/xinteractor.h:// ...  (currently hard-coded, 0.390)
include/votca/ctp/xinteractor.h:    double EP;       //   <- Interaction permanent multipoles (inter-site)
include/votca/ctp/xinteractor.h:    double EU_INTRA; //   <- Interaction induction multipoles (intra-site)
include/votca/ctp/xinteractor.h:    double EU_INTER; //   <- Interaction induction multipoles (inter-site)
include/votca/ctp/xinteractor.h:    double u3;      //  |-> NOTE: Only needed when using Thole model
include/votca/ctp/xinteractor.h:    double R3;      //  |-> NOTE: reciprocal, i.e. e.g. R3 = 1/(R*R*R)
include/votca/ctp/xinteractor.h:    inline double lambda3() { return 1 - exp( -a*u3); }
include/votca/ctp/xinteractor.h:    inline double lambda5() { return 1 - (1 + a*u3) * exp( -a*u3); }
include/votca/ctp/xinteractor.h:    inline double lambda7() { return 1 - (1 + a*u3 + 0.6*a*a*u3*u3) * exp( -a*u3); }
include/votca/ctp/xinteractor.h:    inline double lambda9() { return 1 - (1 + a*u3 + (18*a*a*u3*u3 + 9*a*a*a*u3*u3*u3)/35) * exp( -a*u3); }
include/votca/ctp/xinteractor.h:    inline double T20_00()  { return R3 * 0.5 * (3 * raz*raz - 1); }
include/votca/ctp/xinteractor.h:    inline double T22c_00() { return R3 * 0.5 * sqrt(3) * (rax*rax - ray*ray); }
include/votca/ctp/xinteractor.h:    inline double T00_20()  { return R3 * 0.5 * (3 * rbz*rbz - 1); }
include/votca/ctp/xinteractor.h:    inline double T00_22c() { return R3 * 0.5 * sqrt(3) * (rbx*rbx - rby*rby); }
include/votca/ctp/xinteractor.h:    inline double T20_1x()  { return R4 * 0.5 * (15*raz*raz*rbx + 6*raz*czx - 3*rbx); }
include/votca/ctp/xinteractor.h:    inline double T20_1y()  { return R4 * 0.5 * (15*raz*raz*rby + 6*raz*czy - 3*rby); }
include/votca/ctp/xinteractor.h:    inline double T20_1z()  { return R4 * 0.5 * (15*raz*raz*rbz + 6*raz*czz - 3*rbz); }
include/votca/ctp/xinteractor.h:    inline double T22c_1x() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbx + 2*rax*cxx - 2*ray*cyx); }
include/votca/ctp/xinteractor.h:    inline double T22c_1y() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rby + 2*rax*cxy - 2*ray*cyy); }
include/votca/ctp/xinteractor.h:    inline double T22c_1z() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbz + 2*rax*cxz - 2*ray*cyz); }
include/votca/ctp/xinteractor.h:    inline double T1x_20()  { return R4 * 0.5 * (15*rbz*rbz*rax + 6*rbz*cxz - 3*rax); }
include/votca/ctp/xinteractor.h:    inline double T1y_20()  { return R4 * 0.5 * (15*rbz*rbz*ray + 6*rbz*cyz - 3*ray); }
include/votca/ctp/xinteractor.h:    inline double T1z_20()  { return R4 * 0.5 * (15*rbz*rbz*raz + 6*rbz*czz - 3*raz); }
include/votca/ctp/xinteractor.h:    inline double T1x_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*rax + 2*rbx*cxx - 2*rby*cxy); }
include/votca/ctp/xinteractor.h:    inline double T1y_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*ray + 2*rbx*cyx - 2*rby*cyy); }
include/votca/ctp/xinteractor.h:    inline double T1z_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*raz + 2*rbx*czx - 2*rby*czy); }
include/votca/ctp/xinteractor.h:    inline double TU20_1x()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbx + lambda5()*(6*raz*czx - 3*rbx)); }
include/votca/ctp/xinteractor.h:    inline double TU20_1y()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rby + lambda5()*(6*raz*czy - 3*rby)); }
include/votca/ctp/xinteractor.h:    inline double TU20_1z()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbz + lambda5()*(6*raz*czz - 3*rbz)); }
include/votca/ctp/xinteractor.h:    inline double TU22c_1x() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbx + lambda5()*(2*rax*cxx - 2*ray*cyx)); }
include/votca/ctp/xinteractor.h:    inline double TU22c_1y() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rby + lambda5()*(2*rax*cxy - 2*ray*cyy)); }
include/votca/ctp/xinteractor.h:    inline double TU22c_1z() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbz + lambda5()*(2*rax*cxz - 2*ray*cyz)); }
include/votca/ctp/xinteractor.h:    inline double TU1x_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*rax + lambda5()*(6*rbz*cxz - 3*rax)); }
include/votca/ctp/xinteractor.h:    inline double TU1y_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*ray + lambda5()*(6*rbz*cyz - 3*ray)); }
include/votca/ctp/xinteractor.h:    inline double TU1z_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*raz + lambda5()*(6*rbz*czz - 3*raz)); }
include/votca/ctp/xinteractor.h:    inline double TU1x_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*rax + lambda5()*(2*rbx*cxx - 2*rby*cxy)); }
include/votca/ctp/xinteractor.h:    inline double TU1y_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*ray + lambda5()*(2*rbx*cyx - 2*rby*cyy)); }
include/votca/ctp/xinteractor.h:    inline double TU1z_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*raz + lambda5()*(2*rbx*czx - 2*rby*czy)); }
include/votca/ctp/xinteractor.h:    inline double T20_20()   { return R5 * 0.75 * (35*raz*raz*rbz*rbz - 5*raz*raz - 5*rbz*rbz + 20*raz*rbz*czz + 2*czz*czz + 1); }
include/votca/ctp/xinteractor.h:    inline double T20_21c()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rbz - 5*rbx*rbz + 10*raz*rbx*czz + 10*raz*rbz*czx + 2*czx*czz); }
include/votca/ctp/xinteractor.h:    inline double T20_21s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rby*rbz - 5*rby*rbz + 10*raz*rby*czz + 10*raz*rbz*czy + 2*czy*czz); }
include/votca/ctp/xinteractor.h:    inline double T20_22c()  { return R5 * 0.25 * sqrt(3) * (35*raz*raz*rbx*rbx - 35*raz*raz*rby*rby - 5*rbx*rbx + 5*rby*rby + 20*raz*rbx*czx - 20*raz*rby*czy + 2*czx*czx - 2*czy*czy); }
include/votca/ctp/xinteractor.h:    inline double T20_22s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rby - 5*rbx*rby + 10*raz*rbx*czy + 10*raz*rby*czx + 2*czx*czy); }
include/votca/ctp/xinteractor.h:    inline double T21c_22c() { return R5 * 0.5 * (35*rax*raz*rbx*rbx - 35*rax*raz*rby*rby + 10*rax*rbx*czx - 10*rax*rby*czy + 10*raz*rbx*cxx - 10*raz*rby*cxy + 2*cxx*czx - 2*cxy*czy); }
include/votca/ctp/xinteractor.h:    inline double T21s_22c() { return R5 * 0.5 * (35*ray*raz*rbx*rbx - 35*ray*raz*rby*rby + 10*ray*rbx*czx - 10*ray*rby*czy + 10*raz*rbx*cyx - 10*raz*rby*cyy + 2*cyx*czx - 2*cyy*czy); }
include/votca/ctp/xinteractor.h:    inline double T22c_22c() { return R5 * 0.25 * (35*rax*rax*rbx*rbx - 35*rax*rax*rby*rby - 35*ray*ray*rbx*rbx + 35*ray*ray*rby*rby + 20*rax*rbx*cxx - 20*rax*rby*cxy - 20*ray*rbx*cyx + 20*ray*rby*cyy + 2*cxx*cxx - 2*cxy*cxy - 2*cyx*cyx + 2*cyy*cyy); }
include/votca/ctp/xinteractor.h:    inline double T22c_22s() { return R5 * 0.5 * (35*rax*rax*rbx*rby - 35*ray*ray*rbx*rby + 10*rax*rbx*cxy + 10*rax*rby*cxx - 10*ray*rbx*cyy - 10*ray*rby*cyx + 2*cxx*cxy - 2*cyx*cyy); }
include/votca/ctp/xinteractor.h:    inline double T21c_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*raz - 5*rax*raz + 10*rbz*rax*czz + 10*rbz*raz*cxz + 2*cxz*czz); }
include/votca/ctp/xinteractor.h:    inline double T21s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*ray*raz - 5*ray*raz + 10*rbz*ray*czz + 10*rbz*raz*cyz + 2*cyz*czz); }
include/votca/ctp/xinteractor.h:    inline double T22c_20()  { return R5 * 0.25 * sqrt(3) * (35*rbz*rbz*rax*rax - 35*rbz*rbz*ray*ray - 5*rax*rax + 5*ray*ray + 20*rbz*rax*cxz - 20*rbz*ray*cyz + 2*cxz*cxz - 2*cyz*cyz); }
include/votca/ctp/xinteractor.h:    inline double T22s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*ray - 5*rax*ray + 10*rbz*rax*cyz + 10*rbz*ray*cxz + 2*cxz*cyz); }
include/votca/ctp/xinteractor.h:    inline double T22c_21c() { return R5 * 0.5 * (35*rbx*rbz*rax*rax - 35*rbx*rbz*ray*ray + 10*rbx*rax*cxz - 10*rbx*ray*cyz + 10*rbz*rax*cxx - 10*rbz*ray*cyx + 2*cxx*cxz - 2*cyx*cyz); }
include/votca/ctp/xinteractor.h:    inline double T22c_21s() { return R5 * 0.5 * (35*rby*rbz*rax*rax - 35*rby*rbz*ray*ray + 10*rby*rax*cxz - 10*rby*ray*cyz + 10*rbz*rax*cxy - 10*rbz*ray*cyy + 2*cxy*cxz - 2*cyy*cyz); }
include/votca/ctp/xinteractor.h:    inline double T22s_22c() { return R5 * 0.5 * (35*rbx*rbx*rax*ray - 35*rby*rby*rax*ray + 10*rbx*rax*cyx + 10*rbx*ray*cxx - 10*rby*rax*cyy - 10*rby*ray*cxy + 2*cxx*cyx - 2*cxy*cyy); }
include/votca/ctp/xinteractor.h:    e12  = pol.getPos() - r;
include/votca/ctp/xinteractor.h:    rbx = - e12.getX();
include/votca/ctp/xinteractor.h:    rby = - e12.getX();
include/votca/ctp/xinteractor.h:    rbz = - e12.getX();
include/votca/ctp/xinteractor.h:    e12  = pol.getPos() - r;
include/votca/ctp/xinteractor.h:        rbx = - rax;
include/votca/ctp/xinteractor.h:        rby = - ray;
include/votca/ctp/xinteractor.h:        rbz = - raz;
include/votca/ctp/xinteractor.h:    // Field generated by rank-0 m'pole
include/votca/ctp/xinteractor.h:    // Field generated by rank-1 m'pole
include/votca/ctp/xinteractor.h:    // Field generated by rank-2 m'pole
include/votca/ctp/xinteractor.h: * Used in molecular-polarizability calculator (initialize stage)
include/votca/ctp/xinteractor.h:    e12  = pol2.getPos() - pol1.getPos();
include/votca/ctp/xinteractor.h://        rbx = - pol2._locX * e12;
include/votca/ctp/xinteractor.h://        rby = - pol2._locY * e12;
include/votca/ctp/xinteractor.h://        rbz = - pol2._locZ * e12;
include/votca/ctp/xinteractor.h:        rbx = - rax;
include/votca/ctp/xinteractor.h:        rby = - ray;
include/votca/ctp/xinteractor.h:        rbz = - raz;
include/votca/ctp/xinteractor.h:    // Fields generated by rank-1 induced m'poles
include/votca/ctp/xinteractor.h: * Used in self-consistent field calculation (evaluation stage)
include/votca/ctp/xinteractor.h://    //          This implies that induced = - alpha * field
include/votca/ctp/xinteractor.h://    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
include/votca/ctp/xinteractor.h://    //e12  = pol2.getPos() - pol1.getPos();
include/votca/ctp/xinteractor.h:////        rbx = - pol2._locX * e12;
include/votca/ctp/xinteractor.h:////        rby = - pol2._locY * e12;
include/votca/ctp/xinteractor.h:////        rbz = - pol2._locZ * e12;
include/votca/ctp/xinteractor.h://        rbx = - rax;
include/votca/ctp/xinteractor.h://        rby = - ray;
include/votca/ctp/xinteractor.h://        rbz = - raz;
include/votca/ctp/xinteractor.h:    // Fields generated by rank-1 induced m'poles
include/votca/ctp/xinteractor.h: * Used in self-consistent field calculation (evaluation stage)
include/votca/ctp/xinteractor.h://    //          This implies that induced = - alpha * field
include/votca/ctp/xinteractor.h://    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
include/votca/ctp/xinteractor.h://    //e12  = pol2.getPos() - pol1.getPos();
include/votca/ctp/xinteractor.h:////        rbx = - pol2._locX * e12;
include/votca/ctp/xinteractor.h:////        rby = - pol2._locY * e12;
include/votca/ctp/xinteractor.h:////        rbz = - pol2._locZ * e12;
include/votca/ctp/xinteractor.h://        rbx = - rax;
include/votca/ctp/xinteractor.h://        rby = - ray;
include/votca/ctp/xinteractor.h://        rbz = - raz;
include/votca/ctp/xinteractor.h:    // Fields generated by rank-0 m'poles
include/votca/ctp/xinteractor.h:    // Fields generated by rank-1 m'poles
include/votca/ctp/xinteractor.h:    // Fields generated by rank-2 m'poles
include/votca/ctp/xinteractor.h:    //e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
include/votca/ctp/xinteractor.h:    e12  = pol2.getPos() - pol1.getPos();
include/votca/ctp/xinteractor.h://        rbx = - pol2._locX * e12;
include/votca/ctp/xinteractor.h://        rby = - pol2._locY * e12;
include/votca/ctp/xinteractor.h://        rbz = - pol2._locZ * e12;
include/votca/ctp/xinteractor.h:        rbx = - rax;
include/votca/ctp/xinteractor.h:        rby = - ray;
include/votca/ctp/xinteractor.h:        rbz = - raz;
include/votca/ctp/xinteractor.h:    double U = 0.0; // <- Induction energy
include/votca/ctp/xinteractor.h:    //e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
include/votca/ctp/xinteractor.h:    e12  = pol2.getPos() - pol1.getPos();
include/votca/ctp/xinteractor.h:    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
include/votca/ctp/xinteractor.h:    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
include/votca/ctp/xinteractor.h:    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
include/votca/ctp/xinteractor.h:    //cout << "seg2  " << pol2.getSegment()->getId() << endl;    
include/votca/ctp/xinteractor.h://        rbx = - pol2._locX * e12;
include/votca/ctp/xinteractor.h://        rby = - pol2._locY * e12;
include/votca/ctp/xinteractor.h://        rbz = - pol2._locZ * e12;
include/votca/ctp/xinteractor.h:        rbx = - rax;
include/votca/ctp/xinteractor.h:        rby = - ray;
include/votca/ctp/xinteractor.h:        rbz = - raz;
include/votca/ctp/xinteractor.h:    double E = 0.0; // <- Electrostatic energy
include/votca/ctp/xinteractor.h:    double U = 0.0; // <- Induction energy
include/votca/ctp/xinteractor.h:        //cout << "E up to q <-> q " << E << endl;
include/votca/ctp/xinteractor.h:        //cout << "E up to q <-> d " << E << endl;
include/votca/ctp/xinteractor.h:        //cout << "E up to q <-> Q " << E << endl;
include/votca/ctp/xinteractor.h:        //cout << "E up to d <-> d " << E << endl;
include/votca/ctp/xinteractor.h:        //cout << "E up to d <-> Q " << E << endl;
include/votca/ctp/xinteractor.h:        //cout << "E up to Q <-> Q " << E << endl;
include/votca/ctp/xinteractor.h: * Designed for use in ESP calculator (init. stage). Only for error-checking.
include/votca/ctp/xinteractor.h:    e12  = pol2.getPos() - pol1.getPos();
include/votca/ctp/xinteractor.h:        rbx = - rax;
include/votca/ctp/xinteractor.h:        rby = - ray;
include/votca/ctp/xinteractor.h:        rbz = - raz;
include/votca/ctp/xinteractor.h:    double E = 0.0; // <- Electrostatic energy
include/votca/ctp/xinteractor.h:    double U = 0.0; // <- Induction energy
include/votca/ctp/xinteractor.h://    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
include/votca/ctp/xinteractor.h://    //e12  = pol2.getPos() - pol1.getPos();
include/votca/ctp/xinteractor.h://    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
include/votca/ctp/xinteractor.h://    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
include/votca/ctp/xinteractor.h://    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
include/votca/ctp/xinteractor.h://    //cout << "seg2  " << pol2.getSegment()->getId() << endl;
include/votca/ctp/xinteractor.h:////        rbx = - pol2._locX * e12;
include/votca/ctp/xinteractor.h:////        rby = - pol2._locY * e12;
include/votca/ctp/xinteractor.h:////        rbz = - pol2._locZ * e12;
include/votca/ctp/xinteractor.h://        rbx = - rax;
include/votca/ctp/xinteractor.h://        rby = - ray;
include/votca/ctp/xinteractor.h://        rbz = - raz;
include/votca/ctp/xinteractor.h:    double epp = 0.0; // <- Interaction perm. <> perm.
include/votca/ctp/xinteractor.h:    double epu = 0.0; // <- Interaction perm. <> induced
include/votca/ctp/xinteractor.h:    double euu = 0.0; // <- Interaction induced <> induced>
include/votca/ctp/xinteractor.h:        //cout << "E up to q <-> q " << E << endl;
include/votca/ctp/xinteractor.h:        //cout << "E up to q <-> d " << E << endl;
include/votca/ctp/xinteractor.h:        //cout << "E up to q <-> Q " << E << endl;
include/votca/ctp/xinteractor.h:        //cout << "E up to d <-> d " << E << endl;
include/votca/ctp/xinteractor.h:        //cout << "E up to d <-> Q " << E << endl;
include/votca/ctp/xinteractor.h:        //cout << "E up to Q <-> Q " << E << endl;      
include/votca/ctp/xinteractor.h://    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
include/votca/ctp/xinteractor.h://    //e12  = pol2.getPos() - pol1.getPos();
include/votca/ctp/xinteractor.h://    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
include/votca/ctp/xinteractor.h://    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
include/votca/ctp/xinteractor.h://    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
include/votca/ctp/xinteractor.h://    //cout << "seg2  " << pol2.getSegment()->getId() << endl;
include/votca/ctp/xinteractor.h:////        rbx = - pol2._locX * e12;
include/votca/ctp/xinteractor.h:////        rby = - pol2._locY * e12;
include/votca/ctp/xinteractor.h:////        rbz = - pol2._locZ * e12;
include/votca/ctp/xinteractor.h://        rbx = - rax;
include/votca/ctp/xinteractor.h://        rby = - ray;
include/votca/ctp/xinteractor.h://        rbz = - raz;
include/votca/ctp/xinteractor.h:    double epu = 0.0; // <- Interaction perm. <> induced
include/votca/ctp/xinteractor.h:    double euu = 0.0; // <- Interaction induced <> induced>
include/votca/ctp/xinteractor.h:    euu *= -0.5;
include/votca/ctp/xinteractor.h:    epu *= -0.5;
include/votca/ctp/xinteractor.h:    //          This implies that induced = - alpha * field
include/votca/ctp/xinteractor.h:    //e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
include/votca/ctp/xinteractor.h:    e12  = pol2.getPos() - pol1.getPos();    
include/votca/ctp/xinteractor.h://        rbx = - pol2._locX * e12;
include/votca/ctp/xinteractor.h://        rby = - pol2._locY * e12;
include/votca/ctp/xinteractor.h://        rbz = - pol2._locZ * e12;
include/votca/ctp/xinteractor.h:        rax = e12.getX(); rbx = - rax;
include/votca/ctp/xinteractor.h:        ray = e12.getY(); rby = - ray;
include/votca/ctp/xinteractor.h:        raz = e12.getZ(); rbz = - raz;
include/votca/ctp/xinteractor.h:    //e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
include/votca/ctp/xinteractor.h:    e12  = pol2.getPos() - pol1.getPos();
include/votca/ctp/xinteractor.h://        rbx = - pol2._locX * e12;
include/votca/ctp/xinteractor.h://        rby = - pol2._locY * e12;
include/votca/ctp/xinteractor.h://        rbz = - pol2._locZ * e12;
include/votca/ctp/xinteractor.h:        rax = e12.getX(); rbx = - rax;
include/votca/ctp/xinteractor.h:        ray = e12.getY(); rby = - ray;
include/votca/ctp/xinteractor.h:        raz = e12.getZ(); rbz = - raz;
include/votca/ctp/xinteractor.h:    e12 *= -1;
include/votca/ctp/xinteractor.h:    rax *= -1;
include/votca/ctp/xinteractor.h:    ray *= -1;
include/votca/ctp/xinteractor.h:    raz *= -1;
include/votca/ctp/xinteractor.h:    rbx *= -1;
include/votca/ctp/xinteractor.h:    rby *= -1;
include/votca/ctp/xinteractor.h:    rbz *= -1;
include/votca/ctp/xinteractor.h:    // If C-matrix non-diagonal => transpose
include/votca/ctp/xjob.h: * Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
include/votca/ctp/xjob.h: *     http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/xjob.h:   // QM Energy (self-energy, internal)
include/votca/ctp/xjob.h:   bool inCenter = (this->_isSegInCenter.count(segId) > 0) ? true : false;
include/votca/ctp/xjob.h:    double dR = abs(top->PbShortestConnect(_center, pt));
include/votca/ctp/xmapper.h: * Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
include/votca/ctp/xmapper.h: *     http://www.apache.org/licenses/LICENSE-2.0
include/votca/ctp/xmapper.h:    // Allocation of mps-files to segments, state-resolved
include/votca/ctp/xmapper.h:    // Raw polar sites collected from mps-files
netbeans/ctp_map/Makefile:#     .build-pre:              called before 'build' target
netbeans/ctp_map/Makefile:#     .build-post:             called after 'build' target
netbeans/ctp_map/Makefile:#     .clean-pre:              called before 'clean' target
netbeans/ctp_map/Makefile:#     .clean-post:             called after 'clean' target
netbeans/ctp_map/Makefile:#     .clobber-pre:            called before 'clobber' target
netbeans/ctp_map/Makefile:#     .clobber-post:           called after 'clobber' target
netbeans/ctp_map/Makefile:#     .all-pre:                called before 'all' target
netbeans/ctp_map/Makefile:#     .all-post:               called after 'all' target
netbeans/ctp_map/Makefile:#     .help-pre:               called before 'help' target
netbeans/ctp_map/Makefile:#     .help-post:              called after 'help' target
netbeans/ctp_map/Makefile:#  Targets .build-impl, .clean-impl, .clobber-impl, .all-impl, and
netbeans/ctp_map/Makefile:#  .help-impl are implemented in nbproject/makefile-impl.mk.
netbeans/ctp_map/Makefile:build: .build-post
netbeans/ctp_map/Makefile:.build-pre:
netbeans/ctp_map/Makefile:.build-post: .build-impl
netbeans/ctp_map/Makefile:clean: .clean-post
netbeans/ctp_map/Makefile:.clean-pre:
netbeans/ctp_map/Makefile:.clean-post: .clean-impl
netbeans/ctp_map/Makefile:clobber: .clobber-post
netbeans/ctp_map/Makefile:.clobber-pre:
netbeans/ctp_map/Makefile:.clobber-post: .clobber-impl
netbeans/ctp_map/Makefile:all: .all-post
netbeans/ctp_map/Makefile:.all-pre:
netbeans/ctp_map/Makefile:.all-post: .all-impl
netbeans/ctp_map/Makefile:help: .help-post
netbeans/ctp_map/Makefile:.help-pre:
netbeans/ctp_map/Makefile:.help-post: .help-impl
netbeans/ctp_map/Makefile:include nbproject/Makefile-impl.mk
netbeans/ctp_map/Makefile:include nbproject/Makefile-variables.mk
netbeans/ctp_map/nbproject/Makefile-Debug.mk:# Generated Makefile - do not edit!
netbeans/ctp_map/nbproject/Makefile-Debug.mk:# has a -pre and a -post target defined where you can add customized code.
netbeans/ctp_map/nbproject/Makefile-Debug.mk:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_map/nbproject/Makefile-Debug.mk:LDLIBSOPTIONS=../libctp/dist/Debug/GNU-Linux-x86/liblibctp.a ../../../csg/netbeans/libcsg/../../src/libcsg/libcsg.a ../../../moo/netbeans/libmoo/../../src/libmoo/libmoo.a ../../../tools/netbeans/libtools/../../src/libtools/libtools.a -lgmx -lexpat -lxml2 -lboost_program_options -lsqlite3 -lpthread -lm
netbeans/ctp_map/nbproject/Makefile-Debug.mk:.build-conf: ${BUILD_SUBPROJECTS}
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	"${MAKE}"  -f nbproject/Makefile-${CND_CONF}.mk ../../src/tools/ctp_map
netbeans/ctp_map/nbproject/Makefile-Debug.mk:../../src/tools/ctp_map: ../libctp/dist/Debug/GNU-Linux-x86/liblibctp.a
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	${MKDIR} -p ../../src/tools
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	${LINK.c} -o ../../src/tools/ctp_map ${OBJECTFILES} ${LDLIBSOPTIONS} 
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/715944016
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/715944016/Md2QmEngine.o ../../src/tools/Md2QmEngine.cc
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/715944016
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/715944016/ctp_map.o ../../src/tools/ctp_map.cc
netbeans/ctp_map/nbproject/Makefile-Debug.mk:.build-subprojects:
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	cd ../libctp && ${MAKE}  -f Makefile CONF=Debug
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	cd ../../../csg/netbeans/libcsg && ${MAKE}  -f Makefile_nb CONF=Debug
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	cd ../../../moo/netbeans/libmoo && ${MAKE}  -f Makefile_nb CONF=Debug
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	cd ../../../tools/netbeans/libtools && ${MAKE}  -f Makefile_nb CONF=Debug
netbeans/ctp_map/nbproject/Makefile-Debug.mk:.clean-conf: ${CLEAN_SUBPROJECTS}
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	${RM} -r ${CND_BUILDDIR}/${CND_CONF}
netbeans/ctp_map/nbproject/Makefile-Debug.mk:.clean-subprojects:
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	cd ../libctp && ${MAKE}  -f Makefile CONF=Debug clean
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	cd ../../../csg/netbeans/libcsg && ${MAKE}  -f Makefile_nb CONF=Debug clean
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	cd ../../../moo/netbeans/libmoo && ${MAKE}  -f Makefile_nb CONF=Debug clean
netbeans/ctp_map/nbproject/Makefile-Debug.mk:	cd ../../../tools/netbeans/libtools && ${MAKE}  -f Makefile_nb CONF=Debug clean
netbeans/ctp_map/nbproject/Makefile-Debug.mk:.dep.inc: .depcheck-impl
netbeans/ctp_map/nbproject/Makefile-Release.mk:# Generated Makefile - do not edit!
netbeans/ctp_map/nbproject/Makefile-Release.mk:# has a -pre and a -post target defined where you can add customized code.
netbeans/ctp_map/nbproject/Makefile-Release.mk:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_map/nbproject/Makefile-Release.mk:.build-conf: ${BUILD_SUBPROJECTS}
netbeans/ctp_map/nbproject/Makefile-Release.mk:	"${MAKE}"  -f nbproject/Makefile-${CND_CONF}.mk ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_map
netbeans/ctp_map/nbproject/Makefile-Release.mk:	${MKDIR} -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}
netbeans/ctp_map/nbproject/Makefile-Release.mk:	${LINK.c} -o ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_map ${OBJECTFILES} ${LDLIBSOPTIONS} 
netbeans/ctp_map/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/715944016
netbeans/ctp_map/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/715944016/Md2QmEngine.o ../../src/tools/Md2QmEngine.cc
netbeans/ctp_map/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/715944016
netbeans/ctp_map/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/715944016/ctp_map.o ../../src/tools/ctp_map.cc
netbeans/ctp_map/nbproject/Makefile-Release.mk:.build-subprojects:
netbeans/ctp_map/nbproject/Makefile-Release.mk:.clean-conf: ${CLEAN_SUBPROJECTS}
netbeans/ctp_map/nbproject/Makefile-Release.mk:	${RM} -r ${CND_BUILDDIR}/${CND_CONF}
netbeans/ctp_map/nbproject/Makefile-Release.mk:.clean-subprojects:
netbeans/ctp_map/nbproject/Makefile-Release.mk:.dep.inc: .depcheck-impl
netbeans/ctp_map/nbproject/Makefile-impl.mk:# Generated Makefile - do not edit! 
netbeans/ctp_map/nbproject/Makefile-impl.mk:# has a pre- and a post- target defined where you can add customization code.
netbeans/ctp_map/nbproject/Makefile-impl.mk:# statements set BUILD_SUB-CONF and CLEAN_SUB-CONF to .build-reqprojects-conf
netbeans/ctp_map/nbproject/Makefile-impl.mk:# and .clean-reqprojects-conf unless SUB has the value 'no'
netbeans/ctp_map/nbproject/Makefile-impl.mk:BUILD_SUBPROJECTS_=.build-subprojects
netbeans/ctp_map/nbproject/Makefile-impl.mk:CLEAN_SUBPROJECTS_=.clean-subprojects
netbeans/ctp_map/nbproject/Makefile-impl.mk:.build-impl: .build-pre .validate-impl .depcheck-impl
netbeans/ctp_map/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .build-conf
netbeans/ctp_map/nbproject/Makefile-impl.mk:.clean-impl: .clean-pre .validate-impl .depcheck-impl
netbeans/ctp_map/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .clean-conf
netbeans/ctp_map/nbproject/Makefile-impl.mk:.clobber-impl: .clobber-pre .depcheck-impl
netbeans/ctp_map/nbproject/Makefile-impl.mk:	    "${MAKE}" -f nbproject/Makefile-$${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .clean-conf; \
netbeans/ctp_map/nbproject/Makefile-impl.mk:.all-impl: .all-pre .depcheck-impl
netbeans/ctp_map/nbproject/Makefile-impl.mk:	    "${MAKE}" -f nbproject/Makefile-$${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .build-conf; \
netbeans/ctp_map/nbproject/Makefile-impl.mk:.build-tests-impl: .build-impl .build-tests-pre
netbeans/ctp_map/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk SUBPROJECTS=${SUBPROJECTS} .build-tests-conf
netbeans/ctp_map/nbproject/Makefile-impl.mk:.test-impl: .build-tests-impl .test-pre
netbeans/ctp_map/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk SUBPROJECTS=${SUBPROJECTS} .test-conf
netbeans/ctp_map/nbproject/Makefile-impl.mk:.depcheck-impl:
netbeans/ctp_map/nbproject/Makefile-impl.mk:	@if [ -n "${MAKE_VERSION}" ]; then \
netbeans/ctp_map/nbproject/Makefile-impl.mk:.validate-impl:
netbeans/ctp_map/nbproject/Makefile-impl.mk:	@if [ ! -f nbproject/Makefile-${CONF}.mk ]; \
netbeans/ctp_map/nbproject/Makefile-impl.mk:	@if [ ! -f nbproject/Makefile-${CONF}.mk ]; \
netbeans/ctp_map/nbproject/Makefile-impl.mk:.help-impl: .help-pre
netbeans/ctp_map/nbproject/Makefile-variables.mk:# Generated - do not edit!
netbeans/ctp_map/nbproject/Makefile-variables.mk:CND_PLATFORM_Debug=GNU-Linux-x86
netbeans/ctp_map/nbproject/Makefile-variables.mk:CND_PACKAGE_DIR_Debug=dist/Debug/GNU-Linux-x86/package
netbeans/ctp_map/nbproject/Makefile-variables.mk:CND_PACKAGE_PATH_Debug=dist/Debug/GNU-Linux-x86/package/ctpmap.tar
netbeans/ctp_map/nbproject/Makefile-variables.mk:CND_PLATFORM_Release=GNU-Linux-x86
netbeans/ctp_map/nbproject/Makefile-variables.mk:CND_ARTIFACT_DIR_Release=dist/Release/GNU-Linux-x86
netbeans/ctp_map/nbproject/Makefile-variables.mk:CND_ARTIFACT_PATH_Release=dist/Release/GNU-Linux-x86/ctp_map
netbeans/ctp_map/nbproject/Makefile-variables.mk:CND_PACKAGE_DIR_Release=dist/Release/GNU-Linux-x86/package
netbeans/ctp_map/nbproject/Makefile-variables.mk:CND_PACKAGE_PATH_Release=dist/Release/GNU-Linux-x86/package/ctpmap.tar
netbeans/ctp_map/nbproject/Makefile-variables.mk:ROOT:sh = test -f nbproject/private/Makefile-variables.mk || \
netbeans/ctp_map/nbproject/Makefile-variables.mk:	(mkdir -p nbproject/private && touch nbproject/private/Makefile-variables.mk)
netbeans/ctp_map/nbproject/Makefile-variables.mk:.PHONY: $(shell test -f nbproject/private/Makefile-variables.mk || (mkdir -p nbproject/private && touch nbproject/private/Makefile-variables.mk))
netbeans/ctp_map/nbproject/Makefile-variables.mk:include nbproject/private/Makefile-variables.mk
netbeans/ctp_map/nbproject/configurations.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_map/nbproject/configurations.xml:                            BC="${MAKE}  -f Makefile CONF=Debug"
netbeans/ctp_map/nbproject/configurations.xml:                            CC="${MAKE}  -f Makefile CONF=Debug clean"
netbeans/ctp_map/nbproject/configurations.xml:                            OP="dist/Debug/GNU-Linux-x86/liblibctp.a">
netbeans/ctp_map/nbproject/configurations.xml:                            BC="${MAKE}  -f Makefile_nb CONF=Debug"
netbeans/ctp_map/nbproject/configurations.xml:                            CC="${MAKE}  -f Makefile_nb CONF=Debug clean"
netbeans/ctp_map/nbproject/configurations.xml:                            BC="${MAKE}  -f Makefile_nb CONF=Debug"
netbeans/ctp_map/nbproject/configurations.xml:                            CC="${MAKE}  -f Makefile_nb CONF=Debug clean"
netbeans/ctp_map/nbproject/configurations.xml:                            BC="${MAKE}  -f Makefile_nb CONF=Debug"
netbeans/ctp_map/nbproject/configurations.xml:                            CC="${MAKE}  -f Makefile_nb CONF=Debug clean"
netbeans/ctp_map/nbproject/project.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_map/nbproject/project.xml:        <data xmlns="http://www.netbeans.org/ns/make-project/1">
netbeans/ctp_map/nbproject/project.xml:            <make-project-type>0</make-project-type>
netbeans/ctp_map/nbproject/project.xml:            <c-extensions>cc</c-extensions>
netbeans/ctp_map/nbproject/project.xml:            <cpp-extensions/>
netbeans/ctp_map/nbproject/project.xml:            <header-extensions>h</header-extensions>
netbeans/ctp_map/nbproject/project.xml:            <sourceEncoding>UTF-8</sourceEncoding>
netbeans/ctp_map/nbproject/project.xml:            <make-dep-projects>
netbeans/ctp_map/nbproject/project.xml:                <make-dep-project>../../../csg/netbeans/libcsg</make-dep-project>
netbeans/ctp_map/nbproject/project.xml:                <make-dep-project>../../../moo/netbeans/libmoo</make-dep-project>
netbeans/ctp_map/nbproject/project.xml:                <make-dep-project>../../../tools/netbeans/libtools</make-dep-project>
netbeans/ctp_map/nbproject/project.xml:                <make-dep-project>../libctp</make-dep-project>
netbeans/ctp_map/nbproject/project.xml:            </make-dep-projects>
netbeans/ctp_map/nbproject/Package-Debug.bash:#!/bin/bash -x
netbeans/ctp_map/nbproject/Package-Debug.bash:# Generated - do not edit!
netbeans/ctp_map/nbproject/Package-Debug.bash:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_map/nbproject/Package-Debug.bash:NBTMPDIR=${CND_BUILDDIR}/${CND_CONF}/${CND_PLATFORM}/tmp-packaging
netbeans/ctp_map/nbproject/Package-Debug.bash:TMPDIRNAME=tmp-packaging
netbeans/ctp_map/nbproject/Package-Debug.bash:    mkdir -p "$1"
netbeans/ctp_map/nbproject/Package-Debug.bash:# $1 from-file path
netbeans/ctp_map/nbproject/Package-Debug.bash:# $2 to-file path
netbeans/ctp_map/nbproject/Package-Debug.bash:mkdir -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package
netbeans/ctp_map/nbproject/Package-Debug.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_map/nbproject/Package-Debug.bash:mkdir -p ${NBTMPDIR}
netbeans/ctp_map/nbproject/Package-Debug.bash:rm -f ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpmap.tar
netbeans/ctp_map/nbproject/Package-Debug.bash:tar -vcf ../../../../${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpmap.tar *
netbeans/ctp_map/nbproject/Package-Debug.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_map/nbproject/Package-Release.bash:#!/bin/bash -x
netbeans/ctp_map/nbproject/Package-Release.bash:# Generated - do not edit!
netbeans/ctp_map/nbproject/Package-Release.bash:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_map/nbproject/Package-Release.bash:NBTMPDIR=${CND_BUILDDIR}/${CND_CONF}/${CND_PLATFORM}/tmp-packaging
netbeans/ctp_map/nbproject/Package-Release.bash:TMPDIRNAME=tmp-packaging
netbeans/ctp_map/nbproject/Package-Release.bash:    mkdir -p "$1"
netbeans/ctp_map/nbproject/Package-Release.bash:# $1 from-file path
netbeans/ctp_map/nbproject/Package-Release.bash:# $2 to-file path
netbeans/ctp_map/nbproject/Package-Release.bash:mkdir -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package
netbeans/ctp_map/nbproject/Package-Release.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_map/nbproject/Package-Release.bash:mkdir -p ${NBTMPDIR}
netbeans/ctp_map/nbproject/Package-Release.bash:rm -f ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpmap.tar
netbeans/ctp_map/nbproject/Package-Release.bash:tar -vcf ../../../../${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpmap.tar *
netbeans/ctp_map/nbproject/Package-Release.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_map/nbproject/private/Makefile-variables.mk:# Generated - do not edit!
netbeans/ctp_map/nbproject/private/private.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_map/nbproject/private/private.xml:<project-private xmlns="http://www.netbeans.org/ns/project-private/1">
netbeans/ctp_map/nbproject/private/private.xml:    <data xmlns="http://www.netbeans.org/ns/make-project-private/1">
netbeans/ctp_map/nbproject/private/private.xml:    <editor-bookmarks xmlns="http://www.netbeans.org/ns/editor-bookmarks/2" lastBookmarkId="0"/>
netbeans/ctp_map/nbproject/private/private.xml:</project-private>
netbeans/ctp_run/Makefile:#     .build-pre:              called before 'build' target
netbeans/ctp_run/Makefile:#     .build-post:             called after 'build' target
netbeans/ctp_run/Makefile:#     .clean-pre:              called before 'clean' target
netbeans/ctp_run/Makefile:#     .clean-post:             called after 'clean' target
netbeans/ctp_run/Makefile:#     .clobber-pre:            called before 'clobber' target
netbeans/ctp_run/Makefile:#     .clobber-post:           called after 'clobber' target
netbeans/ctp_run/Makefile:#     .all-pre:                called before 'all' target
netbeans/ctp_run/Makefile:#     .all-post:               called after 'all' target
netbeans/ctp_run/Makefile:#     .help-pre:               called before 'help' target
netbeans/ctp_run/Makefile:#     .help-post:              called after 'help' target
netbeans/ctp_run/Makefile:#  Targets .build-impl, .clean-impl, .clobber-impl, .all-impl, and
netbeans/ctp_run/Makefile:#  .help-impl are implemented in nbproject/makefile-impl.mk.
netbeans/ctp_run/Makefile:build: .build-post
netbeans/ctp_run/Makefile:.build-pre:
netbeans/ctp_run/Makefile:.build-post: .build-impl
netbeans/ctp_run/Makefile:clean: .clean-post
netbeans/ctp_run/Makefile:.clean-pre:
netbeans/ctp_run/Makefile:.clean-post: .clean-impl
netbeans/ctp_run/Makefile:clobber: .clobber-post
netbeans/ctp_run/Makefile:.clobber-pre:
netbeans/ctp_run/Makefile:.clobber-post: .clobber-impl
netbeans/ctp_run/Makefile:all: .all-post
netbeans/ctp_run/Makefile:.all-pre:
netbeans/ctp_run/Makefile:.all-post: .all-impl
netbeans/ctp_run/Makefile:help: .help-post
netbeans/ctp_run/Makefile:.help-pre:
netbeans/ctp_run/Makefile:.help-post: .help-impl
netbeans/ctp_run/Makefile:include nbproject/Makefile-impl.mk
netbeans/ctp_run/Makefile:include nbproject/Makefile-variables.mk
netbeans/ctp_run/nbproject/Makefile-Debug.mk:# Generated Makefile - do not edit!
netbeans/ctp_run/nbproject/Makefile-Debug.mk:# has a -pre and a -post target defined where you can add customized code.
netbeans/ctp_run/nbproject/Makefile-Debug.mk:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_run/nbproject/Makefile-Debug.mk:LDLIBSOPTIONS=../libctp/dist/Debug/GNU-Linux-x86/liblibctp.a ../../../csg/netbeans/libcsg/../../src/libcsg/libcsg.a ../../../moo/netbeans/libmoo/../../src/libmoo/libmoo.a ../../../tools/netbeans/libtools/../../src/libtools/libtools.a -lgmx -lexpat -lsqlite3 -lboost_program_options -lpthread -lm
netbeans/ctp_run/nbproject/Makefile-Debug.mk:.build-conf: ${BUILD_SUBPROJECTS}
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	"${MAKE}"  -f nbproject/Makefile-${CND_CONF}.mk ../../src/tools/ctp_run
netbeans/ctp_run/nbproject/Makefile-Debug.mk:../../src/tools/ctp_run: ../libctp/dist/Debug/GNU-Linux-x86/liblibctp.a
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	${MKDIR} -p ../../src/tools
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	${LINK.cc} -o ../../src/tools/ctp_run ${OBJECTFILES} ${LDLIBSOPTIONS} 
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/715944016
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	$(COMPILE.cc) -g -I../../include -I../../../tools/include -I../../../moo/include -I../../../csg/include -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/715944016/ctp_run.o ../../src/tools/ctp_run.cc
netbeans/ctp_run/nbproject/Makefile-Debug.mk:.build-subprojects:
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	cd ../libctp && ${MAKE}  -f Makefile CONF=Debug
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	cd ../../../csg/netbeans/libcsg && ${MAKE}  -f Makefile_nb CONF=Debug
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	cd ../../../moo/netbeans/libmoo && ${MAKE}  -f Makefile_nb CONF=Debug
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	cd ../../../tools/netbeans/libtools && ${MAKE}  -f Makefile_nb CONF=Debug
netbeans/ctp_run/nbproject/Makefile-Debug.mk:.clean-conf: ${CLEAN_SUBPROJECTS}
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	${RM} -r ${CND_BUILDDIR}/${CND_CONF}
netbeans/ctp_run/nbproject/Makefile-Debug.mk:.clean-subprojects:
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	cd ../libctp && ${MAKE}  -f Makefile CONF=Debug clean
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	cd ../../../csg/netbeans/libcsg && ${MAKE}  -f Makefile_nb CONF=Debug clean
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	cd ../../../moo/netbeans/libmoo && ${MAKE}  -f Makefile_nb CONF=Debug clean
netbeans/ctp_run/nbproject/Makefile-Debug.mk:	cd ../../../tools/netbeans/libtools && ${MAKE}  -f Makefile_nb CONF=Debug clean
netbeans/ctp_run/nbproject/Makefile-Debug.mk:.dep.inc: .depcheck-impl
netbeans/ctp_run/nbproject/Makefile-Release.mk:# Generated Makefile - do not edit!
netbeans/ctp_run/nbproject/Makefile-Release.mk:# has a -pre and a -post target defined where you can add customized code.
netbeans/ctp_run/nbproject/Makefile-Release.mk:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_run/nbproject/Makefile-Release.mk:.build-conf: ${BUILD_SUBPROJECTS}
netbeans/ctp_run/nbproject/Makefile-Release.mk:	"${MAKE}"  -f nbproject/Makefile-${CND_CONF}.mk ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_run
netbeans/ctp_run/nbproject/Makefile-Release.mk:	${MKDIR} -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}
netbeans/ctp_run/nbproject/Makefile-Release.mk:	${LINK.cc} -o ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_run ${OBJECTFILES} ${LDLIBSOPTIONS} 
netbeans/ctp_run/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/715944016
netbeans/ctp_run/nbproject/Makefile-Release.mk:	$(COMPILE.cc) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/715944016/ctp_run.o ../../src/tools/ctp_run.cc
netbeans/ctp_run/nbproject/Makefile-Release.mk:.build-subprojects:
netbeans/ctp_run/nbproject/Makefile-Release.mk:.clean-conf: ${CLEAN_SUBPROJECTS}
netbeans/ctp_run/nbproject/Makefile-Release.mk:	${RM} -r ${CND_BUILDDIR}/${CND_CONF}
netbeans/ctp_run/nbproject/Makefile-Release.mk:.clean-subprojects:
netbeans/ctp_run/nbproject/Makefile-Release.mk:.dep.inc: .depcheck-impl
netbeans/ctp_run/nbproject/Makefile-impl.mk:# Generated Makefile - do not edit! 
netbeans/ctp_run/nbproject/Makefile-impl.mk:# has a pre- and a post- target defined where you can add customization code.
netbeans/ctp_run/nbproject/Makefile-impl.mk:# statements set BUILD_SUB-CONF and CLEAN_SUB-CONF to .build-reqprojects-conf
netbeans/ctp_run/nbproject/Makefile-impl.mk:# and .clean-reqprojects-conf unless SUB has the value 'no'
netbeans/ctp_run/nbproject/Makefile-impl.mk:BUILD_SUBPROJECTS_=.build-subprojects
netbeans/ctp_run/nbproject/Makefile-impl.mk:CLEAN_SUBPROJECTS_=.clean-subprojects
netbeans/ctp_run/nbproject/Makefile-impl.mk:.build-impl: .build-pre .validate-impl .depcheck-impl
netbeans/ctp_run/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .build-conf
netbeans/ctp_run/nbproject/Makefile-impl.mk:.clean-impl: .clean-pre .validate-impl .depcheck-impl
netbeans/ctp_run/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .clean-conf
netbeans/ctp_run/nbproject/Makefile-impl.mk:.clobber-impl: .clobber-pre .depcheck-impl
netbeans/ctp_run/nbproject/Makefile-impl.mk:	    "${MAKE}" -f nbproject/Makefile-$${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .clean-conf; \
netbeans/ctp_run/nbproject/Makefile-impl.mk:.all-impl: .all-pre .depcheck-impl
netbeans/ctp_run/nbproject/Makefile-impl.mk:	    "${MAKE}" -f nbproject/Makefile-$${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .build-conf; \
netbeans/ctp_run/nbproject/Makefile-impl.mk:.build-tests-impl: .build-impl .build-tests-pre
netbeans/ctp_run/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk SUBPROJECTS=${SUBPROJECTS} .build-tests-conf
netbeans/ctp_run/nbproject/Makefile-impl.mk:.test-impl: .build-tests-impl .test-pre
netbeans/ctp_run/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk SUBPROJECTS=${SUBPROJECTS} .test-conf
netbeans/ctp_run/nbproject/Makefile-impl.mk:.depcheck-impl:
netbeans/ctp_run/nbproject/Makefile-impl.mk:	@if [ -n "${MAKE_VERSION}" ]; then \
netbeans/ctp_run/nbproject/Makefile-impl.mk:.validate-impl:
netbeans/ctp_run/nbproject/Makefile-impl.mk:	@if [ ! -f nbproject/Makefile-${CONF}.mk ]; \
netbeans/ctp_run/nbproject/Makefile-impl.mk:	@if [ ! -f nbproject/Makefile-${CONF}.mk ]; \
netbeans/ctp_run/nbproject/Makefile-impl.mk:.help-impl: .help-pre
netbeans/ctp_run/nbproject/Makefile-variables.mk:# Generated - do not edit!
netbeans/ctp_run/nbproject/Makefile-variables.mk:CND_PLATFORM_Debug=GNU-Linux-x86
netbeans/ctp_run/nbproject/Makefile-variables.mk:CND_PACKAGE_DIR_Debug=dist/Debug/GNU-Linux-x86/package
netbeans/ctp_run/nbproject/Makefile-variables.mk:CND_PACKAGE_PATH_Debug=dist/Debug/GNU-Linux-x86/package/ctprun.tar
netbeans/ctp_run/nbproject/Makefile-variables.mk:CND_PLATFORM_Release=GNU-Linux-x86
netbeans/ctp_run/nbproject/Makefile-variables.mk:CND_ARTIFACT_DIR_Release=dist/Release/GNU-Linux-x86
netbeans/ctp_run/nbproject/Makefile-variables.mk:CND_ARTIFACT_PATH_Release=dist/Release/GNU-Linux-x86/ctp_run
netbeans/ctp_run/nbproject/Makefile-variables.mk:CND_PACKAGE_DIR_Release=dist/Release/GNU-Linux-x86/package
netbeans/ctp_run/nbproject/Makefile-variables.mk:CND_PACKAGE_PATH_Release=dist/Release/GNU-Linux-x86/package/ctprun.tar
netbeans/ctp_run/nbproject/Makefile-variables.mk:ROOT:sh = test -f nbproject/private/Makefile-variables.mk || \
netbeans/ctp_run/nbproject/Makefile-variables.mk:	(mkdir -p nbproject/private && touch nbproject/private/Makefile-variables.mk)
netbeans/ctp_run/nbproject/Makefile-variables.mk:.PHONY: $(shell test -f nbproject/private/Makefile-variables.mk || (mkdir -p nbproject/private && touch nbproject/private/Makefile-variables.mk))
netbeans/ctp_run/nbproject/Makefile-variables.mk:include nbproject/private/Makefile-variables.mk
netbeans/ctp_run/nbproject/configurations.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_run/nbproject/configurations.xml:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/ctp_run/nbproject/configurations.xml:                            BC="${MAKE}  -f Makefile CONF=Debug"
netbeans/ctp_run/nbproject/configurations.xml:                            CC="${MAKE}  -f Makefile CONF=Debug clean"
netbeans/ctp_run/nbproject/configurations.xml:                            OP="dist/Debug/GNU-Linux-x86/liblibctp.a">
netbeans/ctp_run/nbproject/configurations.xml:                            BC="${MAKE}  -f Makefile_nb CONF=Debug"
netbeans/ctp_run/nbproject/configurations.xml:                            CC="${MAKE}  -f Makefile_nb CONF=Debug clean"
netbeans/ctp_run/nbproject/configurations.xml:                            BC="${MAKE}  -f Makefile_nb CONF=Debug"
netbeans/ctp_run/nbproject/configurations.xml:                            CC="${MAKE}  -f Makefile_nb CONF=Debug clean"
netbeans/ctp_run/nbproject/configurations.xml:                            BC="${MAKE}  -f Makefile_nb CONF=Debug"
netbeans/ctp_run/nbproject/configurations.xml:                            CC="${MAKE}  -f Makefile_nb CONF=Debug clean"
netbeans/ctp_run/nbproject/configurations.xml:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/ctp_run/nbproject/project.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_run/nbproject/project.xml:        <data xmlns="http://www.netbeans.org/ns/make-project/1">
netbeans/ctp_run/nbproject/project.xml:            <make-project-type>0</make-project-type>
netbeans/ctp_run/nbproject/project.xml:            <c-extensions>cc</c-extensions>
netbeans/ctp_run/nbproject/project.xml:            <cpp-extensions/>
netbeans/ctp_run/nbproject/project.xml:            <header-extensions/>
netbeans/ctp_run/nbproject/project.xml:            <sourceEncoding>UTF-8</sourceEncoding>
netbeans/ctp_run/nbproject/project.xml:            <make-dep-projects>
netbeans/ctp_run/nbproject/project.xml:                <make-dep-project>../../../csg/netbeans/libcsg</make-dep-project>
netbeans/ctp_run/nbproject/project.xml:                <make-dep-project>../../../moo/netbeans/libmoo</make-dep-project>
netbeans/ctp_run/nbproject/project.xml:                <make-dep-project>../../../tools/netbeans/libtools</make-dep-project>
netbeans/ctp_run/nbproject/project.xml:                <make-dep-project>../libctp</make-dep-project>
netbeans/ctp_run/nbproject/project.xml:            </make-dep-projects>
netbeans/libctp/Makefile:#     .build-pre:              called before 'build' target
netbeans/libctp/Makefile:#     .build-post:             called after 'build' target
netbeans/libctp/Makefile:#     .clean-pre:              called before 'clean' target
netbeans/libctp/Makefile:#     .clean-post:             called after 'clean' target
netbeans/libctp/Makefile:#     .clobber-pre:            called before 'clobber' target
netbeans/libctp/Makefile:#     .clobber-post:           called after 'clobber' target
netbeans/libctp/Makefile:#     .all-pre:                called before 'all' target
netbeans/libctp/Makefile:#     .all-post:               called after 'all' target
netbeans/libctp/Makefile:#     .help-pre:               called before 'help' target
netbeans/libctp/Makefile:#     .help-post:              called after 'help' target
netbeans/libctp/Makefile:#  Targets .build-impl, .clean-impl, .clobber-impl, .all-impl, and
netbeans/libctp/Makefile:#  .help-impl are implemented in nbproject/makefile-impl.mk.
netbeans/libctp/Makefile:build: .build-post
netbeans/libctp/Makefile:.build-pre:
netbeans/libctp/Makefile:.build-post: .build-impl
netbeans/libctp/Makefile:clean: .clean-post
netbeans/libctp/Makefile:.clean-pre:
netbeans/libctp/Makefile:.clean-post: .clean-impl
netbeans/libctp/Makefile:clobber: .clobber-post
netbeans/libctp/Makefile:.clobber-pre:
netbeans/libctp/Makefile:.clobber-post: .clobber-impl
netbeans/libctp/Makefile:all: .all-post
netbeans/libctp/Makefile:.all-pre:
netbeans/libctp/Makefile:.all-post: .all-impl
netbeans/libctp/Makefile:help: .help-post
netbeans/libctp/Makefile:.help-pre:
netbeans/libctp/Makefile:.help-post: .help-impl
netbeans/libctp/Makefile:include nbproject/Makefile-impl.mk
netbeans/libctp/Makefile:include nbproject/Makefile-variables.mk
netbeans/libctp/nbproject/.nfs00000000002d24d700000fa5:<?xml version="1.0" encoding="UTF-8"?>
netbeans/libctp/nbproject/.nfs00000000002d24d700000fa5:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/libctp/nbproject/.nfs00000000002d24d700000fa5:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/libctp/nbproject/Makefile-impl.mk:# Generated Makefile - do not edit! 
netbeans/libctp/nbproject/Makefile-impl.mk:# has a pre- and a post- target defined where you can add customization code.
netbeans/libctp/nbproject/Makefile-impl.mk:# statements set BUILD_SUB-CONF and CLEAN_SUB-CONF to .build-reqprojects-conf
netbeans/libctp/nbproject/Makefile-impl.mk:# and .clean-reqprojects-conf unless SUB has the value 'no'
netbeans/libctp/nbproject/Makefile-impl.mk:BUILD_SUBPROJECTS_=.build-subprojects
netbeans/libctp/nbproject/Makefile-impl.mk:CLEAN_SUBPROJECTS_=.clean-subprojects
netbeans/libctp/nbproject/Makefile-impl.mk:.build-impl: .build-pre .validate-impl .depcheck-impl
netbeans/libctp/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .build-conf
netbeans/libctp/nbproject/Makefile-impl.mk:.clean-impl: .clean-pre .validate-impl .depcheck-impl
netbeans/libctp/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .clean-conf
netbeans/libctp/nbproject/Makefile-impl.mk:.clobber-impl: .clobber-pre .depcheck-impl
netbeans/libctp/nbproject/Makefile-impl.mk:	    "${MAKE}" -f nbproject/Makefile-$${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .clean-conf; \
netbeans/libctp/nbproject/Makefile-impl.mk:.all-impl: .all-pre .depcheck-impl
netbeans/libctp/nbproject/Makefile-impl.mk:	    "${MAKE}" -f nbproject/Makefile-$${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .build-conf; \
netbeans/libctp/nbproject/Makefile-impl.mk:.build-tests-impl: .build-impl .build-tests-pre
netbeans/libctp/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk SUBPROJECTS=${SUBPROJECTS} .build-tests-conf
netbeans/libctp/nbproject/Makefile-impl.mk:.test-impl: .build-tests-impl .test-pre
netbeans/libctp/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk SUBPROJECTS=${SUBPROJECTS} .test-conf
netbeans/libctp/nbproject/Makefile-impl.mk:.depcheck-impl:
netbeans/libctp/nbproject/Makefile-impl.mk:	@if [ -n "${MAKE_VERSION}" ]; then \
netbeans/libctp/nbproject/Makefile-impl.mk:.validate-impl:
netbeans/libctp/nbproject/Makefile-impl.mk:	@if [ ! -f nbproject/Makefile-${CONF}.mk ]; \
netbeans/libctp/nbproject/Makefile-impl.mk:	@if [ ! -f nbproject/Makefile-${CONF}.mk ]; \
netbeans/libctp/nbproject/Makefile-impl.mk:.help-impl: .help-pre
netbeans/libctp/nbproject/Makefile-variables.mk:# Generated - do not edit!
netbeans/libctp/nbproject/Makefile-variables.mk:CND_PLATFORM_Debug=GNU-Linux-x86
netbeans/libctp/nbproject/Makefile-variables.mk:CND_ARTIFACT_DIR_Debug=dist/Debug/GNU-Linux-x86
netbeans/libctp/nbproject/Makefile-variables.mk:CND_ARTIFACT_PATH_Debug=dist/Debug/GNU-Linux-x86/liblibctp.a
netbeans/libctp/nbproject/Makefile-variables.mk:CND_PACKAGE_DIR_Debug=dist/Debug/GNU-Linux-x86/package
netbeans/libctp/nbproject/Makefile-variables.mk:CND_PACKAGE_PATH_Debug=dist/Debug/GNU-Linux-x86/package/libctp.tar
netbeans/libctp/nbproject/Makefile-variables.mk:CND_PLATFORM_Release=GNU-Linux-x86
netbeans/libctp/nbproject/Makefile-variables.mk:CND_ARTIFACT_DIR_Release=dist/Release/GNU-Linux-x86
netbeans/libctp/nbproject/Makefile-variables.mk:CND_ARTIFACT_PATH_Release=dist/Release/GNU-Linux-x86/liblibctp.a
netbeans/libctp/nbproject/Makefile-variables.mk:CND_PACKAGE_DIR_Release=dist/Release/GNU-Linux-x86/package
netbeans/libctp/nbproject/Makefile-variables.mk:CND_PACKAGE_PATH_Release=dist/Release/GNU-Linux-x86/package/libctp.tar
netbeans/libctp/nbproject/Makefile-variables.mk:ROOT:sh = test -f nbproject/private/Makefile-variables.mk || \
netbeans/libctp/nbproject/Makefile-variables.mk:	(mkdir -p nbproject/private && touch nbproject/private/Makefile-variables.mk)
netbeans/libctp/nbproject/Makefile-variables.mk:.PHONY: $(shell test -f nbproject/private/Makefile-variables.mk || (mkdir -p nbproject/private && touch nbproject/private/Makefile-variables.mk))
netbeans/libctp/nbproject/Makefile-variables.mk:include nbproject/private/Makefile-variables.mk
netbeans/libctp/nbproject/configurations.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/libctp/nbproject/configurations.xml:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/libctp/nbproject/configurations.xml:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/libctp/nbproject/project.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/libctp/nbproject/project.xml:        <data xmlns="http://www.netbeans.org/ns/make-project/1">
netbeans/libctp/nbproject/project.xml:            <make-project-type>0</make-project-type>
netbeans/libctp/nbproject/project.xml:            <c-extensions>cc</c-extensions>
netbeans/libctp/nbproject/project.xml:            <cpp-extensions/>
netbeans/libctp/nbproject/project.xml:            <header-extensions>h</header-extensions>
netbeans/libctp/nbproject/project.xml:            <sourceEncoding>UTF-8</sourceEncoding>
netbeans/libctp/nbproject/project.xml:            <make-dep-projects/>
netbeans/libctp/nbproject/private/configurations.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/libctp/nbproject/private/configurations.xml:        <terminal-type>0</terminal-type>
netbeans/libctp/nbproject/private/configurations.xml:        <remove-instrumentation>0</remove-instrumentation>
netbeans/libctp/nbproject/private/configurations.xml:        <terminal-type>0</terminal-type>
netbeans/libctp/nbproject/private/configurations.xml:        <remove-instrumentation>0</remove-instrumentation>
netbeans/libctp/nbproject/private/Makefile-variables.mk:# Generated - do not edit!
netbeans/libctp/nbproject/private/private.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/libctp/nbproject/private/private.xml:<project-private xmlns="http://www.netbeans.org/ns/project-private/1">
netbeans/libctp/nbproject/private/private.xml:    <data xmlns="http://www.netbeans.org/ns/make-project-private/1">
netbeans/libctp/nbproject/private/private.xml:    <editor-bookmarks xmlns="http://www.netbeans.org/ns/editor-bookmarks/2" lastBookmarkId="0"/>
netbeans/libctp/nbproject/private/private.xml:</project-private>
netbeans/libctp/nbproject/Makefile-Debug.mk:# Generated Makefile - do not edit!
netbeans/libctp/nbproject/Makefile-Debug.mk:# has a -pre and a -post target defined where you can add customized code.
netbeans/libctp/nbproject/Makefile-Debug.mk:CND_PLATFORM=GNU-Linux-x86
netbeans/libctp/nbproject/Makefile-Debug.mk:.build-conf: ${BUILD_SUBPROJECTS}
netbeans/libctp/nbproject/Makefile-Debug.mk:	"${MAKE}"  -f nbproject/Makefile-${CND_CONF}.mk ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/liblibctp.a
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}
netbeans/libctp/nbproject/Makefile-Debug.mk:	${AR} -rv ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/liblibctp.a ${OBJECTFILES} 
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/segment.o ../../src/libctp/segment.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/parallelpaircalc.o ../../src/libctp/parallelpaircalc.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/neighborlist.o ../../src/libctp/calculators/neighborlist.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/qmapplication.o ../../src/libctp/qmapplication.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/apolarsite.o ../../src/libctp/apolarsite.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/idft.o ../../src/libctp/calculators/idft.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/tdump.o ../../src/libctp/calculators/tdump.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/izindo.o ../../src/libctp/calculators/izindo.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/qmpair.o ../../src/libctp/qmpair.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/gaussian.o ../../src/libctp/gaussian.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/polarsite.o ../../src/libctp/polarsite.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/qmdatabase.o ../../src/libctp/qmdatabase.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/topology.o ../../src/libctp/topology.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/version_nb.o ../../src/libctp/version_nb.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/qmtopology.o ../../src/libctp/qmtopology.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/fragment.o ../../src/libctp/fragment.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/rates.o ../../src/libctp/calculators/rates.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/emultipole_stdal.o ../../src/libctp/calculators/emultipole_stdal.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/orbitals.o ../../src/libctp/orbitals.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/molecule.o ../../src/libctp/molecule.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/stateserver.o ../../src/libctp/calculators/stateserver.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/statesaversqlite.o ../../src/libctp/statesaversqlite.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/qmnblist.o ../../src/libctp/qmnblist.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/sandbox.o ../../src/libctp/calculators/sandbox.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/calculatorfactory.o ../../src/libctp/calculatorfactory.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/einternal.o ../../src/libctp/calculators/einternal.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/eoutersphere.o ../../src/libctp/calculators/eoutersphere.cc
netbeans/libctp/nbproject/Makefile-Debug.mk:.build-subprojects:
netbeans/libctp/nbproject/Makefile-Debug.mk:.clean-conf: ${CLEAN_SUBPROJECTS}
netbeans/libctp/nbproject/Makefile-Debug.mk:	${RM} -r ${CND_BUILDDIR}/${CND_CONF}
netbeans/libctp/nbproject/Makefile-Debug.mk:.clean-subprojects:
netbeans/libctp/nbproject/Makefile-Debug.mk:.dep.inc: .depcheck-impl
netbeans/libctp/nbproject/Package-Debug.bash:#!/bin/bash -x
netbeans/libctp/nbproject/Package-Debug.bash:# Generated - do not edit!
netbeans/libctp/nbproject/Package-Debug.bash:CND_PLATFORM=GNU-Linux-x86
netbeans/libctp/nbproject/Package-Debug.bash:NBTMPDIR=${CND_BUILDDIR}/${CND_CONF}/${CND_PLATFORM}/tmp-packaging
netbeans/libctp/nbproject/Package-Debug.bash:TMPDIRNAME=tmp-packaging
netbeans/libctp/nbproject/Package-Debug.bash:    mkdir -p "$1"
netbeans/libctp/nbproject/Package-Debug.bash:# $1 from-file path
netbeans/libctp/nbproject/Package-Debug.bash:# $2 to-file path
netbeans/libctp/nbproject/Package-Debug.bash:mkdir -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package
netbeans/libctp/nbproject/Package-Debug.bash:rm -rf ${NBTMPDIR}
netbeans/libctp/nbproject/Package-Debug.bash:mkdir -p ${NBTMPDIR}
netbeans/libctp/nbproject/Package-Debug.bash:rm -f ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/libctp.tar
netbeans/libctp/nbproject/Package-Debug.bash:tar -vcf ../../../../${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/libctp.tar *
netbeans/libctp/nbproject/Package-Debug.bash:rm -rf ${NBTMPDIR}
netbeans/libctp/nbproject/Makefile-Release.mk:# Generated Makefile - do not edit!
netbeans/libctp/nbproject/Makefile-Release.mk:# has a -pre and a -post target defined where you can add customized code.
netbeans/libctp/nbproject/Makefile-Release.mk:CND_PLATFORM=GNU-Linux-x86
netbeans/libctp/nbproject/Makefile-Release.mk:.build-conf: ${BUILD_SUBPROJECTS}
netbeans/libctp/nbproject/Makefile-Release.mk:	"${MAKE}"  -f nbproject/Makefile-${CND_CONF}.mk ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/liblibctp.a
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}
netbeans/libctp/nbproject/Makefile-Release.mk:	${AR} -rv ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/liblibctp.a ${OBJECTFILES} 
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/segment.o ../../src/libctp/segment.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/parallelpaircalc.o ../../src/libctp/parallelpaircalc.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/neighborlist.o ../../src/libctp/calculators/neighborlist.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/qmapplication.o ../../src/libctp/qmapplication.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/apolarsite.o ../../src/libctp/apolarsite.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/idft.o ../../src/libctp/calculators/idft.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/tdump.o ../../src/libctp/calculators/tdump.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/izindo.o ../../src/libctp/calculators/izindo.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/qmpair.o ../../src/libctp/qmpair.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/gaussian.o ../../src/libctp/gaussian.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/polarsite.o ../../src/libctp/polarsite.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/qmdatabase.o ../../src/libctp/qmdatabase.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/topology.o ../../src/libctp/topology.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/version_nb.o ../../src/libctp/version_nb.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/qmtopology.o ../../src/libctp/qmtopology.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/fragment.o ../../src/libctp/fragment.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/rates.o ../../src/libctp/calculators/rates.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/emultipole_stdal.o ../../src/libctp/calculators/emultipole_stdal.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/orbitals.o ../../src/libctp/orbitals.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/molecule.o ../../src/libctp/molecule.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/stateserver.o ../../src/libctp/calculators/stateserver.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/statesaversqlite.o ../../src/libctp/statesaversqlite.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/qmnblist.o ../../src/libctp/qmnblist.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/sandbox.o ../../src/libctp/calculators/sandbox.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/calculatorfactory.o ../../src/libctp/calculatorfactory.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/einternal.o ../../src/libctp/calculators/einternal.cc
netbeans/libctp/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/238600121
netbeans/libctp/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/238600121/eoutersphere.o ../../src/libctp/calculators/eoutersphere.cc
netbeans/libctp/nbproject/Makefile-Release.mk:.build-subprojects:
netbeans/libctp/nbproject/Makefile-Release.mk:.clean-conf: ${CLEAN_SUBPROJECTS}
netbeans/libctp/nbproject/Makefile-Release.mk:	${RM} -r ${CND_BUILDDIR}/${CND_CONF}
netbeans/libctp/nbproject/Makefile-Release.mk:.clean-subprojects:
netbeans/libctp/nbproject/Makefile-Release.mk:.dep.inc: .depcheck-impl
netbeans/libctp/nbproject/Package-Release.bash:#!/bin/bash -x
netbeans/libctp/nbproject/Package-Release.bash:# Generated - do not edit!
netbeans/libctp/nbproject/Package-Release.bash:CND_PLATFORM=GNU-Linux-x86
netbeans/libctp/nbproject/Package-Release.bash:NBTMPDIR=${CND_BUILDDIR}/${CND_CONF}/${CND_PLATFORM}/tmp-packaging
netbeans/libctp/nbproject/Package-Release.bash:TMPDIRNAME=tmp-packaging
netbeans/libctp/nbproject/Package-Release.bash:    mkdir -p "$1"
netbeans/libctp/nbproject/Package-Release.bash:# $1 from-file path
netbeans/libctp/nbproject/Package-Release.bash:# $2 to-file path
netbeans/libctp/nbproject/Package-Release.bash:mkdir -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package
netbeans/libctp/nbproject/Package-Release.bash:rm -rf ${NBTMPDIR}
netbeans/libctp/nbproject/Package-Release.bash:mkdir -p ${NBTMPDIR}
netbeans/libctp/nbproject/Package-Release.bash:rm -f ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/libctp.tar
netbeans/libctp/nbproject/Package-Release.bash:tar -vcf ../../../../${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/libctp.tar *
netbeans/libctp/nbproject/Package-Release.bash:rm -rf ${NBTMPDIR}
netbeans/libctp/nbproject/configurations.xml.orig:<?xml version="1.0" encoding="UTF-8"?>
netbeans/libctp/nbproject/configurations.xml.orig:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/libctp/nbproject/configurations.xml.orig:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/ctp_app/nbproject/configurations.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_app/nbproject/configurations.xml:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/ctp_app/nbproject/configurations.xml:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/ctp_app/nbproject/project.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_app/nbproject/project.xml:        <data xmlns="http://www.netbeans.org/ns/make-project/1">
netbeans/ctp_app/nbproject/project.xml:            <c-extensions>cc</c-extensions>
netbeans/ctp_app/nbproject/project.xml:            <cpp-extensions/>
netbeans/ctp_app/nbproject/project.xml:            <header-extensions/>
netbeans/ctp_app/nbproject/project.xml:            <sourceEncoding>UTF-8</sourceEncoding>
netbeans/ctp_app/nbproject/project.xml:            <make-dep-projects/>
netbeans/ctp_app/nbproject/private/configurations.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_app/nbproject/private/configurations.xml:        <terminal-type>0</terminal-type>
netbeans/ctp_app/nbproject/private/configurations.xml:        <remove-instrumentation>0</remove-instrumentation>
netbeans/ctp_app/nbproject/private/configurations.xml:        <terminal-type>0</terminal-type>
netbeans/ctp_app/nbproject/private/configurations.xml:        <remove-instrumentation>0</remove-instrumentation>
netbeans/ctp_app/nbproject/private/Makefile-variables.mk:# Generated - do not edit!
netbeans/ctp_app/nbproject/private/private.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_app/nbproject/private/private.xml:<project-private xmlns="http://www.netbeans.org/ns/project-private/1">
netbeans/ctp_app/nbproject/private/private.xml:    <data xmlns="http://www.netbeans.org/ns/make-project-private/1">
netbeans/ctp_app/nbproject/private/private.xml:    <editor-bookmarks xmlns="http://www.netbeans.org/ns/editor-bookmarks/2" lastBookmarkId="0"/>
netbeans/ctp_app/nbproject/private/private.xml:</project-private>
netbeans/ctp_app/nbproject/Makefile-impl.mk:# Generated Makefile - do not edit! 
netbeans/ctp_app/nbproject/Makefile-impl.mk:# has a pre- and a post- target defined where you can add customization code.
netbeans/ctp_app/nbproject/Makefile-impl.mk:# statements set BUILD_SUB-CONF and CLEAN_SUB-CONF to .build-reqprojects-conf
netbeans/ctp_app/nbproject/Makefile-impl.mk:# and .clean-reqprojects-conf unless SUB has the value 'no'
netbeans/ctp_app/nbproject/Makefile-impl.mk:BUILD_SUBPROJECTS_=.build-subprojects
netbeans/ctp_app/nbproject/Makefile-impl.mk:CLEAN_SUBPROJECTS_=.clean-subprojects
netbeans/ctp_app/nbproject/Makefile-impl.mk:.build-impl: .build-pre .validate-impl .depcheck-impl
netbeans/ctp_app/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .build-conf
netbeans/ctp_app/nbproject/Makefile-impl.mk:.clean-impl: .clean-pre .validate-impl .depcheck-impl
netbeans/ctp_app/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .clean-conf
netbeans/ctp_app/nbproject/Makefile-impl.mk:.clobber-impl: .clobber-pre .depcheck-impl
netbeans/ctp_app/nbproject/Makefile-impl.mk:	    "${MAKE}" -f nbproject/Makefile-$${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .clean-conf; \
netbeans/ctp_app/nbproject/Makefile-impl.mk:.all-impl: .all-pre .depcheck-impl
netbeans/ctp_app/nbproject/Makefile-impl.mk:	    "${MAKE}" -f nbproject/Makefile-$${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .build-conf; \
netbeans/ctp_app/nbproject/Makefile-impl.mk:.build-tests-impl: .build-impl .build-tests-pre
netbeans/ctp_app/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk SUBPROJECTS=${SUBPROJECTS} .build-tests-conf
netbeans/ctp_app/nbproject/Makefile-impl.mk:.test-impl: .build-tests-impl .test-pre
netbeans/ctp_app/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk SUBPROJECTS=${SUBPROJECTS} .test-conf
netbeans/ctp_app/nbproject/Makefile-impl.mk:.depcheck-impl:
netbeans/ctp_app/nbproject/Makefile-impl.mk:	@if [ -n "${MAKE_VERSION}" ]; then \
netbeans/ctp_app/nbproject/Makefile-impl.mk:.validate-impl:
netbeans/ctp_app/nbproject/Makefile-impl.mk:	@if [ ! -f nbproject/Makefile-${CONF}.mk ]; \
netbeans/ctp_app/nbproject/Makefile-impl.mk:	@if [ ! -f nbproject/Makefile-${CONF}.mk ]; \
netbeans/ctp_app/nbproject/Makefile-impl.mk:.help-impl: .help-pre
netbeans/ctp_app/nbproject/Makefile-Debug.mk:# Generated Makefile - do not edit!
netbeans/ctp_app/nbproject/Makefile-Debug.mk:# has a -pre and a -post target defined where you can add customized code.
netbeans/ctp_app/nbproject/Makefile-Debug.mk:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_app/nbproject/Makefile-Debug.mk:.build-conf: ${BUILD_SUBPROJECTS}
netbeans/ctp_app/nbproject/Makefile-Debug.mk:	"${MAKE}"  -f nbproject/Makefile-${CND_CONF}.mk ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_app
netbeans/ctp_app/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}
netbeans/ctp_app/nbproject/Makefile-Debug.mk:	${LINK.c} -o ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_app ${OBJECTFILES} ${LDLIBSOPTIONS} 
netbeans/ctp_app/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/715944016
netbeans/ctp_app/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/715944016/ctp_app.o ../../src/tools/ctp_app.cc
netbeans/ctp_app/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/ctp_app/nbproject/Makefile-Debug.mk:	$(COMPILE.c) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/toolfactory.o ../../src/libctp/toolfactory.cc
netbeans/ctp_app/nbproject/Makefile-Debug.mk:.build-subprojects:
netbeans/ctp_app/nbproject/Makefile-Debug.mk:.clean-conf: ${CLEAN_SUBPROJECTS}
netbeans/ctp_app/nbproject/Makefile-Debug.mk:	${RM} -r ${CND_BUILDDIR}/${CND_CONF}
netbeans/ctp_app/nbproject/Makefile-Debug.mk:.clean-subprojects:
netbeans/ctp_app/nbproject/Makefile-Debug.mk:.dep.inc: .depcheck-impl
netbeans/ctp_app/nbproject/Package-Debug.bash:#!/bin/bash -x
netbeans/ctp_app/nbproject/Package-Debug.bash:# Generated - do not edit!
netbeans/ctp_app/nbproject/Package-Debug.bash:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_app/nbproject/Package-Debug.bash:NBTMPDIR=${CND_BUILDDIR}/${CND_CONF}/${CND_PLATFORM}/tmp-packaging
netbeans/ctp_app/nbproject/Package-Debug.bash:TMPDIRNAME=tmp-packaging
netbeans/ctp_app/nbproject/Package-Debug.bash:    mkdir -p "$1"
netbeans/ctp_app/nbproject/Package-Debug.bash:# $1 from-file path
netbeans/ctp_app/nbproject/Package-Debug.bash:# $2 to-file path
netbeans/ctp_app/nbproject/Package-Debug.bash:mkdir -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package
netbeans/ctp_app/nbproject/Package-Debug.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_app/nbproject/Package-Debug.bash:mkdir -p ${NBTMPDIR}
netbeans/ctp_app/nbproject/Package-Debug.bash:rm -f ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpapp.tar
netbeans/ctp_app/nbproject/Package-Debug.bash:tar -vcf ../../../../${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpapp.tar *
netbeans/ctp_app/nbproject/Package-Debug.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_app/nbproject/Makefile-Release.mk:# Generated Makefile - do not edit!
netbeans/ctp_app/nbproject/Makefile-Release.mk:# has a -pre and a -post target defined where you can add customized code.
netbeans/ctp_app/nbproject/Makefile-Release.mk:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_app/nbproject/Makefile-Release.mk:.build-conf: ${BUILD_SUBPROJECTS}
netbeans/ctp_app/nbproject/Makefile-Release.mk:	"${MAKE}"  -f nbproject/Makefile-${CND_CONF}.mk ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_app
netbeans/ctp_app/nbproject/Makefile-Release.mk:	${MKDIR} -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}
netbeans/ctp_app/nbproject/Makefile-Release.mk:	${LINK.c} -o ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_app ${OBJECTFILES} ${LDLIBSOPTIONS} 
netbeans/ctp_app/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/715944016
netbeans/ctp_app/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/715944016/ctp_app.o ../../src/tools/ctp_app.cc
netbeans/ctp_app/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/484457893
netbeans/ctp_app/nbproject/Makefile-Release.mk:	$(COMPILE.c) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/484457893/toolfactory.o ../../src/libctp/toolfactory.cc
netbeans/ctp_app/nbproject/Makefile-Release.mk:.build-subprojects:
netbeans/ctp_app/nbproject/Makefile-Release.mk:.clean-conf: ${CLEAN_SUBPROJECTS}
netbeans/ctp_app/nbproject/Makefile-Release.mk:	${RM} -r ${CND_BUILDDIR}/${CND_CONF}
netbeans/ctp_app/nbproject/Makefile-Release.mk:.clean-subprojects:
netbeans/ctp_app/nbproject/Makefile-Release.mk:.dep.inc: .depcheck-impl
netbeans/ctp_app/nbproject/Package-Release.bash:#!/bin/bash -x
netbeans/ctp_app/nbproject/Package-Release.bash:# Generated - do not edit!
netbeans/ctp_app/nbproject/Package-Release.bash:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_app/nbproject/Package-Release.bash:NBTMPDIR=${CND_BUILDDIR}/${CND_CONF}/${CND_PLATFORM}/tmp-packaging
netbeans/ctp_app/nbproject/Package-Release.bash:TMPDIRNAME=tmp-packaging
netbeans/ctp_app/nbproject/Package-Release.bash:    mkdir -p "$1"
netbeans/ctp_app/nbproject/Package-Release.bash:# $1 from-file path
netbeans/ctp_app/nbproject/Package-Release.bash:# $2 to-file path
netbeans/ctp_app/nbproject/Package-Release.bash:mkdir -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package
netbeans/ctp_app/nbproject/Package-Release.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_app/nbproject/Package-Release.bash:mkdir -p ${NBTMPDIR}
netbeans/ctp_app/nbproject/Package-Release.bash:rm -f ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpapp.tar
netbeans/ctp_app/nbproject/Package-Release.bash:tar -vcf ../../../../${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpapp.tar *
netbeans/ctp_app/nbproject/Package-Release.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_app/nbproject/Makefile-variables.mk:# Generated - do not edit!
netbeans/ctp_app/nbproject/Makefile-variables.mk:CND_PLATFORM_Debug=GNU-Linux-x86
netbeans/ctp_app/nbproject/Makefile-variables.mk:CND_ARTIFACT_DIR_Debug=dist/Debug/GNU-Linux-x86
netbeans/ctp_app/nbproject/Makefile-variables.mk:CND_ARTIFACT_PATH_Debug=dist/Debug/GNU-Linux-x86/ctp_app
netbeans/ctp_app/nbproject/Makefile-variables.mk:CND_PACKAGE_DIR_Debug=dist/Debug/GNU-Linux-x86/package
netbeans/ctp_app/nbproject/Makefile-variables.mk:CND_PACKAGE_PATH_Debug=dist/Debug/GNU-Linux-x86/package/ctpapp.tar
netbeans/ctp_app/nbproject/Makefile-variables.mk:CND_PLATFORM_Release=GNU-Linux-x86
netbeans/ctp_app/nbproject/Makefile-variables.mk:CND_ARTIFACT_DIR_Release=dist/Release/GNU-Linux-x86
netbeans/ctp_app/nbproject/Makefile-variables.mk:CND_ARTIFACT_PATH_Release=dist/Release/GNU-Linux-x86/ctp_app
netbeans/ctp_app/nbproject/Makefile-variables.mk:CND_PACKAGE_DIR_Release=dist/Release/GNU-Linux-x86/package
netbeans/ctp_app/nbproject/Makefile-variables.mk:CND_PACKAGE_PATH_Release=dist/Release/GNU-Linux-x86/package/ctpapp.tar
netbeans/ctp_app/nbproject/Makefile-variables.mk:ROOT:sh = test -f nbproject/private/Makefile-variables.mk || \
netbeans/ctp_app/nbproject/Makefile-variables.mk:	(mkdir -p nbproject/private && touch nbproject/private/Makefile-variables.mk)
netbeans/ctp_app/nbproject/Makefile-variables.mk:.PHONY: $(shell test -f nbproject/private/Makefile-variables.mk || (mkdir -p nbproject/private && touch nbproject/private/Makefile-variables.mk))
netbeans/ctp_app/nbproject/Makefile-variables.mk:include nbproject/private/Makefile-variables.mk
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:# Generated Makefile - do not edit!
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:# has a -pre and a -post target defined where you can add customized code.
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:.build-conf: ${BUILD_SUBPROJECTS}
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:	"${MAKE}"  -f nbproject/Makefile-${CND_CONF}.mk ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_diode
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:	${LINK.cc} -o ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_diode ${OBJECTFILES} ${LDLIBSOPTIONS} 
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/715944016
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:	$(COMPILE.cc) -g -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/715944016/ctp_diode.o ../../src/tools/ctp_diode.cc
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:.build-subprojects:
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:.clean-conf: ${CLEAN_SUBPROJECTS}
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:	${RM} -r ${CND_BUILDDIR}/${CND_CONF}
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:.clean-subprojects:
netbeans/ctp_diode/nbproject/Makefile-Debug.mk:.dep.inc: .depcheck-impl
netbeans/ctp_diode/nbproject/Makefile-Release.mk:# Generated Makefile - do not edit!
netbeans/ctp_diode/nbproject/Makefile-Release.mk:# has a -pre and a -post target defined where you can add customized code.
netbeans/ctp_diode/nbproject/Makefile-Release.mk:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_diode/nbproject/Makefile-Release.mk:.build-conf: ${BUILD_SUBPROJECTS}
netbeans/ctp_diode/nbproject/Makefile-Release.mk:	"${MAKE}"  -f nbproject/Makefile-${CND_CONF}.mk ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_diode
netbeans/ctp_diode/nbproject/Makefile-Release.mk:	${MKDIR} -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}
netbeans/ctp_diode/nbproject/Makefile-Release.mk:	${LINK.cc} -o ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/ctp_diode ${OBJECTFILES} ${LDLIBSOPTIONS} 
netbeans/ctp_diode/nbproject/Makefile-Release.mk:	${MKDIR} -p ${OBJECTDIR}/_ext/715944016
netbeans/ctp_diode/nbproject/Makefile-Release.mk:	$(COMPILE.cc) -O2 -MMD -MP -MF $@.d -o ${OBJECTDIR}/_ext/715944016/ctp_diode.o ../../src/tools/ctp_diode.cc
netbeans/ctp_diode/nbproject/Makefile-Release.mk:.build-subprojects:
netbeans/ctp_diode/nbproject/Makefile-Release.mk:.clean-conf: ${CLEAN_SUBPROJECTS}
netbeans/ctp_diode/nbproject/Makefile-Release.mk:	${RM} -r ${CND_BUILDDIR}/${CND_CONF}
netbeans/ctp_diode/nbproject/Makefile-Release.mk:.clean-subprojects:
netbeans/ctp_diode/nbproject/Makefile-Release.mk:.dep.inc: .depcheck-impl
netbeans/ctp_diode/nbproject/Makefile-impl.mk:# Generated Makefile - do not edit! 
netbeans/ctp_diode/nbproject/Makefile-impl.mk:# has a pre- and a post- target defined where you can add customization code.
netbeans/ctp_diode/nbproject/Makefile-impl.mk:# statements set BUILD_SUB-CONF and CLEAN_SUB-CONF to .build-reqprojects-conf
netbeans/ctp_diode/nbproject/Makefile-impl.mk:# and .clean-reqprojects-conf unless SUB has the value 'no'
netbeans/ctp_diode/nbproject/Makefile-impl.mk:BUILD_SUBPROJECTS_=.build-subprojects
netbeans/ctp_diode/nbproject/Makefile-impl.mk:CLEAN_SUBPROJECTS_=.clean-subprojects
netbeans/ctp_diode/nbproject/Makefile-impl.mk:.build-impl: .build-pre .validate-impl .depcheck-impl
netbeans/ctp_diode/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .build-conf
netbeans/ctp_diode/nbproject/Makefile-impl.mk:.clean-impl: .clean-pre .validate-impl .depcheck-impl
netbeans/ctp_diode/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .clean-conf
netbeans/ctp_diode/nbproject/Makefile-impl.mk:.clobber-impl: .clobber-pre .depcheck-impl
netbeans/ctp_diode/nbproject/Makefile-impl.mk:	    "${MAKE}" -f nbproject/Makefile-$${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .clean-conf; \
netbeans/ctp_diode/nbproject/Makefile-impl.mk:.all-impl: .all-pre .depcheck-impl
netbeans/ctp_diode/nbproject/Makefile-impl.mk:	    "${MAKE}" -f nbproject/Makefile-$${CONF}.mk QMAKE=${QMAKE} SUBPROJECTS=${SUBPROJECTS} .build-conf; \
netbeans/ctp_diode/nbproject/Makefile-impl.mk:.build-tests-impl: .build-impl .build-tests-pre
netbeans/ctp_diode/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk SUBPROJECTS=${SUBPROJECTS} .build-tests-conf
netbeans/ctp_diode/nbproject/Makefile-impl.mk:.test-impl: .build-tests-impl .test-pre
netbeans/ctp_diode/nbproject/Makefile-impl.mk:	"${MAKE}" -f nbproject/Makefile-${CONF}.mk SUBPROJECTS=${SUBPROJECTS} .test-conf
netbeans/ctp_diode/nbproject/Makefile-impl.mk:.depcheck-impl:
netbeans/ctp_diode/nbproject/Makefile-impl.mk:	@if [ -n "${MAKE_VERSION}" ]; then \
netbeans/ctp_diode/nbproject/Makefile-impl.mk:.validate-impl:
netbeans/ctp_diode/nbproject/Makefile-impl.mk:	@if [ ! -f nbproject/Makefile-${CONF}.mk ]; \
netbeans/ctp_diode/nbproject/Makefile-impl.mk:	@if [ ! -f nbproject/Makefile-${CONF}.mk ]; \
netbeans/ctp_diode/nbproject/Makefile-impl.mk:.help-impl: .help-pre
netbeans/ctp_diode/nbproject/Makefile-variables.mk:# Generated - do not edit!
netbeans/ctp_diode/nbproject/Makefile-variables.mk:CND_PLATFORM_Debug=GNU-Linux-x86
netbeans/ctp_diode/nbproject/Makefile-variables.mk:CND_ARTIFACT_DIR_Debug=dist/Debug/GNU-Linux-x86
netbeans/ctp_diode/nbproject/Makefile-variables.mk:CND_ARTIFACT_PATH_Debug=dist/Debug/GNU-Linux-x86/ctp_diode
netbeans/ctp_diode/nbproject/Makefile-variables.mk:CND_PACKAGE_DIR_Debug=dist/Debug/GNU-Linux-x86/package
netbeans/ctp_diode/nbproject/Makefile-variables.mk:CND_PACKAGE_PATH_Debug=dist/Debug/GNU-Linux-x86/package/ctpdiode.tar
netbeans/ctp_diode/nbproject/Makefile-variables.mk:CND_PLATFORM_Release=GNU-Linux-x86
netbeans/ctp_diode/nbproject/Makefile-variables.mk:CND_ARTIFACT_DIR_Release=dist/Release/GNU-Linux-x86
netbeans/ctp_diode/nbproject/Makefile-variables.mk:CND_ARTIFACT_PATH_Release=dist/Release/GNU-Linux-x86/ctp_diode
netbeans/ctp_diode/nbproject/Makefile-variables.mk:CND_PACKAGE_DIR_Release=dist/Release/GNU-Linux-x86/package
netbeans/ctp_diode/nbproject/Makefile-variables.mk:CND_PACKAGE_PATH_Release=dist/Release/GNU-Linux-x86/package/ctpdiode.tar
netbeans/ctp_diode/nbproject/Makefile-variables.mk:ROOT:sh = test -f nbproject/private/Makefile-variables.mk || \
netbeans/ctp_diode/nbproject/Makefile-variables.mk:	(mkdir -p nbproject/private && touch nbproject/private/Makefile-variables.mk)
netbeans/ctp_diode/nbproject/Makefile-variables.mk:.PHONY: $(shell test -f nbproject/private/Makefile-variables.mk || (mkdir -p nbproject/private && touch nbproject/private/Makefile-variables.mk))
netbeans/ctp_diode/nbproject/Makefile-variables.mk:include nbproject/private/Makefile-variables.mk
netbeans/ctp_diode/nbproject/Package-Debug.bash:#!/bin/bash -x
netbeans/ctp_diode/nbproject/Package-Debug.bash:# Generated - do not edit!
netbeans/ctp_diode/nbproject/Package-Debug.bash:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_diode/nbproject/Package-Debug.bash:NBTMPDIR=${CND_BUILDDIR}/${CND_CONF}/${CND_PLATFORM}/tmp-packaging
netbeans/ctp_diode/nbproject/Package-Debug.bash:TMPDIRNAME=tmp-packaging
netbeans/ctp_diode/nbproject/Package-Debug.bash:    mkdir -p "$1"
netbeans/ctp_diode/nbproject/Package-Debug.bash:# $1 from-file path
netbeans/ctp_diode/nbproject/Package-Debug.bash:# $2 to-file path
netbeans/ctp_diode/nbproject/Package-Debug.bash:mkdir -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package
netbeans/ctp_diode/nbproject/Package-Debug.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_diode/nbproject/Package-Debug.bash:mkdir -p ${NBTMPDIR}
netbeans/ctp_diode/nbproject/Package-Debug.bash:rm -f ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpdiode.tar
netbeans/ctp_diode/nbproject/Package-Debug.bash:tar -vcf ../../../../${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpdiode.tar *
netbeans/ctp_diode/nbproject/Package-Debug.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_diode/nbproject/Package-Release.bash:#!/bin/bash -x
netbeans/ctp_diode/nbproject/Package-Release.bash:# Generated - do not edit!
netbeans/ctp_diode/nbproject/Package-Release.bash:CND_PLATFORM=GNU-Linux-x86
netbeans/ctp_diode/nbproject/Package-Release.bash:NBTMPDIR=${CND_BUILDDIR}/${CND_CONF}/${CND_PLATFORM}/tmp-packaging
netbeans/ctp_diode/nbproject/Package-Release.bash:TMPDIRNAME=tmp-packaging
netbeans/ctp_diode/nbproject/Package-Release.bash:    mkdir -p "$1"
netbeans/ctp_diode/nbproject/Package-Release.bash:# $1 from-file path
netbeans/ctp_diode/nbproject/Package-Release.bash:# $2 to-file path
netbeans/ctp_diode/nbproject/Package-Release.bash:mkdir -p ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package
netbeans/ctp_diode/nbproject/Package-Release.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_diode/nbproject/Package-Release.bash:mkdir -p ${NBTMPDIR}
netbeans/ctp_diode/nbproject/Package-Release.bash:rm -f ${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpdiode.tar
netbeans/ctp_diode/nbproject/Package-Release.bash:tar -vcf ../../../../${CND_DISTDIR}/${CND_CONF}/${CND_PLATFORM}/package/ctpdiode.tar *
netbeans/ctp_diode/nbproject/Package-Release.bash:rm -rf ${NBTMPDIR}
netbeans/ctp_diode/nbproject/configurations.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_diode/nbproject/configurations.xml:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/ctp_diode/nbproject/configurations.xml:        <remote-sources-mode>LOCAL_SOURCES</remote-sources-mode>
netbeans/ctp_diode/nbproject/project.xml:<?xml version="1.0" encoding="UTF-8"?>
netbeans/ctp_diode/nbproject/project.xml:        <data xmlns="http://www.netbeans.org/ns/make-project/1">
netbeans/ctp_diode/nbproject/project.xml:            <c-extensions/>
netbeans/ctp_diode/nbproject/project.xml:            <cpp-extensions>cc</cpp-extensions>
netbeans/ctp_diode/nbproject/project.xml:            <header-extensions/>
netbeans/ctp_diode/nbproject/project.xml:            <sourceEncoding>UTF-8</sourceEncoding>
netbeans/ctp_diode/nbproject/project.xml:            <make-dep-projects/>
scripts/CMakeLists.txt:      -DINPUT="${SCRIPT}.out" -DOUTPUT="${SCRIPT}"
scripts/CMakeLists.txt:      -DTOP_SOURCE_DIR="${CMAKE_SOURCE_DIR}" -P ${CMAKE_MODULE_PATH}/hgscript.cmake
scripts/ctp_dipro.in:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
scripts/ctp_dipro.in:#     http://www.apache.org/licenses/LICENSE-2.0
scripts/ctp_dipro.in:  echo -e "$*" >&2
scripts/ctp_dipro.in:integrals using density-functional theory.
scripts/ctp_dipro.in:Usage: ${0##*/} OPTIONS [--monomer|--check|--dimer|--write] key1 key2 key3 
scripts/ctp_dipro.in:    --monomer        Calculation of a monomer
scripts/ctp_dipro.in:                     key1: G - Gaussian09
scripts/ctp_dipro.in:                           T - Turbomole
scripts/ctp_dipro.in:    --check          Check monomer calculations
scripts/ctp_dipro.in:                     key3: G - Gaussian09
scripts/ctp_dipro.in:                           T - Turbomole
scripts/ctp_dipro.in:    --dimer          Calculation of a dimer + transfer integral
scripts/ctp_dipro.in:                     key1: G - Gaussian09
scripts/ctp_dipro.in:                           T - Turbomole
scripts/ctp_dipro.in:    --write          Write calculated transfer integrals to state file!
scripts/ctp_dipro.in:                     key1: h - holes
scripts/ctp_dipro.in:                           e - electrons
scripts/ctp_dipro.in:    --debug          Enable debug mode with a lot of information
scripts/ctp_dipro.in:    --error          Be more picky about error
scripts/ctp_dipro.in:-h, --help           Show this help
scripts/ctp_dipro.in:* ${0##*/} --monomer G pbepbe/6-311G
scripts/ctp_dipro.in:* ${0##*/} --check 1 512 T
scripts/ctp_dipro.in:while [[ ${1#-} != $1 ]]; do
scripts/ctp_dipro.in: if [[ ${1#--} = $1 && -n ${1:2} ]]; then
scripts/ctp_dipro.in:    if [[ ${1#-[fc]} != ${1} ]]; then
scripts/ctp_dipro.in:       set -- "${1:0:2}" "${1:2}" "${@:2}"
scripts/ctp_dipro.in:       set -- "${1:0:2}" "-${1:2}" "${@:2}"
scripts/ctp_dipro.in:   --monomer|--check|--dimer|--write)
scripts/ctp_dipro.in:    [[ -n $cmd ]] && die "Only one option out of [--monomer|--check|--dimer|--write] possible"
scripts/ctp_dipro.in:  -h | --help)
scripts/ctp_dipro.in:    --debug)
scripts/ctp_dipro.in:    debug="-x"
scripts/ctp_dipro.in:    --error)
scripts/ctp_dipro.in:    error="-e"
scripts/ctp_dipro.in:   -v | --version)
scripts/ctp_dipro.in:if [[ -n "$(type -p csg_call)" ]]; then
scripts/ctp_dipro.in:  VOTCASHARE="$(csg_call --show-share)" || die "csg_call --show-share failed"
scripts/ctp_dipro.in:[[ -z $cmd ]] && die "Specify at least one option out of [--monomer|--check|--dimer|--write]"
scripts/ctp_dipro.in:  --write)
scripts/ctp_dipro.in:   --monomer|--dimer)
scripts/ctp_dipro.in:     src="calc_${cmd#--}.sh";;
scripts/ctp_dipro.in:   --check)
scripts/ctp_dipro.in:  [[ -z ${!i} ]] && die "Option $cmd needs at least $args arguments"
scripts/ctp_dipro.in:[[ -f ${VOTCASHARE}/scripts/dipro/$src ]] || die "Could not find $cmd in ${VOTCASHARE}/scripts/dipro"
scripts/CMakeFiles/ctp_dipro.dir/cmake_clean.cmake:# Per-language clean rules from dependency scanning.
scripts/CMakeFiles/ctp_dipro.dir/build.make:RM = /usr/bin/cmake -E remove -f
scripts/CMakeFiles/ctp_dipro.dir/build.make:# The top-level source directory on which CMake was run.
scripts/CMakeFiles/ctp_dipro.dir/build.make:# The top-level build directory on which CMake was run.
scripts/CMakeFiles/ctp_dipro.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/scripts && /usr/bin/cmake -DINPUT="ctp_dipro.out" -DOUTPUT="ctp_dipro" -DTOP_SOURCE_DIR="/people/thnfs/homes/melnyk/votca/src/ctp" -P /people/thnfs/homes/melnyk/votca/src/ctp/CMakeModules/hgscript.cmake
scripts/CMakeFiles/ctp_dipro.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/scripts && $(CMAKE_COMMAND) -P CMakeFiles/ctp_dipro.dir/cmake_clean.cmake
scripts/CMakeFiles/ctp_dipro.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/scripts /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/scripts /people/thnfs/homes/melnyk/votca/src/ctp/scripts/CMakeFiles/ctp_dipro.dir/DependInfo.cmake --color=$(COLOR)
scripts/ctp_dipro.out:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
scripts/ctp_dipro.out:#     http://www.apache.org/licenses/LICENSE-2.0
scripts/ctp_dipro.out:version='1.3-dev hgid: a0026a522724+'
scripts/ctp_dipro.out:  echo -e "$*" >&2
scripts/ctp_dipro.out:integrals using density-functional theory.
scripts/ctp_dipro.out:Usage: ${0##*/} OPTIONS [--monomer|--check|--dimer|--write] key1 key2 key3 
scripts/ctp_dipro.out:    --monomer        Calculation of a monomer
scripts/ctp_dipro.out:                     key1: G - Gaussian09
scripts/ctp_dipro.out:                           T - Turbomole
scripts/ctp_dipro.out:    --check          Check monomer calculations
scripts/ctp_dipro.out:                     key3: G - Gaussian09
scripts/ctp_dipro.out:                           T - Turbomole
scripts/ctp_dipro.out:    --dimer          Calculation of a dimer + transfer integral
scripts/ctp_dipro.out:                     key1: G - Gaussian09
scripts/ctp_dipro.out:                           T - Turbomole
scripts/ctp_dipro.out:    --write          Write calculated transfer integrals to state file!
scripts/ctp_dipro.out:                     key1: h - holes
scripts/ctp_dipro.out:                           e - electrons
scripts/ctp_dipro.out:    --debug          Enable debug mode with a lot of information
scripts/ctp_dipro.out:    --error          Be more picky about error
scripts/ctp_dipro.out:-h, --help           Show this help
scripts/ctp_dipro.out:* ${0##*/} --monomer G pbepbe/6-311G
scripts/ctp_dipro.out:* ${0##*/} --check 1 512 T
scripts/ctp_dipro.out:while [[ ${1#-} != $1 ]]; do
scripts/ctp_dipro.out: if [[ ${1#--} = $1 && -n ${1:2} ]]; then
scripts/ctp_dipro.out:    if [[ ${1#-[fc]} != ${1} ]]; then
scripts/ctp_dipro.out:       set -- "${1:0:2}" "${1:2}" "${@:2}"
scripts/ctp_dipro.out:       set -- "${1:0:2}" "-${1:2}" "${@:2}"
scripts/ctp_dipro.out:   --monomer|--check|--dimer|--write)
scripts/ctp_dipro.out:    [[ -n $cmd ]] && die "Only one option out of [--monomer|--check|--dimer|--write] possible"
scripts/ctp_dipro.out:  -h | --help)
scripts/ctp_dipro.out:    --debug)
scripts/ctp_dipro.out:    debug="-x"
scripts/ctp_dipro.out:    --error)
scripts/ctp_dipro.out:    error="-e"
scripts/ctp_dipro.out:   -v | --version)
scripts/ctp_dipro.out:if [[ -n "$(type -p csg_call)" ]]; then
scripts/ctp_dipro.out:  VOTCASHARE="$(csg_call --show-share)" || die "csg_call --show-share failed"
scripts/ctp_dipro.out:[[ -z $cmd ]] && die "Specify at least one option out of [--monomer|--check|--dimer|--write]"
scripts/ctp_dipro.out:  --write)
scripts/ctp_dipro.out:   --monomer|--dimer)
scripts/ctp_dipro.out:     src="calc_${cmd#--}.sh";;
scripts/ctp_dipro.out:   --check)
scripts/ctp_dipro.out:  [[ -z ${!i} ]] && die "Option $cmd needs at least $args arguments"
scripts/ctp_dipro.out:[[ -f ${VOTCASHARE}/scripts/dipro/$src ]] || die "Could not find $cmd in ${VOTCASHARE}/scripts/dipro"
scripts/Makefile:RM = /usr/bin/cmake -E remove -f
scripts/Makefile:# The top-level source directory on which CMake was run.
scripts/Makefile:# The top-level build directory on which CMake was run.
scripts/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
scripts/Makefile:	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
scripts/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
scripts/Makefile:	/usr/bin/cmake -P cmake_install.cmake
scripts/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
scripts/Makefile:	/usr/bin/cmake -P cmake_install.cmake
scripts/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
scripts/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
scripts/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
scripts/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
scripts/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
scripts/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
scripts/Makefile:	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
scripts/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles /people/thnfs/homes/melnyk/votca/src/ctp/scripts/CMakeFiles/progress.marks
scripts/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 scripts/all
scripts/Makefile:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
scripts/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 scripts/clean
scripts/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 scripts/preinstall
scripts/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 scripts/preinstall
scripts/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
scripts/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 scripts/CMakeFiles/ctp_dipro.dir/rule
scripts/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f scripts/CMakeFiles/ctp_dipro.dir/build.make scripts/CMakeFiles/ctp_dipro.dir/build
scripts/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
scripts/cmake_install.cmake:    STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
scripts/ctp_dipro:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
scripts/ctp_dipro:#     http://www.apache.org/licenses/LICENSE-2.0
scripts/ctp_dipro:version='1.3-dev hgid: a0026a522724+'
scripts/ctp_dipro:  echo -e "$*" >&2
scripts/ctp_dipro:integrals using density-functional theory.
scripts/ctp_dipro:Usage: ${0##*/} OPTIONS [--monomer|--check|--dimer|--write] key1 key2 key3 
scripts/ctp_dipro:    --monomer        Calculation of a monomer
scripts/ctp_dipro:                     key1: G - Gaussian09
scripts/ctp_dipro:                           T - Turbomole
scripts/ctp_dipro:    --check          Check monomer calculations
scripts/ctp_dipro:                     key3: G - Gaussian09
scripts/ctp_dipro:                           T - Turbomole
scripts/ctp_dipro:    --dimer          Calculation of a dimer + transfer integral
scripts/ctp_dipro:                     key1: G - Gaussian09
scripts/ctp_dipro:                           T - Turbomole
scripts/ctp_dipro:    --write          Write calculated transfer integrals to state file!
scripts/ctp_dipro:                     key1: h - holes
scripts/ctp_dipro:                           e - electrons
scripts/ctp_dipro:    --debug          Enable debug mode with a lot of information
scripts/ctp_dipro:    --error          Be more picky about error
scripts/ctp_dipro:-h, --help           Show this help
scripts/ctp_dipro:* ${0##*/} --monomer G pbepbe/6-311G
scripts/ctp_dipro:* ${0##*/} --check 1 512 T
scripts/ctp_dipro:while [[ ${1#-} != $1 ]]; do
scripts/ctp_dipro: if [[ ${1#--} = $1 && -n ${1:2} ]]; then
scripts/ctp_dipro:    if [[ ${1#-[fc]} != ${1} ]]; then
scripts/ctp_dipro:       set -- "${1:0:2}" "${1:2}" "${@:2}"
scripts/ctp_dipro:       set -- "${1:0:2}" "-${1:2}" "${@:2}"
scripts/ctp_dipro:   --monomer|--check|--dimer|--write)
scripts/ctp_dipro:    [[ -n $cmd ]] && die "Only one option out of [--monomer|--check|--dimer|--write] possible"
scripts/ctp_dipro:  -h | --help)
scripts/ctp_dipro:    --debug)
scripts/ctp_dipro:    debug="-x"
scripts/ctp_dipro:    --error)
scripts/ctp_dipro:    error="-e"
scripts/ctp_dipro:   -v | --version)
scripts/ctp_dipro:if [[ -n "$(type -p csg_call)" ]]; then
scripts/ctp_dipro:  VOTCASHARE="$(csg_call --show-share)" || die "csg_call --show-share failed"
scripts/ctp_dipro:[[ -z $cmd ]] && die "Specify at least one option out of [--monomer|--check|--dimer|--write]"
scripts/ctp_dipro:  --write)
scripts/ctp_dipro:   --monomer|--dimer)
scripts/ctp_dipro:     src="calc_${cmd#--}.sh";;
scripts/ctp_dipro:   --check)
scripts/ctp_dipro:  [[ -z ${!i} ]] && die "Option $cmd needs at least $args arguments"
scripts/ctp_dipro:[[ -f ${VOTCASHARE}/scripts/dipro/$src ]] || die "Could not find $cmd in ${VOTCASHARE}/scripts/dipro"
share/scripts/dipro/calc_dimer.sh:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
share/scripts/dipro/calc_dimer.sh:#     http://www.apache.org/licenses/LICENSE-2.0
share/scripts/dipro/calc_dimer.sh:  awk -v mem=$memmax  '
share/scripts/dipro/calc_dimer.sh:# prepare turbomole input-files; coord has to be there
share/scripts/dipro/calc_dimer.sh:    if [ -z "$TURBODIR" ]; then
share/scripts/dipro/calc_dimer.sh:    if [ -n "$input" ]; then
share/scripts/dipro/calc_dimer.sh:	basis="def-TZVP"
share/scripts/dipro/calc_dimer.sh:    babel -ixyz $XYZ -otmol coord
share/scripts/dipro/calc_dimer.sh:    if  [ ! -f ../molA/mos ]; then
share/scripts/dipro/calc_dimer.sh:    if  [ ! -f ../molB/mos ]; then
share/scripts/dipro/calc_dimer.sh:    sed -i 's/ a / A /g' mos_A
share/scripts/dipro/calc_dimer.sh:    sed -i 's/ a / B /g' mos_B
share/scripts/dipro/calc_dimer.sh:    sed -i 's/eigenvalue=/ /g' mos_D
share/scripts/dipro/calc_dimer.sh:    sed -i 's/D/E/g' mos_D
share/scripts/dipro/calc_dimer.sh:    sort -g +2 mos_D | nl > sorted
share/scripts/dipro/calc_dimer.sh:    if [ -e ../molA/degenH ]; then
share/scripts/dipro/calc_dimer.sh:	while [ $diff -eq 0 ]; do
share/scripts/dipro/calc_dimer.sh:	    level=$(( $level -1 ))
share/scripts/dipro/calc_dimer.sh:	    split=`echo $enHA  $en  | awk '{print $1 - $2 }'`
share/scripts/dipro/calc_dimer.sh:	    if [ $dec -eq 0 ]; then
share/scripts/dipro/calc_dimer.sh:    if [ -e ../molA/degenL ]; then
share/scripts/dipro/calc_dimer.sh:	while [ $diff -eq 0 ]; do
share/scripts/dipro/calc_dimer.sh:	    split=`echo $en $enLA  | awk '{print $1 - $2 }'`
share/scripts/dipro/calc_dimer.sh:	    if [ $dec -eq 0 ]; then
share/scripts/dipro/calc_dimer.sh:    if [ -e ../molB/degenH ]; then
share/scripts/dipro/calc_dimer.sh:	while [ $diff -eq 0 ]; do
share/scripts/dipro/calc_dimer.sh:	    level=$(( $level -1 ))
share/scripts/dipro/calc_dimer.sh:	    split=`echo $enHB $en  | awk '{print $1 - $2 }'`
share/scripts/dipro/calc_dimer.sh:	    if [ $dec -eq 0 ]; then
share/scripts/dipro/calc_dimer.sh:    if [ -e ../molB/degenL ]; then
share/scripts/dipro/calc_dimer.sh:	while [ $diff -eq 0 ]; do
share/scripts/dipro/calc_dimer.sh:	    split=`echo $en $enLB  | awk '{print $1 - $2 }'`
share/scripts/dipro/calc_dimer.sh:	    if [ $dec -eq 0 ]; then
share/scripts/dipro/calc_dimer.sh:	level=$(( $HOMOA - $i ))
share/scripts/dipro/calc_dimer.sh:	level=$(( $HOMOB - $i ))
share/scripts/dipro/calc_dimer.sh:    if [ -z "$g09root" ]; then
share/scripts/dipro/calc_dimer.sh:    if [ -n "$2" ]; then
share/scripts/dipro/calc_dimer.sh:	input="pbepbe/6-311G**"
share/scripts/dipro/calc_dimer.sh:    if  [ ! -f ../molA/fort.7 ]; then
share/scripts/dipro/calc_dimer.sh:    if  [ ! -f ../molB/fort.7 ]; then
share/scripts/dipro/calc_dimer.sh:    if [ -e ../molA/degenH ]; then
share/scripts/dipro/calc_dimer.sh:	cat ../molA/fort.7 | grep "Alpha MO" | sed -e "s/OE=/ /g" > molA_en
share/scripts/dipro/calc_dimer.sh:	while [ $diff -eq 0 ]; do
share/scripts/dipro/calc_dimer.sh:	    level=$(( $level -1 ))
share/scripts/dipro/calc_dimer.sh:	    split=`echo $enHA  $en  | awk '{print $1 - $2 }'`
share/scripts/dipro/calc_dimer.sh:	    if [ $dec -eq 0 ]; then
share/scripts/dipro/calc_dimer.sh:    if [ -e ../molA/degenL ]; then
share/scripts/dipro/calc_dimer.sh:	while [ $diff -eq 0 ]; do
share/scripts/dipro/calc_dimer.sh:	    split=`echo $en  $enLA  | awk '{print $1 - $2 }'`
share/scripts/dipro/calc_dimer.sh:	    if [ $dec -eq 0 ]; then
share/scripts/dipro/calc_dimer.sh:    if [ -e ../molB/degenH ]; then
share/scripts/dipro/calc_dimer.sh:	cat ../molB/fort.7 | grep "Alpha MO" | sed -e "s/OE=/ /g" > molB_en
share/scripts/dipro/calc_dimer.sh:	while [ $diff -eq 0 ]; do
share/scripts/dipro/calc_dimer.sh:	    level=$(( $level -1 ))
share/scripts/dipro/calc_dimer.sh:	    split=`echo $enHB  $en  | awk '{print $1 - $2 }'`
share/scripts/dipro/calc_dimer.sh:	    if [ $dec -eq 0 ]; then
share/scripts/dipro/calc_dimer.sh:    if [ -e ../molB/degenL ]; then
share/scripts/dipro/calc_dimer.sh:	while [ $diff -eq 0 ]; do
share/scripts/dipro/calc_dimer.sh:	    split=`echo $en  $enLB  | awk '{print $1 - $2 }'`
share/scripts/dipro/calc_dimer.sh:	    if [ $dec -eq 0 ]; then
share/scripts/dipro/calc_dimer.sh:    sed -e "1,2d" $XYZ >> dimer.com
share/scripts/dipro/calc_dimer.sh:    mkdir -p temp
share/scripts/dipro/calc_dimer.sh:if [ -e ../TI.xml ]; then
share/scripts/dipro/calc_dimer.sh:    if [ ! -d ../../transfer_integrals ]; then
share/scripts/dipro/calc_dimer.sh:    # clean-up
share/scripts/dipro/calc_monomer.sh:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
share/scripts/dipro/calc_monomer.sh:#     http://www.apache.org/licenses/LICENSE-2.0
share/scripts/dipro/calc_monomer.sh:#  adjusting amount of memory -> RI approximation
share/scripts/dipro/calc_monomer.sh:  awk -v mem=$memmax  '
share/scripts/dipro/calc_monomer.sh:# running define to prepare turbomole input-files; coord has to be there
share/scripts/dipro/calc_monomer.sh:    if [ -z "$TURBODIR" ]; then
share/scripts/dipro/calc_monomer.sh:    if [ -n "$input" ]; then
share/scripts/dipro/calc_monomer.sh:	basis="def-TZVP"
share/scripts/dipro/calc_monomer.sh:    babel -ixyz $XYZ -otmol coord
share/scripts/dipro/calc_monomer.sh:    if [ -z "$g09root" ]; then
share/scripts/dipro/calc_monomer.sh:    if [ -n "$2" ]; then
share/scripts/dipro/calc_monomer.sh:	input="pbepbe/6-311G**"
share/scripts/dipro/calc_monomer.sh:    sed -e "1,2d" $XYZ >> monomer.com
share/scripts/dipro/calc_monomer.sh:    mkdir -p temp
share/scripts/dipro/calc_monomer.sh:    rm -rf temp
share/scripts/dipro/check_mols.sh:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
share/scripts/dipro/check_mols.sh:#     http://www.apache.org/licenses/LICENSE-2.0
share/scripts/dipro/check_mols.sh:	if [ -e mol_$j/mos ];then
share/scripts/dipro/check_mols.sh:	    if [ "$?" -eq "1" ]; then
share/scripts/dipro/check_mols.sh:	    if [ "$?" -eq "1" ]; then
share/scripts/dipro/check_mols.sh:	if [ ! -e mol_$j/fort.7 ];then
share/scripts/dipro/merge_orbitals.py:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
share/scripts/dipro/merge_orbitals.py:#     http://www.apache.org/licenses/LICENSE-2.0
share/scripts/dipro/read_orbitals.py:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
share/scripts/dipro/read_orbitals.py:#     http://www.apache.org/licenses/LICENSE-2.0
share/scripts/dipro/read_orbitals.py:	  #analyse mo-file header
share/scripts/dipro/read_orbitals.py:	  #read eigenvalue and calculate size of mo-block
share/scripts/dipro/read_orbitals.py:  	  #read mo-coefficients    
share/scripts/dipro/read_orbitals.py:  	    #put the mo-coefficients into molcoef1 
share/scripts/dipro/read_orbitals.py:  	     #take care for non-complete lines
share/scripts/dipro/read_orbitals.py:  		molcoef_add.append( '0.00000000000000D-00' )
share/scripts/dipro/read_orbitals.py:  	     #store complete mo into the mo-vector list	      
share/scripts/dipro/read_orbitals.py:  	     #re-initialize for next pass
share/scripts/dipro/read_orbitals.py:	  #analyse mo-file header
share/scripts/dipro/read_orbitals.py:	  #read size of mo-block
share/scripts/dipro/write_state.sh:# Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
share/scripts/dipro/write_state.sh:#     http://www.apache.org/licenses/LICENSE-2.0
share/scripts/dipro/write_state.sh:# parse XML-file
share/scripts/dipro/write_state.sh:	J=`cat transfer_integrals/$pair.xml | grep "<J>" | head -n 1 | sed -e 's/<J>//g' | sed -e 's,</J>,,g'`
share/scripts/dipro/write_state.sh:	Jsq=`cat transfer_integrals/$pair.xml | grep "<J_sq_boltz>" | head -n 1 | sed -e 's/<J_sq_boltz>//g' | sed -e 's,</J_sq_boltz>,,g'`
share/scripts/dipro/write_state.sh:	J=`cat transfer_integrals/$pair.xml | grep "<J>" | tail -n 1 | sed -e 's/<J>//g' | sed -e 's,</J>,,g'`
share/scripts/dipro/write_state.sh:	Jsq=`cat transfer_integrals/$pair.xml | grep "<J_sq_boltz>" | tail -n 1 | sed -e 's/<J_sq_boltz>//g' | sed -e 's,</J_sq_boltz>,,g'`
share/scripts/dipro/write_state.sh:    tmp=`echo $pair | sed -e 's/pair_//g'`
share/scripts/dipro/Makefile:RM = /usr/bin/cmake -E remove -f
share/scripts/dipro/Makefile:# The top-level source directory on which CMake was run.
share/scripts/dipro/Makefile:# The top-level build directory on which CMake was run.
share/scripts/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
share/scripts/dipro/Makefile:	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
share/scripts/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
share/scripts/dipro/Makefile:	/usr/bin/cmake -P cmake_install.cmake
share/scripts/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
share/scripts/dipro/Makefile:	/usr/bin/cmake -P cmake_install.cmake
share/scripts/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
share/scripts/dipro/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
share/scripts/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
share/scripts/dipro/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
share/scripts/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
share/scripts/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
share/scripts/dipro/Makefile:	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
share/scripts/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles /people/thnfs/homes/melnyk/votca/src/ctp/share/scripts/dipro/CMakeFiles/progress.marks
share/scripts/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/scripts/dipro/all
share/scripts/dipro/Makefile:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
share/scripts/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/scripts/dipro/clean
share/scripts/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/scripts/dipro/preinstall
share/scripts/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/scripts/dipro/preinstall
share/scripts/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
share/scripts/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
share/scripts/dipro/cmake_install.cmake:    STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
share/xml/density.xml:<!-- ctp_run -e density -f state.db -o options.xml -->
share/xml/density.xml:	<output help="Output file for density profile">density-profile.dat</output>
share/xml/density.xml:	<output_e help="Output file for energy profile">energy-profile.dat</output_e>
share/xml/density.xml:	<min help="Minimal distance along axis (manual binning)" unit="nm">-10</min>
share/xml/ecoulomb.xml:<!-- ctp_run -e ecoulomb -f state.db -o options.xml -->
share/xml/ecoulomb.xml:	<method help="Type of screening: **simple** for a constant and **distdep** for a distance-dependent screening">method</method>
share/xml/ecoulomb.xml:	<screening help="Screening length used in the distance-dependent screening">1.0</screening>
share/xml/emultipole.xml:	<multipoles help="Polar Site Definitions in GDMA punch-file format"></multipoles>
share/xml/emultipole.xml:		<output help="File to write grid-point potential to">potential.dat</output>
share/xml/emultipole.xml:		<output help="File to write grid-point field to">field.dat</output>
share/xml/emultipole.xml:	<alpha help="Control options for molecular-polarizability calculation" >
share/xml/emultipole.xml:	<thole help="Thole parameters required for charge-smearing">
share/xml/emultipole.xml:		<cutoff help="Cut-off beyond which all interactions are neglected" default="" unit="nm">1</cutoff>
share/xml/emultipole.xml:		<scaling help="1-n interaction scaling, currently not in use"></scaling>
share/xml/emultipole.xml:	<conv help="Convergence parameters for self-consistent field calculation">
share/xml/eoutersphere.xml:	<method help="Type of the method: **constant** - all pairs have value **lambda**. **spheres**  - molecules are treated as spheres with radii **radius** and Pekar factor **pekar**. **dielectric** - with Pekar factor **pekar** and partial charges from resulting dielectric fields">constant</method>
share/xml/ianalyze.xml:	<states help="States for which to calculate the histogram. Example: 1 -1">-1</states>
share/xml/iimport.xml:<iimport help="Imports electronic couplings from xml of ctp-dipro using folders of pairdump" label="calc:iimport">
share/xml/rates.xml:<rates help="Hopping rates using classical or semi-classical expression" label="calc:rates">
share/xml/rates.xml:	<omegavib help="If the method of choice is **jortner**, the vibration frequency of the quantum mode has to be given in units of eV. The default value is close to the CC bond-stretch at 0.2eV" unit="eV" default="0.2">0.2</omegavib>
share/xml/map.xml:<desc>Name of the molecule in the coarse-grained model.</desc>
share/xml/map.xml:<desc>Name (identification) of the molecule in the all-atom representation. This must match the molecule name in the atomistic representation.</desc>
share/xml/tdump.xml:<tdump help="Coarse-grained and back-mapped (using rigid fragments) trajectories" label="sec:segments">
share/xml/tdump.xml:	<cg help="Name of the coarse-grained trajectory">cg</cg>
share/xml/tdump.xml:	<qm help="Name of the trajectory with back-substituted rigid fragments"></qm>
share/xml/segments.xml:<desc>File containing molecular orbitals (semi-empirical)</desc>
share/xml/segments.xml:<desc>Number of HOMO (LUMO) orbital. Corresponds to the number of $\alpha$ electrons in the \gaussian log-file {get\_orbitals.log} minus one (since counting in C++ starts at zero) for the HOMO and the number of $\alpha$ electrons for the LUMO.</desc>
share/xml/segments.xml:<desc>List of atom indices as they were specified in the gaussian input used to create the orb file. The first three values are important, since they must correspond to the first three atoms defined in the coarse-grained mapping, which are used to calculate two vectors indicating the orientation of the molecule. The third required vector is the eigenvector of the smallest eigenvalue of the gyration tensor, i.e. perpendicular to the planar core.  The number of molecules here may differ from that in the coarse-grained mapping, since for example only the core is important for transport and not the side chains, but it has to be the same number of atoms as in the \gaussian input file otherwise overlap integral values will be terribly wrong.</desc>
share/xml/Makefile:RM = /usr/bin/cmake -E remove -f
share/xml/Makefile:# The top-level source directory on which CMake was run.
share/xml/Makefile:# The top-level build directory on which CMake was run.
share/xml/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
share/xml/Makefile:	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
share/xml/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
share/xml/Makefile:	/usr/bin/cmake -P cmake_install.cmake
share/xml/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
share/xml/Makefile:	/usr/bin/cmake -P cmake_install.cmake
share/xml/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
share/xml/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
share/xml/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
share/xml/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
share/xml/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
share/xml/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
share/xml/Makefile:	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
share/xml/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles /people/thnfs/homes/melnyk/votca/src/ctp/share/xml/CMakeFiles/progress.marks
share/xml/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/xml/all
share/xml/Makefile:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
share/xml/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/xml/clean
share/xml/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/xml/preinstall
share/xml/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/xml/preinstall
share/xml/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
share/xml/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
share/xml/cmake_install.cmake:    STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
share/Makefile:RM = /usr/bin/cmake -E remove -f
share/Makefile:# The top-level source directory on which CMake was run.
share/Makefile:# The top-level build directory on which CMake was run.
share/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
share/Makefile:	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
share/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
share/Makefile:	/usr/bin/cmake -P cmake_install.cmake
share/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
share/Makefile:	/usr/bin/cmake -P cmake_install.cmake
share/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
share/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
share/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
share/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
share/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
share/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
share/Makefile:	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
share/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles /people/thnfs/homes/melnyk/votca/src/ctp/share/CMakeFiles/progress.marks
share/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/all
share/Makefile:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
share/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/clean
share/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/preinstall
share/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 share/preinstall
share/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
share/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
share/cmake_install.cmake:    STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
src/dipro/CMakeLists.txt:  add_executable(DIPRO.x DIPRO-TI.f90 stringmod.f90 output.f90 ranking.f90 precmod.f90 parsetools.f90 parsetools_noSCF.f90)
src/dipro/DIPRO-TI.f90:! Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
src/dipro/DIPRO-TI.f90:!     http://www.apache.org/licenses/LICENSE-2.0
src/dipro/DIPRO-TI.f90:   write(*,*) "Quantum-chemistry program not supported!"
src/dipro/DIPRO-TI.f90:      homoAboltz(i)=exp((dimen(homoAind(i))-dimen(homoAind(1)))/0.0256d0)
src/dipro/DIPRO-TI.f90:      homoBboltz(i)=exp((dimen(homoBind(i))-dimen(homoBind(1)))/0.0256d0)
src/dipro/DIPRO-TI.f90:      lumoAboltz(i)=exp(-(dimen(lumoAind(i))-dimen(lumoAind(1)))/0.0256d0)
src/dipro/DIPRO-TI.f90:      lumoBboltz(i)=exp(-(dimen(lumoBind(i))-dimen(lumoBind(1)))/0.0256d0)
src/dipro/DIPRO-TI.f90:   ! Take mo - the alpha electrons to get matrix in correct order
src/dipro/DIPRO-TI.f90:      homoAboltz(i)=exp((molAener(i)-molAener(1))/0.0256d0)
src/dipro/DIPRO-TI.f90:      homoBboltz(i)=exp((molBener(i)-molBener(1))/0.0256d0)
src/dipro/DIPRO-TI.f90:      lumoAboltz(i)=exp(-(molAener(i+homoAsub)-molAener(1+homoAsub))/0.0256d0)
src/dipro/DIPRO-TI.f90:      lumoBboltz(i)=exp(-(molBener(i+homoBsub)-molBener(1+homoBsub))/0.0256d0)
src/dipro/DIPRO-TI.f90:   ! Take mo - the alpha electrons to get matrix in correct order
src/dipro/DIPRO-TI.f90:   ! QPX_DimBS(i,j) contain the projection of the i-th QP state of molX
src/dipro/DIPRO-TI.f90:   !                on the j-th QP state of the dimer
src/dipro/DIPRO-TI.f90:   write(*,*) "holes A->B:", JMAT_eff(homoAsub,n_dim_A+homoBsub)
src/dipro/DIPRO-TI.f90:   write(*,*) "holes B->A:", JMAT_eff(n_dim_A+homoBsub,homoAsub)
src/dipro/DIPRO-TI.f90:   write(*,*) "elecs A->B:", JMAT_eff(homoAsub+1,n_dim_A+homoBsub+1)
src/dipro/DIPRO-TI.f90:   write(*,*) "elecs B->A:", JMAT_eff(n_dim_A+homoBsub+1,homoAsub+1)
src/dipro/DIPRO-TI.f90:      homoAboltz(i)=exp((QPE_molA(i)-QPE_molA(1))/0.0256d0)
src/dipro/DIPRO-TI.f90:      homoBboltz(i)=exp((QPE_molB(i)-QPE_molB(1))/0.0256d0)
src/dipro/DIPRO-TI.f90:      lumoAboltz(i)=exp(-(QPE_molA(i+homoAsub)-QPE_molA(1+homoAsub))/0.0256d0)
src/dipro/DIPRO-TI.f90:      lumoBboltz(i)=exp(-(QPE_molB(i+homoBsub)-QPE_molB(1+homoBsub))/0.0256d0)
src/dipro/mergeorbitals.f90:! Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
src/dipro/mergeorbitals.f90:!     http://www.apache.org/licenses/LICENSE-2.0
src/dipro/mergeorbitals.f90:n_rest_a     = n_basis_a - 5*n_lines_a
src/dipro/mergeorbitals.f90:!   n_basis_b  = n_basis_b - (5-n_rest_a)
src/dipro/mergeorbitals.f90:n_rest_b   = n_basis_b - 5*n_lines_b
src/dipro/mergeorbitals.f90:else if (modnum(1:1) == '-') then
src/dipro/mergeorbitals.f90:      modnum(2:len(modnum)-1) = modnum(3:len(modnum))
src/dipro/output.f90:! Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
src/dipro/output.f90:!     http://www.apache.org/licenses/LICENSE-2.0
src/dipro/output.f90:! workaround for distances (-> rates)
src/dipro/output.f90:   write(ival,*) i-1
src/dipro/output.f90:      write(pval,*) molAener(homoAsub+1-i)
src/dipro/output.f90:      write(pval,*) QPE_molA(homoAsub+1-i)
src/dipro/output.f90:   write(ival,*) i-1
src/dipro/output.f90:      write(pval,*) molBener(homoBsub+1-i)
src/dipro/output.f90:      write(pval,*) QPE_molB(homoBsub+1-i)
src/dipro/output.f90:   write(ival,*) i-1
src/dipro/output.f90:      write(jval,*) j-1
src/dipro/output.f90:         write(pval,*) J_hole(homoAsub+1-i,homoBsub+1-j)
src/dipro/output.f90:   write(ival,*) i-1
src/dipro/output.f90:   write(ival,*) i-1
src/dipro/output.f90:   write(ival,*) i-1
src/dipro/output.f90:      write(jval,*) j-1
src/dipro/parsetools.f90:! Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
src/dipro/parsetools.f90:!     http://www.apache.org/licenses/LICENSE-2.0
src/dipro/parsetools.f90:      nrA = nA-nlA*5
src/dipro/parsetools.f90:            iact = i-homoAind(homoAsub)+1
src/dipro/parsetools.f90:               read(8,FMT) molAcoef(iact,(j-1)*5+1:j*5)
src/dipro/parsetools.f90:               read(8,rFMT) (molAcoef(iact,k),k=nA-nrA+1,nA)
src/dipro/parsetools.f90:      nrB = nB-nlB*5
src/dipro/parsetools.f90:            iact = i-homoBind(homoBsub)+1
src/dipro/parsetools.f90:               read(8,FMT) molBcoef(iact,nshift+(j-1)*5+1:nshift+j*5)
src/dipro/parsetools.f90:               read(8,rFMT) (molBcoef(iact,nshift+k),k=nB-nrB+1,nB)
src/dipro/parsetools.f90:      nrA = nA-nlA*5
src/dipro/parsetools.f90:            read(8,FMT) molAcoef(iact,(j-1)*5+1:j*5)
src/dipro/parsetools.f90:            read(8,rFMT) (molAcoef(iact,k),k=nA-nrA+1,nA)
src/dipro/parsetools.f90:      nrB = nB-nlB*5
src/dipro/parsetools.f90:            read(8,FMT) molBcoef(iact,nshift+(j-1)*5+1:nshift+j*5)
src/dipro/parsetools.f90:            read(8,rFMT) (molBcoef(iact,nshift+k),k=nB-nrB+1,nB)
src/dipro/parsetools.f90:   call system("cat fort.7 | grep Alpha | wc -l > NORB")
src/dipro/parsetools.f90:      nrD       = nD-nlD*5
src/dipro/parsetools.f90:            read(8,FMT) dimcoef(i,(j-1)*5+1:j*5)
src/dipro/parsetools.f90:            read(8,rFMT) (dimcoef(i,k),k=nD-nrD+1,nD)
src/dipro/parsetools.f90:      ! read overlap matrix from dimer LOG-file (this will be nasty!)
src/dipro/parsetools.f90:            read(out(2:nseg),*) (S(i,j+k),k=1,nseg-1)
src/dipro/parsetools.f90:            read(out(2:nseg),*) (S(j+k,i),k=1,nseg-1)
src/dipro/parsetools.f90:   get_index = iact*(div-1)+div+jact
src/dipro/parsetools_noSCF.f90:! Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
src/dipro/parsetools_noSCF.f90:!     http://www.apache.org/licenses/LICENSE-2.0
src/dipro/parsetools_noSCF.f90:!!$      nrA = nA-nlA*4
src/dipro/parsetools_noSCF.f90:!!$         if (i .lt. homoA-homoAsub) then
src/dipro/parsetools_noSCF.f90:!!$            iact = i-homoA+homoAsub+1
src/dipro/parsetools_noSCF.f90:!!$                  read( buf((k-1)*20+1:k*20),*) molAcoef(iact,cnt)
src/dipro/parsetools_noSCF.f90:!!$                  read( buf((k-1)*20+1:k*20),*) molAcoef(iact,cnt)
src/dipro/parsetools_noSCF.f90:!!$      nrB = nB-nlB*4
src/dipro/parsetools_noSCF.f90:!!$         if (i .lt. homoB-homoBsub) then
src/dipro/parsetools_noSCF.f90:!!$            iact = i-homoB+homoBsub+1
src/dipro/parsetools_noSCF.f90:!!$                  read( buf((k-1)*20+1:k*20),*) molBcoef(iact,cnt)
src/dipro/parsetools_noSCF.f90:!!$                  read( buf((k-1)*20+1:k*20),*) molBcoef(iact,cnt)
src/dipro/parsetools_noSCF.f90:nrD = nD-nlD*4  
src/dipro/parsetools_noSCF.f90:         read( buf((k-1)*20+1:k*20),*) dimcoef(i,cnt)
src/dipro/parsetools_noSCF.f90:         read( buf((k-1)*20+1:k*20),*) dimcoef(i,cnt)
src/dipro/parsetools_noSCF.f90:! read overlap matrix from dimer LOG-file (this will be nasty!)
src/dipro/parsetools_noSCF.f90:   if ( index(buf,'closed-shell fock matrix') .ne. 0 ) exit 
src/dipro/parsetools_noSCF.f90:nlD = ((nD*nD-nD)/2+nD)/3
src/dipro/parsetools_noSCF.f90:nrD = ((nD*nD-nD)/2+nD)-nlD*3  
src/dipro/parsetools_noSCF.f90:allocate(crapbuf((nD*nD-nD)/2+nD  ))
src/dipro/parsetools_noSCF.f90:      read( buf( (k-1)*24+5:(k-1)*24+24 ), *) crapbuf(cnt) 
src/dipro/parsetools_noSCF.f90:      read( buf( (k-1)*24+5:(k-1)*24+24 ), *) crapbuf(cnt) 
src/dipro/parsetools_noSCF.f90:!!$   get_index = iact*(div-1)+div+jact
src/dipro/parsetools_noSCF.f90:      nrA = nA-nlA*4
src/dipro/parsetools_noSCF.f90:         if (i .lt. homoA-homoAsub) then
src/dipro/parsetools_noSCF.f90:            iact = i-homoA+homoAsub+1
src/dipro/parsetools_noSCF.f90:                  read( buf((k-1)*20+1:k*20),*) molAcoef(iact,cnt)
src/dipro/parsetools_noSCF.f90:                  read( buf((k-1)*20+1:k*20),*) molAcoef(iact,cnt)
src/dipro/parsetools_noSCF.f90:      nrB = nB-nlB*4
src/dipro/parsetools_noSCF.f90:         if (i .lt. homoB-homoBsub) then
src/dipro/parsetools_noSCF.f90:            iact = i-homoB+homoBsub+1
src/dipro/parsetools_noSCF.f90:                  read( buf((k-1)*20+1:k*20),*) molBcoef(iact,cnt)
src/dipro/parsetools_noSCF.f90:                  read( buf((k-1)*20+1:k*20),*) molBcoef(iact,cnt)
src/dipro/parsetools_noSCF.f90:nrD = nD-nlD*4  
src/dipro/parsetools_noSCF.f90:         read( buf((k-1)*20+1:k*20),*) dimcoef(i,cnt)
src/dipro/parsetools_noSCF.f90:         read( buf((k-1)*20+1:k*20),*) dimcoef(i,cnt)
src/dipro/parsetools_noSCF.f90:! read overlap matrix from dimer LOG-file (this will be nasty!)
src/dipro/parsetools_noSCF.f90:   if ( index(buf,'closed-shell fock matrix') .ne. 0 ) exit 
src/dipro/parsetools_noSCF.f90:nlD = ((nD*nD-nD)/2+nD)/4
src/dipro/parsetools_noSCF.f90:nrD = ((nD*nD-nD)/2+nD)-nlD*4  
src/dipro/parsetools_noSCF.f90:allocate(crapbuf((nD*nD-nD)/2+nD  ))
src/dipro/parsetools_noSCF.f90:      read( buf( (k-1)*25+10:(k-1)*25+25 ), *) crapbuf(cnt) 
src/dipro/parsetools_noSCF.f90:      read( buf( (k-1)*25+10:(k-1)*25+25 ), *) crapbuf(cnt) 
src/dipro/precmod.f90:! Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
src/dipro/precmod.f90:!     http://www.apache.org/licenses/LICENSE-2.0
src/dipro/ranking.f90:! Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
src/dipro/ranking.f90:!     http://www.apache.org/licenses/LICENSE-2.0
src/dipro/ranking.f90:!   MRGRNK = Merge-sort ranking of an array
src/dipro/ranking.f90:!  Fill-in the index array, creating ordered couples
src/dipro/ranking.f90:         If (XDONT(IIND-1) <= XDONT(IIND)) Then
src/dipro/ranking.f90:            IRNGT (IIND-1) = IIND - 1
src/dipro/ranking.f90:            IRNGT (IIND-1) = IIND
src/dipro/ranking.f90:            IRNGT (IIND) = IIND - 1
src/dipro/ranking.f90:!  We will now have ordered subsets A - B - A - B - ...
src/dipro/ranking.f90:!  and merge A and B couples into     C   -   C   - ...
src/dipro/ranking.f90:         Do IWRKD = 0, NVAL - 1, 4
src/dipro/ranking.f90:!   MRGRNK = Merge-sort ranking of an array
src/dipro/ranking.f90:!  Fill-in the index array, creating ordered couples
src/dipro/ranking.f90:         If (XDONT(IIND-1) <= XDONT(IIND)) Then
src/dipro/ranking.f90:            IRNGT (IIND-1) = IIND - 1
src/dipro/ranking.f90:            IRNGT (IIND-1) = IIND
src/dipro/ranking.f90:            IRNGT (IIND) = IIND - 1
src/dipro/ranking.f90:!  We will now have ordered subsets A - B - A - B - ...
src/dipro/ranking.f90:!  and merge A and B couples into     C   -   C   - ...
src/dipro/ranking.f90:         Do IWRKD = 0, NVAL - 1, 4
src/dipro/ranking.f90:!   MRGRNK = Merge-sort ranking of an array
src/dipro/ranking.f90:!  Fill-in the index array, creating ordered couples
src/dipro/ranking.f90:         If (XDONT(IIND-1) <= XDONT(IIND)) Then
src/dipro/ranking.f90:            IRNGT (IIND-1) = IIND - 1
src/dipro/ranking.f90:            IRNGT (IIND-1) = IIND
src/dipro/ranking.f90:            IRNGT (IIND) = IIND - 1
src/dipro/ranking.f90:!  We will now have ordered subsets A - B - A - B - ...
src/dipro/ranking.f90:!  and merge A and B couples into     C   -   C   - ...
src/dipro/ranking.f90:         Do IWRKD = 0, NVAL - 1, 4
src/dipro/stringmod.f90:! Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
src/dipro/stringmod.f90:!     http://www.apache.org/licenses/LICENSE-2.0
src/dipro/stringmod.f90:if(n>0) str=repeat(' ',nabs)//str(:lenstr-nabs)  ! shift right 
src/dipro/stringmod.f90:   str=str(:ipos-1)//str(ipos+lensubstr:)
src/dipro/stringmod.f90:      str=str(:ipos-1)//str(ipos+lensubstr:)
src/dipro/stringmod.f90:ioffset=iachar('A')-iachar('a')     
src/dipro/stringmod.f90:ioffset=iachar('A')-iachar('a')
src/dipro/stringmod.f90:    lcstr(i:i)=achar(iav-ioffset)
src/dipro/stringmod.f90:  if(ipos /= 0) line=line(:ipos-1)
src/dipro/stringmod.f90:      idelim2=iachar(delim1)-1
src/dipro/stringmod.f90:      istart=ipos-1
src/dipro/stringmod.f90:      inc=-1
src/dipro/stringmod.f90:      idelim2=iachar(delim1)-2
src/dipro/stringmod.f90:      istart=ipos-1
src/dipro/stringmod.f90:      inc=-1
src/dipro/stringmod.f90:   if(ch == delim2) isum=isum-1
src/dipro/stringmod.f90:   str=str(1:ipos-1)
src/dipro/stringmod.f90:do i=lstr,1,-1
src/dipro/stringmod.f90:  outstr(k:k)=ch              ! non-backslash with backslash inactive
src/dipro/CMakeFiles/DIPRO.x.dir/DependInfo.cmake:  "/people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/DIPRO-TI.f90" "/people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o"
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.proxy: src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.provides
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:src/dipro/CMakeFiles/DIPRO.x.dir/parameters.mod.proxy: src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.provides
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.provides.build:
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:	$(CMAKE_COMMAND) -E cmake_copy_f90_mod src/dipro/orbitals src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp GNU
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:	$(CMAKE_COMMAND) -E cmake_copy_f90_mod src/dipro/parameters src/dipro/CMakeFiles/DIPRO.x.dir/parameters.mod.stamp GNU
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:	$(CMAKE_COMMAND) -E touch src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:src/dipro/CMakeFiles/DIPRO.x.dir/build: src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:	$(CMAKE_COMMAND) -E cmake_copy_f90_mod src/dipro/precision src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp GNU
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:	$(CMAKE_COMMAND) -E touch src/dipro/CMakeFiles/DIPRO.x.dir/precmod.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:	$(CMAKE_COMMAND) -E cmake_copy_f90_mod src/dipro/m_mrgrnk src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp GNU
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:	$(CMAKE_COMMAND) -E touch src/dipro/CMakeFiles/DIPRO.x.dir/ranking.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:	$(CMAKE_COMMAND) -E cmake_copy_f90_mod src/dipro/strings src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp GNU
src/dipro/CMakeFiles/DIPRO.x.dir/depend.make:	$(CMAKE_COMMAND) -E touch src/dipro/CMakeFiles/DIPRO.x.dir/stringmod.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/cmake_clean.cmake:  "CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o"
src/dipro/CMakeFiles/DIPRO.x.dir/cmake_clean.cmake:# Per-language clean rules from dependency scanning.
src/dipro/CMakeFiles/DIPRO.x.dir/link.txt:/usr/bin/gfortran      CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o CMakeFiles/DIPRO.x.dir/stringmod.f90.o CMakeFiles/DIPRO.x.dir/output.f90.o CMakeFiles/DIPRO.x.dir/ranking.f90.o CMakeFiles/DIPRO.x.dir/precmod.f90.o CMakeFiles/DIPRO.x.dir/parsetools.f90.o CMakeFiles/DIPRO.x.dir/parsetools_noSCF.f90.o  -o DIPRO.x -rdynamic /usr/lib64/liblapack.so /usr/lib64/libblas.so 
src/dipro/CMakeFiles/DIPRO.x.dir/relink.txt:/usr/bin/gfortran      CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o CMakeFiles/DIPRO.x.dir/stringmod.f90.o CMakeFiles/DIPRO.x.dir/output.f90.o CMakeFiles/DIPRO.x.dir/ranking.f90.o CMakeFiles/DIPRO.x.dir/precmod.f90.o CMakeFiles/DIPRO.x.dir/parsetools.f90.o CMakeFiles/DIPRO.x.dir/parsetools_noSCF.f90.o  -o CMakeFiles/CMakeRelink.dir/DIPRO.x -rdynamic /usr/lib64/liblapack.so /usr/lib64/libblas.so 
src/dipro/CMakeFiles/DIPRO.x.dir/flags.make:Fortran_FLAGS = -I/people/thnfs/homes/melnyk/votca/src/ctp/include -I/usr/include -I/people/thnfs/homes/melnyk/votca/include   
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:RM = /usr/bin/cmake -E remove -f
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:# The top-level source directory on which CMake was run.
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:# The top-level build directory on which CMake was run.
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o: src/dipro/CMakeFiles/DIPRO.x.dir/flags.make
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o: src/dipro/DIPRO-TI.f90
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_1)
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building Fortran object src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o"
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && /usr/bin/gfortran  $(Fortran_DEFINES) $(Fortran_FLAGS) -c /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/DIPRO-TI.f90 -o CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.requires:
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:.PHONY : src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.requires
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.provides: src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.requires
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:.PHONY : src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.provides
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.provides.build: src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_2)
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building Fortran object src/dipro/CMakeFiles/DIPRO.x.dir/stringmod.f90.o"
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && /usr/bin/gfortran  $(Fortran_DEFINES) $(Fortran_FLAGS) -c /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/stringmod.f90 -o CMakeFiles/DIPRO.x.dir/stringmod.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/stringmod.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_3)
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building Fortran object src/dipro/CMakeFiles/DIPRO.x.dir/output.f90.o"
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && /usr/bin/gfortran  $(Fortran_DEFINES) $(Fortran_FLAGS) -c /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/output.f90 -o CMakeFiles/DIPRO.x.dir/output.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/output.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_4)
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building Fortran object src/dipro/CMakeFiles/DIPRO.x.dir/ranking.f90.o"
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && /usr/bin/gfortran  $(Fortran_DEFINES) $(Fortran_FLAGS) -c /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/ranking.f90 -o CMakeFiles/DIPRO.x.dir/ranking.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/ranking.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_5)
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building Fortran object src/dipro/CMakeFiles/DIPRO.x.dir/precmod.f90.o"
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && /usr/bin/gfortran  $(Fortran_DEFINES) $(Fortran_FLAGS) -c /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/precmod.f90 -o CMakeFiles/DIPRO.x.dir/precmod.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/precmod.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_6)
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building Fortran object src/dipro/CMakeFiles/DIPRO.x.dir/parsetools.f90.o"
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && /usr/bin/gfortran  $(Fortran_DEFINES) $(Fortran_FLAGS) -c /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/parsetools.f90 -o CMakeFiles/DIPRO.x.dir/parsetools.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/parsetools.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_7)
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building Fortran object src/dipro/CMakeFiles/DIPRO.x.dir/parsetools_noSCF.f90.o"
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && /usr/bin/gfortran  $(Fortran_DEFINES) $(Fortran_FLAGS) -c /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/parsetools_noSCF.f90 -o CMakeFiles/DIPRO.x.dir/parsetools_noSCF.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/parsetools_noSCF.f90.o.provides.build
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:"CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o" \
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:src/dipro/DIPRO.x: src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking Fortran executable DIPRO.x"
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/DIPRO.x.dir/link.txt --verbose=$(VERBOSE)
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:"CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o" \
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:src/dipro/CMakeFiles/CMakeRelink.dir/DIPRO.x: src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking Fortran executable CMakeFiles/CMakeRelink.dir/DIPRO.x"
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/DIPRO.x.dir/relink.txt --verbose=$(VERBOSE)
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:src/dipro/CMakeFiles/DIPRO.x.dir/requires: src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o.requires
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && $(CMAKE_COMMAND) -P CMakeFiles/DIPRO.x.dir/cmake_clean.cmake
src/dipro/CMakeFiles/DIPRO.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/CMakeFiles/DIPRO.x.dir/DependInfo.cmake --color=$(COLOR)
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:MD5:539d5ac9f36ccdedebec5455215d1d6c -- If you edit this, you'll get what you deserve.
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:(2 'kc4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:3 'kc8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (CONSTANT (
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:4 'ki4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (CONSTANT (
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:5 'ki8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (CONSTANT (
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:6 'kr4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (CONSTANT (
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:7 'kr8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (CONSTANT (
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:8 'precision' 'precision' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:9 'selected_int_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:10 'selected_real_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/DIPRO.x.dir/precision.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:GFORTRAN module version '9' created from /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/DIPRO-TI.f90
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:MD5:d25093f967312a00102ccdf3779ba580 -- If you edit this, you'll get what you deserve.
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:(2 'dimcoef' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:3 'dimen' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ()) 0 0 () (
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:4 'fock_diag' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:5 'homoa' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:6 'homoaboltz' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:7 'homoaind' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (INTEGER 4 0 0 0
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:8 'homoasub' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:9 'homob' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:10 'homobboltz' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:11 'homobind' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (INTEGER 4 0 0 0
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:12 'homobsub' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:13 'j_elec' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:14 'j_hole' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:15 'j_sq_boltz_e' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:16 'j_sq_boltz_h' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:17 'j_sq_degen_e' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:18 'j_sq_degen_h' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:19 'lumoa' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:20 'lumoaboltz' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:21 'lumoaind' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (INTEGER 4 0 0 0
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:22 'lumoasub' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:23 'lumob' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:24 'lumobboltz' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:25 'lumobind' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (INTEGER 4 0 0 0
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:26 'lumobsub' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:27 'molacoef' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:28 'molaener' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:29 'molbcoef' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:30 'molbener' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:31 'n_dim' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:32 'n_dim_a' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:33 'n_dim_b' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:34 'n_qp_a' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:35 'n_qp_b' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:36 'n_qp_d' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:37 'na' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:38 'nat' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:39 'nb' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:40 'nbt' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:41 'nd' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:42 'ndt' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:43 'orbitals' 'orbitals' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:44 'plabel' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:45 'qcp' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:46 'qp_dimer_proa' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN-PROC UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:47 'qp_dimer_prob' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN-PROC UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:48 'qpa_dimbs' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:49 'qpb_dimbs' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:50 'qpe_dim' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:51 'qpe_mola' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:52 'qpe_molb' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:53 'qps_dim' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:54 'qps_mola' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:55 'qps_molb' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:56 's' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/orbitals.mod.stamp:IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ()) 0 0 () (
src/dipro/CMakeFiles/DIPRO.x.dir/parameters.mod.stamp:GFORTRAN module version '9' created from /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/DIPRO-TI.f90
src/dipro/CMakeFiles/DIPRO.x.dir/parameters.mod.stamp:MD5:4a5a2fb5b38f6292ff66e8b6624206a4 -- If you edit this, you'll get what you deserve.
src/dipro/CMakeFiles/DIPRO.x.dir/parameters.mod.stamp:(2 'conv_hrt_ev' 'parameters' '' 1 ((PARAMETER UNKNOWN-INTENT
src/dipro/CMakeFiles/DIPRO.x.dir/parameters.mod.stamp:UNKNOWN-PROC UNKNOWN IMPLICIT-SAVE 0 0) (REAL 8 0 0 0 REAL ()) 0 0 () (
src/dipro/CMakeFiles/DIPRO.x.dir/parameters.mod.stamp:3 'parameters' 'parameters' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:MD5:733fd38b2b23e81aebcf166a567d8534 -- If you edit this, you'll get what you deserve.
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:(14 'compact' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:17 'delall' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:21 'delsubstr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:25 'insertstr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:30 'is_digit' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:34 'is_letter' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:38 'kc4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:39 'kc8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:40 'ki4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:41 'ki8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:42 'kr4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:43 'kr8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:44 'lowercase' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:49 'match' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:54 'parse' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:60 'precision' 'precision' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:61 'readline' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:66 'removebksl' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:69 'removesp' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:72 'selected_int_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:73 'selected_real_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:74 'shiftstr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:78 'split' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:84 'strings' 'strings' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:85 'trimzero' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:88 'uppercase' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:13 'value_dr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:12 'value_sr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:11 'value_di' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:10 'value_si' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:9 'write_dr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:8 'write_sr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:7 'write_di' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:6 'write_si' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:5 'writeq_dr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:4 'writeq_sr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:3 'writeq_di' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:2 'writeq_si' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:56 'str' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:57 'delims' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:58 'args' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:59 'nargs' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:16 'str' '' '' 15 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:71 'str' '' '' 70 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:94 'str' '' '' 93 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:95 'rnum' '' '' 93 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:96 'ios' '' '' 93 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:98 'str' '' '' 97 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:99 'rnum' '' '' 97 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:100 'ios' '' '' 97 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:102 'str' '' '' 101 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:103 'inum' '' '' 101 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:104 'ios' '' '' 101 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:106 'str' '' '' 105 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:107 'inum' '' '' 105 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:23 'str' '' '' 22 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:24 'substr' '' '' 22 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:19 'str' '' '' 18 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:20 'substr' '' '' 18 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:90 'str' '' '' 91 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:92 'ucstr' '' '' 91 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:89 'len_trim' '(intrinsic)' '' 91 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (INTEGER 4 0 0 0 INTEGER ())
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:46 'str' '' '' 47 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:48 'lcstr' '' '' 47 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:45 'len_trim' '(intrinsic)' '' 47 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (INTEGER 4 0 0 0 INTEGER ())
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:63 'nunitr' '' '' 62 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:64 'line' '' '' 62 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:65 'ios' '' '' 62 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:51 'str' '' '' 50 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:52 'ipos' '' '' 50 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:53 'imatch' '' '' 50 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:110 'rnum' '' '' 109 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:111 'str' '' '' 109 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:112 'fmt' '' '' 109 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:114 'rnum' '' '' 113 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:115 'str' '' '' 113 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:116 'fmt' '' '' 113 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:118 'inum' '' '' 117 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:119 'str' '' '' 117 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:120 'fmt' '' '' 117 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:122 'inum' '' '' 121 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:123 'str' '' '' 121 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:124 'fmt' '' '' 121 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:87 'str' '' '' 86 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:127 'namestr' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:126 'unit' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:128 'value' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:129 'fmt' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:131 'unit' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:132 'namestr' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:133 'value' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:134 'fmt' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:136 'unit' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:137 'namestr' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:138 'ivalue' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:139 'fmt' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:141 'unit' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:142 'namestr' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:143 'ivalue' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:144 'fmt' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:36 'ch' '' '' 35 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:37 'res' '' '' 35 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:32 'ch' '' '' 31 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:33 'res' '' '' 31 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:80 'str' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:81 'delims' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:82 'before' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:83 'sep' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:68 'str' '' '' 67 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:108 'ios' '' '' 105 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:76 'str' '' '' 75 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:77 'n' '' '' 75 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN 0
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:28 'strins' '' '' 26 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:27 'str' '' '' 26 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/strings.mod.stamp:29 'loc' '' '' 26 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:MD5:144e319e7bdace7799e69ee7c59965e7 -- If you edit this, you'll get what you deserve.
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:(5 'm_mrgrnk' 'm_mrgrnk' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:6 'selected_real_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:3 'r_mrgrnk' 'm_mrgrnk' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:2 'i_mrgrnk' 'm_mrgrnk' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:4 'd_mrgrnk' 'm_mrgrnk' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:14 'xdont' '' '' 13 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:15 'irngt' '' '' 13 ((VARIABLE OUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:8 'xdont' '' '' 7 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:9 'irngt' '' '' 7 ((VARIABLE OUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:11 'xdont' '' '' 10 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/DIPRO.x.dir/m_mrgrnk.mod.stamp:12 'irngt' '' '' 10 ((VARIABLE OUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/DIPRO.x.dir/depend.internal:src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o
src/dipro/CMakeFiles/DIPRO.x.dir/depend.internal: /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/DIPRO-TI.f90
src/dipro/CMakeFiles/mergeorbitals.x.dir/depend.make:	$(CMAKE_COMMAND) -E cmake_copy_f90_mod src/dipro/m_mrgrnk src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp GNU
src/dipro/CMakeFiles/mergeorbitals.x.dir/depend.make:	$(CMAKE_COMMAND) -E touch src/dipro/CMakeFiles/mergeorbitals.x.dir/ranking.f90.o.provides.build
src/dipro/CMakeFiles/mergeorbitals.x.dir/depend.make:	$(CMAKE_COMMAND) -E cmake_copy_f90_mod src/dipro/strings src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp GNU
src/dipro/CMakeFiles/mergeorbitals.x.dir/depend.make:	$(CMAKE_COMMAND) -E touch src/dipro/CMakeFiles/mergeorbitals.x.dir/stringmod.f90.o.provides.build
src/dipro/CMakeFiles/mergeorbitals.x.dir/cmake_clean.cmake:# Per-language clean rules from dependency scanning.
src/dipro/CMakeFiles/mergeorbitals.x.dir/link.txt:/usr/bin/gfortran      CMakeFiles/mergeorbitals.x.dir/mergeorbitals.f90.o CMakeFiles/mergeorbitals.x.dir/stringmod.f90.o CMakeFiles/mergeorbitals.x.dir/ranking.f90.o  -o mergeorbitals.x -rdynamic 
src/dipro/CMakeFiles/mergeorbitals.x.dir/flags.make:Fortran_FLAGS = -I/people/thnfs/homes/melnyk/votca/src/ctp/include -I/usr/include -I/people/thnfs/homes/melnyk/votca/include   
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:RM = /usr/bin/cmake -E remove -f
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:# The top-level source directory on which CMake was run.
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:# The top-level build directory on which CMake was run.
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_1)
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building Fortran object src/dipro/CMakeFiles/mergeorbitals.x.dir/mergeorbitals.f90.o"
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && /usr/bin/gfortran  $(Fortran_DEFINES) $(Fortran_FLAGS) -c /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/mergeorbitals.f90 -o CMakeFiles/mergeorbitals.x.dir/mergeorbitals.f90.o
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	$(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/mergeorbitals.f90.o.provides.build
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_2)
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building Fortran object src/dipro/CMakeFiles/mergeorbitals.x.dir/stringmod.f90.o"
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && /usr/bin/gfortran  $(Fortran_DEFINES) $(Fortran_FLAGS) -c /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/stringmod.f90 -o CMakeFiles/mergeorbitals.x.dir/stringmod.f90.o
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	$(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/stringmod.f90.o.provides.build
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_3)
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building Fortran object src/dipro/CMakeFiles/mergeorbitals.x.dir/ranking.f90.o"
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && /usr/bin/gfortran  $(Fortran_DEFINES) $(Fortran_FLAGS) -c /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/ranking.f90 -o CMakeFiles/mergeorbitals.x.dir/ranking.f90.o
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	$(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/ranking.f90.o.provides.build
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking Fortran executable mergeorbitals.x"
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/mergeorbitals.x.dir/link.txt --verbose=$(VERBOSE)
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro && $(CMAKE_COMMAND) -P CMakeFiles/mergeorbitals.x.dir/cmake_clean.cmake
src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/CMakeFiles/mergeorbitals.x.dir/DependInfo.cmake --color=$(COLOR)
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:MD5:144e319e7bdace7799e69ee7c59965e7 -- If you edit this, you'll get what you deserve.
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:(5 'm_mrgrnk' 'm_mrgrnk' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:6 'selected_real_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:3 'r_mrgrnk' 'm_mrgrnk' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:2 'i_mrgrnk' 'm_mrgrnk' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:4 'd_mrgrnk' 'm_mrgrnk' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:14 'xdont' '' '' 13 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:15 'irngt' '' '' 13 ((VARIABLE OUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:8 'xdont' '' '' 7 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:9 'irngt' '' '' 7 ((VARIABLE OUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:11 'xdont' '' '' 10 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/mergeorbitals.x.dir/m_mrgrnk.mod.stamp:12 'irngt' '' '' 10 ((VARIABLE OUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:MD5:733fd38b2b23e81aebcf166a567d8534 -- If you edit this, you'll get what you deserve.
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:(14 'compact' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:17 'delall' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:21 'delsubstr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:25 'insertstr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:30 'is_digit' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:34 'is_letter' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:38 'kc4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:39 'kc8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:40 'ki4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:41 'ki8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:42 'kr4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:43 'kr8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:44 'lowercase' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:49 'match' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:54 'parse' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:60 'precision' 'precision' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:61 'readline' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:66 'removebksl' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:69 'removesp' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:72 'selected_int_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:73 'selected_real_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:74 'shiftstr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:78 'split' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:84 'strings' 'strings' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:85 'trimzero' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:88 'uppercase' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:13 'value_dr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:12 'value_sr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:11 'value_di' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:10 'value_si' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:9 'write_dr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:8 'write_sr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:7 'write_di' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:6 'write_si' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:5 'writeq_dr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:4 'writeq_sr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:3 'writeq_di' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:2 'writeq_si' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:56 'str' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:57 'delims' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:58 'args' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:59 'nargs' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:16 'str' '' '' 15 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:71 'str' '' '' 70 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:94 'str' '' '' 93 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:95 'rnum' '' '' 93 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:96 'ios' '' '' 93 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:98 'str' '' '' 97 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:99 'rnum' '' '' 97 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:100 'ios' '' '' 97 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:102 'str' '' '' 101 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:103 'inum' '' '' 101 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:104 'ios' '' '' 101 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:106 'str' '' '' 105 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:107 'inum' '' '' 105 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:23 'str' '' '' 22 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:24 'substr' '' '' 22 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:19 'str' '' '' 18 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:20 'substr' '' '' 18 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:90 'str' '' '' 91 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:92 'ucstr' '' '' 91 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:89 'len_trim' '(intrinsic)' '' 91 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (INTEGER 4 0 0 0 INTEGER ())
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:46 'str' '' '' 47 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:48 'lcstr' '' '' 47 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:45 'len_trim' '(intrinsic)' '' 47 ((PROCEDURE UNKNOWN-INTENT
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (INTEGER 4 0 0 0 INTEGER ())
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:63 'nunitr' '' '' 62 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:64 'line' '' '' 62 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:65 'ios' '' '' 62 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:51 'str' '' '' 50 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:52 'ipos' '' '' 50 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:53 'imatch' '' '' 50 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:110 'rnum' '' '' 109 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:111 'str' '' '' 109 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:112 'fmt' '' '' 109 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:114 'rnum' '' '' 113 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:115 'str' '' '' 113 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:116 'fmt' '' '' 113 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:118 'inum' '' '' 117 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:119 'str' '' '' 117 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:120 'fmt' '' '' 117 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:122 'inum' '' '' 121 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:123 'str' '' '' 121 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:124 'fmt' '' '' 121 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:87 'str' '' '' 86 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:127 'namestr' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:126 'unit' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:128 'value' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:129 'fmt' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:131 'unit' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:132 'namestr' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:133 'value' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:134 'fmt' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:136 'unit' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:137 'namestr' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:138 'ivalue' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:139 'fmt' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:141 'unit' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:142 'namestr' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:143 'ivalue' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:144 'fmt' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:36 'ch' '' '' 35 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:37 'res' '' '' 35 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:32 'ch' '' '' 31 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:33 'res' '' '' 31 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:80 'str' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:81 'delims' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:82 'before' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:83 'sep' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:68 'str' '' '' 67 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:108 'ios' '' '' 105 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:76 'str' '' '' 75 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:77 'n' '' '' 75 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN 0
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:28 'strins' '' '' 26 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:27 'str' '' '' 26 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/CMakeFiles/mergeorbitals.x.dir/strings.mod.stamp:29 'loc' '' '' 26 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/Makefile:RM = /usr/bin/cmake -E remove -f
src/dipro/Makefile:# The top-level source directory on which CMake was run.
src/dipro/Makefile:# The top-level build directory on which CMake was run.
src/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
src/dipro/Makefile:	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
src/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
src/dipro/Makefile:	/usr/bin/cmake -P cmake_install.cmake
src/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
src/dipro/Makefile:	/usr/bin/cmake -P cmake_install.cmake
src/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
src/dipro/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
src/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
src/dipro/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
src/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
src/dipro/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
src/dipro/Makefile:	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/CMakeFiles/progress.marks
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/dipro/all
src/dipro/Makefile:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/dipro/clean
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/dipro/preinstall
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/dipro/preinstall
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/dipro/CMakeFiles/DIPRO.x.dir/rule
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/build
src/dipro/Makefile:# Manual pre-install relink rule for target.
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/dipro/CMakeFiles/DIPRO.x.dir/preinstall
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/dipro/CMakeFiles/mergeorbitals.x.dir/rule
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/build
src/dipro/Makefile:DIPRO-TI.o: DIPRO-TI.f90.o
src/dipro/Makefile:.PHONY : DIPRO-TI.o
src/dipro/Makefile:DIPRO-TI.f90.o:
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/DIPRO-TI.f90.o
src/dipro/Makefile:.PHONY : DIPRO-TI.f90.o
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/mergeorbitals.f90.o
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/output.f90.o
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/parsetools.f90.o
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/parsetools_noSCF.f90.o
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/precmod.f90.o
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/ranking.f90.o
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/ranking.f90.o
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/stringmod.f90.o
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/stringmod.f90.o
src/dipro/Makefile:	@echo "... DIPRO-TI.o"
src/dipro/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
src/dipro/cmake_install.cmake:    STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
src/dipro/precision.mod:MD5:539d5ac9f36ccdedebec5455215d1d6c -- If you edit this, you'll get what you deserve.
src/dipro/precision.mod:(2 'kc4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/precision.mod:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/precision.mod:3 'kc8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/precision.mod:IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (CONSTANT (
src/dipro/precision.mod:4 'ki4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/precision.mod:IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (CONSTANT (
src/dipro/precision.mod:5 'ki8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/precision.mod:IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (CONSTANT (
src/dipro/precision.mod:6 'kr4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/precision.mod:IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (CONSTANT (
src/dipro/precision.mod:7 'kr8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/precision.mod:IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (CONSTANT (
src/dipro/precision.mod:8 'precision' 'precision' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/precision.mod:9 'selected_int_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/precision.mod:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/precision.mod:10 'selected_real_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/precision.mod:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/orbitals.mod:GFORTRAN module version '9' created from /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/DIPRO-TI.f90
src/dipro/orbitals.mod:MD5:d25093f967312a00102ccdf3779ba580 -- If you edit this, you'll get what you deserve.
src/dipro/orbitals.mod:(2 'dimcoef' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:3 'dimen' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ()) 0 0 () (
src/dipro/orbitals.mod:4 'fock_diag' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:5 'homoa' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:6 'homoaboltz' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:7 'homoaind' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (INTEGER 4 0 0 0
src/dipro/orbitals.mod:8 'homoasub' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:9 'homob' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:10 'homobboltz' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:11 'homobind' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (INTEGER 4 0 0 0
src/dipro/orbitals.mod:12 'homobsub' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:13 'j_elec' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:14 'j_hole' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:15 'j_sq_boltz_e' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:16 'j_sq_boltz_h' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:17 'j_sq_degen_e' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:18 'j_sq_degen_h' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:19 'lumoa' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:20 'lumoaboltz' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:21 'lumoaind' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (INTEGER 4 0 0 0
src/dipro/orbitals.mod:22 'lumoasub' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:23 'lumob' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:24 'lumobboltz' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:25 'lumobind' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (INTEGER 4 0 0 0
src/dipro/orbitals.mod:26 'lumobsub' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:27 'molacoef' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:28 'molaener' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:29 'molbcoef' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:30 'molbener' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:31 'n_dim' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:32 'n_dim_a' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:33 'n_dim_b' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:34 'n_qp_a' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:35 'n_qp_b' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:36 'n_qp_d' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:37 'na' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:38 'nat' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:39 'nb' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:40 'nbt' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:41 'nd' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:42 'ndt' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:43 'orbitals' 'orbitals' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:44 'plabel' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:45 'qcp' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:46 'qp_dimer_proa' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT
src/dipro/orbitals.mod:UNKNOWN-PROC UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0
src/dipro/orbitals.mod:47 'qp_dimer_prob' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT
src/dipro/orbitals.mod:UNKNOWN-PROC UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0
src/dipro/orbitals.mod:48 'qpa_dimbs' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:49 'qpb_dimbs' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:50 'qpe_dim' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:51 'qpe_mola' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:52 'qpe_molb' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:53 'qps_dim' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:54 'qps_mola' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:55 'qps_molb' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/orbitals.mod:UNKNOWN IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ())
src/dipro/orbitals.mod:56 's' 'orbitals' '' 1 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/orbitals.mod:IMPLICIT-SAVE 0 0 ALLOCATABLE DIMENSION) (REAL 8 0 0 0 REAL ()) 0 0 () (
src/dipro/parameters.mod:GFORTRAN module version '9' created from /people/thnfs/homes/melnyk/votca/src/ctp/src/dipro/DIPRO-TI.f90
src/dipro/parameters.mod:MD5:4a5a2fb5b38f6292ff66e8b6624206a4 -- If you edit this, you'll get what you deserve.
src/dipro/parameters.mod:(2 'conv_hrt_ev' 'parameters' '' 1 ((PARAMETER UNKNOWN-INTENT
src/dipro/parameters.mod:UNKNOWN-PROC UNKNOWN IMPLICIT-SAVE 0 0) (REAL 8 0 0 0 REAL ()) 0 0 () (
src/dipro/parameters.mod:3 'parameters' 'parameters' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/strings.mod:MD5:733fd38b2b23e81aebcf166a567d8534 -- If you edit this, you'll get what you deserve.
src/dipro/strings.mod:(14 'compact' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:17 'delall' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:21 'delsubstr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/strings.mod:25 'insertstr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/strings.mod:30 'is_digit' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:34 'is_letter' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/strings.mod:38 'kc4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/strings.mod:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/strings.mod:39 'kc8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/strings.mod:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/strings.mod:40 'ki4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/strings.mod:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/strings.mod:41 'ki8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/strings.mod:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/strings.mod:42 'kr4' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/strings.mod:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/strings.mod:43 'kr8' 'precision' '' 1 ((PARAMETER UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/strings.mod:UNKNOWN IMPLICIT-SAVE 0 0) (INTEGER 4 0 0 0 INTEGER ()) 0 0 () (
src/dipro/strings.mod:44 'lowercase' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/strings.mod:49 'match' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:54 'parse' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:60 'precision' 'precision' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/strings.mod:61 'readline' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:66 'removebksl' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/strings.mod:69 'removesp' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:72 'selected_int_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/strings.mod:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/strings.mod:73 'selected_real_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/strings.mod:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/strings.mod:74 'shiftstr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:78 'split' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:84 'strings' 'strings' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:85 'trimzero' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:88 'uppercase' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC
src/dipro/strings.mod:13 'value_dr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:12 'value_sr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:11 'value_di' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:10 'value_si' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:9 'write_dr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:8 'write_sr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:7 'write_di' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:6 'write_si' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:5 'writeq_dr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:4 'writeq_sr' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:3 'writeq_di' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:2 'writeq_si' 'strings' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/strings.mod:56 'str' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:57 'delims' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:58 'args' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:59 'nargs' '' '' 55 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:16 'str' '' '' 15 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:71 'str' '' '' 70 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:94 'str' '' '' 93 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:95 'rnum' '' '' 93 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:96 'ios' '' '' 93 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:98 'str' '' '' 97 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:99 'rnum' '' '' 97 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:100 'ios' '' '' 97 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:102 'str' '' '' 101 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:103 'inum' '' '' 101 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:104 'ios' '' '' 101 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:106 'str' '' '' 105 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:107 'inum' '' '' 105 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:23 'str' '' '' 22 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:24 'substr' '' '' 22 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:19 'str' '' '' 18 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:20 'substr' '' '' 18 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:90 'str' '' '' 91 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:92 'ucstr' '' '' 91 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:89 'len_trim' '(intrinsic)' '' 91 ((PROCEDURE UNKNOWN-INTENT
src/dipro/strings.mod:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (INTEGER 4 0 0 0 INTEGER ())
src/dipro/strings.mod:46 'str' '' '' 47 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:48 'lcstr' '' '' 47 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:45 'len_trim' '(intrinsic)' '' 47 ((PROCEDURE UNKNOWN-INTENT
src/dipro/strings.mod:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (INTEGER 4 0 0 0 INTEGER ())
src/dipro/strings.mod:63 'nunitr' '' '' 62 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:64 'line' '' '' 62 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:65 'ios' '' '' 62 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:51 'str' '' '' 50 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:52 'ipos' '' '' 50 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:53 'imatch' '' '' 50 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:110 'rnum' '' '' 109 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:111 'str' '' '' 109 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:112 'fmt' '' '' 109 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:114 'rnum' '' '' 113 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:115 'str' '' '' 113 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:116 'fmt' '' '' 113 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:118 'inum' '' '' 117 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:119 'str' '' '' 117 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:120 'fmt' '' '' 117 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:122 'inum' '' '' 121 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:123 'str' '' '' 121 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:124 'fmt' '' '' 121 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:87 'str' '' '' 86 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:127 'namestr' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:126 'unit' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:128 'value' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:129 'fmt' '' '' 125 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:131 'unit' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:132 'namestr' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:133 'value' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:134 'fmt' '' '' 130 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:136 'unit' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:137 'namestr' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:138 'ivalue' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:139 'fmt' '' '' 135 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:141 'unit' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:142 'namestr' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:143 'ivalue' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:144 'fmt' '' '' 140 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:36 'ch' '' '' 35 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:37 'res' '' '' 35 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:32 'ch' '' '' 31 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:33 'res' '' '' 31 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:80 'str' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:81 'delims' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:82 'before' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:83 'sep' '' '' 79 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:68 'str' '' '' 67 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:108 'ios' '' '' 105 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:76 'str' '' '' 75 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:77 'n' '' '' 75 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN 0
src/dipro/strings.mod:28 'strins' '' '' 26 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN
src/dipro/strings.mod:27 'str' '' '' 26 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/strings.mod:29 'loc' '' '' 26 ((VARIABLE UNKNOWN-INTENT UNKNOWN-PROC UNKNOWN UNKNOWN
src/dipro/m_mrgrnk.mod:MD5:144e319e7bdace7799e69ee7c59965e7 -- If you edit this, you'll get what you deserve.
src/dipro/m_mrgrnk.mod:(5 'm_mrgrnk' 'm_mrgrnk' '' 1 ((MODULE UNKNOWN-INTENT UNKNOWN-PROC
src/dipro/m_mrgrnk.mod:6 'selected_real_kind' '(intrinsic)' '' 1 ((PROCEDURE UNKNOWN-INTENT
src/dipro/m_mrgrnk.mod:UNKNOWN-PROC UNKNOWN UNKNOWN 0 0 FUNCTION) (REAL 4 0 0 0 REAL ()) 0 0 ()
src/dipro/m_mrgrnk.mod:3 'r_mrgrnk' 'm_mrgrnk' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/m_mrgrnk.mod:2 'i_mrgrnk' 'm_mrgrnk' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/m_mrgrnk.mod:4 'd_mrgrnk' 'm_mrgrnk' '' 1 ((PROCEDURE UNKNOWN-INTENT MODULE-PROC DECL
src/dipro/m_mrgrnk.mod:14 'xdont' '' '' 13 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/m_mrgrnk.mod:15 'irngt' '' '' 13 ((VARIABLE OUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/m_mrgrnk.mod:8 'xdont' '' '' 7 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/m_mrgrnk.mod:9 'irngt' '' '' 7 ((VARIABLE OUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/m_mrgrnk.mod:11 'xdont' '' '' 10 ((VARIABLE IN UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/dipro/m_mrgrnk.mod:12 'irngt' '' '' 10 ((VARIABLE OUT UNKNOWN-PROC UNKNOWN UNKNOWN 0 0
src/libctp/CMakeLists.txt:add_custom_target(hgversion COMMAND ${CMAKE_COMMAND} -DTOP_SOURCE_DIR="${CMAKE_SOURCE_DIR}" -P ${CMAKE_MODULE_PATH}/hgversion.cmake)
src/libctp/apolarsite.cc:    _pos = templ->getPos();
src/libctp/apolarsite.cc:        _Qs[0] = templ->getQs(-1);
src/libctp/apolarsite.cc:        _Qs[1] = templ->getQs(0);
src/libctp/apolarsite.cc:        _Qs[2] = templ->getQs(1);
src/libctp/apolarsite.cc:        _rank  = templ->_rank;
src/libctp/apolarsite.cc:        _Ps    = templ->_Ps;
src/libctp/apolarsite.cc:        _locX = templ->_locX;
src/libctp/apolarsite.cc:        _locY = templ->_locY;
src/libctp/apolarsite.cc:        _locZ = templ->_locZ;
src/libctp/apolarsite.cc:        _top  = templ->_top;
src/libctp/apolarsite.cc:        _seg  = templ->_seg;
src/libctp/apolarsite.cc:        _frag = templ->_frag;
src/libctp/apolarsite.cc:        _rank = templ->_rank;
src/libctp/apolarsite.cc:        _Qs   = templ->_Qs;
src/libctp/apolarsite.cc:        _Ps   = templ->_Ps;
src/libctp/apolarsite.cc:        _id   = templ->_id;
src/libctp/apolarsite.cc:        _name = templ->_name;
src/libctp/apolarsite.cc:    vec dir = _pos - refPos;
src/libctp/apolarsite.cc:    for (int state = -1; state < 2; state++) {
src/libctp/apolarsite.cc:            double Qxx = -0.5*_Qs[state+1][4] + 0.5*sqrt(3)*_Qs[state+1][7];
src/libctp/apolarsite.cc:            double Qyy = -0.5*_Qs[state+1][4] - 0.5*sqrt(3)*_Qs[state+1][7];
src/libctp/apolarsite.cc:            /* if (this->getId() == 1) {
src/libctp/apolarsite.cc:                                          - Q_Global.get(1,1)); // Q22c
src/libctp/apolarsite.cc:        //cout << endl << pax << " --- " << eigenpxx;
src/libctp/apolarsite.cc:        //cout << endl << pay << " --- " << eigenpyy;
src/libctp/apolarsite.cc:        //cout << endl << paz << " --- " << eigenpzz;
src/libctp/apolarsite.cc:        Q1x = _Qs[idx][2];   // |-> NOTE: order z - x - y
src/libctp/apolarsite.cc:        Q00 = _Qs[idx2][0] - _Qs[idx1][0];
src/libctp/apolarsite.cc:        Q1z = _Qs[idx2][1] - _Qs[idx1][1];   // |
src/libctp/apolarsite.cc:        Q1x = _Qs[idx2][2] - _Qs[idx1][2];   // |-> NOTE: order z - x - y
src/libctp/apolarsite.cc:        Q1y = _Qs[idx2][3] - _Qs[idx1][3];   // |
src/libctp/apolarsite.cc:        Q20  = _Qs[idx2][4] - _Qs[idx1][4];
src/libctp/apolarsite.cc:        Q21c = _Qs[idx2][5] - _Qs[idx1][5];
src/libctp/apolarsite.cc:        Q21s = _Qs[idx2][6] - _Qs[idx1][6];
src/libctp/apolarsite.cc:        Q22c = _Qs[idx2][7] - _Qs[idx1][7];
src/libctp/apolarsite.cc:        Q22s = _Qs[idx2][8] - _Qs[idx1][8];
src/libctp/apolarsite.cc:    return this->eigendamp;
src/libctp/apolarsite.cc:    U1x = (1 - wSOR) * U1x + wSOR * ( - Pxx * (FPx + FUx) - Pxy * (FPy + FUy) - Pxz * (FPz + FUz) ); // OVERRIDE
src/libctp/apolarsite.cc:    U1y = (1 - wSOR) * U1y + wSOR * ( - Pxy * (FPx + FUx) - Pyy * (FPy + FUy) - Pyz * (FPz + FUz) ); // OVERRIDE
src/libctp/apolarsite.cc:    U1z = (1 - wSOR) * U1z + wSOR * ( - Pxz * (FPx + FUx) - Pyz * (FPy + FUy) - Pzz * (FPz + FUz) ); // OVERRIDE
src/libctp/apolarsite.cc:    U1x =  - Pxx * FPx - Pxy * FPy - Pxz * FPz; // OVERRIDE
src/libctp/apolarsite.cc:    U1y =  - Pxy * FPx - Pyy * FPy - Pyz * FPz; // OVERRIDE
src/libctp/apolarsite.cc:    U1z =  - Pxz * FPx - Pyz * FPy - Pzz * FPz; // OVERRIDE
src/libctp/apolarsite.cc:    vec dU = vec(U1x, U1y, U1z) - U1_Hist.back();
src/libctp/apolarsite.cc:    this->Charge(state);
src/libctp/apolarsite.cc:    vec end_pax = rxyz + 1.0*this->pax*this->eigenpxx/this->eigendamp;
src/libctp/apolarsite.cc:    vec end_pay = rxyz + 1.0*this->pay*this->eigenpyy/this->eigendamp;
src/libctp/apolarsite.cc:    vec end_paz = rxyz + 1.0*this->paz*this->eigenpzz/this->eigendamp;
src/libctp/apolarsite.cc:    fprintf(out, "%-5s %+4.7f %+4.7f %+4.7f\n",
src/libctp/apolarsite.cc:            this->_name.c_str(),
src/libctp/apolarsite.cc:    fprintf(out, "%-2s %+4.9f %+4.9f %+4.9f \n",
src/libctp/apolarsite.cc:            double Qxx = -0.5*_Qs[state+1][4] + 0.5*sqrt(3)*_Qs[state+1][7];
src/libctp/apolarsite.cc:            double Qyy = -0.5*_Qs[state+1][4] - 0.5*sqrt(3)*_Qs[state+1][7];
src/libctp/apolarsite.cc:        vec    B        = pos - 0.5 * a * dir_d;
src/libctp/apolarsite.cc:        double qB       = - qA;
src/libctp/apolarsite.cc:        if (this->eigendamp == 0) {
src/libctp/apolarsite.cc:            vec D2 = pos - 0.5 * a * EIGEN.eigenvecs[0];
src/libctp/apolarsite.cc:            vec E2 = pos - 0.5 * a * EIGEN.eigenvecs[1];
src/libctp/apolarsite.cc:            vec F2 = pos - 0.5 * a * EIGEN.eigenvecs[2];
src/libctp/apolarsite.cc:    vector<double> Qs; // <- multipole moments
src/libctp/apolarsite.cc:    matrix         P1; // <- dipole polarizability
src/libctp/apolarsite.cc:    // ! SP        RB3LYP          6-311+G(d,p)
src/libctp/apolarsite.cc:    // C          -4.2414603400   -3.8124751600    0.0017575736    Rank  2
src/libctp/apolarsite.cc:    //  -0.3853409355
src/libctp/apolarsite.cc:    //  -0.0002321905   0.2401559510   0.6602334308
src/libctp/apolarsite.cc:    //  -0.7220625314   0.0004894995  -0.0003833545   0.4526409813  -0.50937399
src/libctp/apolarsite.cc:                int id = poleCount++;  // <- starts from 1
src/libctp/apolarsite.cc:                newPole->setRank(rank);
src/libctp/apolarsite.cc:                newPole->setPos(pos);
src/libctp/apolarsite.cc:                    pxx = 1e-3 * boost::lexical_cast<double>(split[1]);
src/libctp/apolarsite.cc:                    pxy = 1e-3 * boost::lexical_cast<double>(split[2]);
src/libctp/apolarsite.cc:                    pxz = 1e-3 * boost::lexical_cast<double>(split[3]);
src/libctp/apolarsite.cc:                    pyy = 1e-3 * boost::lexical_cast<double>(split[4]);
src/libctp/apolarsite.cc:                    pyz = 1e-3 * boost::lexical_cast<double>(split[5]);
src/libctp/apolarsite.cc:                    pzz = 1e-3 * boost::lexical_cast<double>(split[6]);
src/libctp/apolarsite.cc:                    pxx = 1e-3 * boost::lexical_cast<double>(split[1]);
src/libctp/apolarsite.cc:                thisPole->setPs(P1, state);
src/libctp/apolarsite.cc:                int lineRank = int( sqrt(thisPole->getQs(state).size()) + 0.5 );
src/libctp/apolarsite.cc:                thisPole->setQs(Qs, state);
src/libctp/apolarsite.cc:    printf("\n... ... ... Reading %-25s -> N = %2d Q0(Sum) = %+1.3f ",
src/libctp/apolarsite.cc:            string elem = (*pol)->getName();
src/libctp/apolarsite.cc:            if      (elem == "C") { alpha = 1.75e-3;  } // <- conversion from
src/libctp/apolarsite.cc:            else if (elem == "H") { alpha = 0.696e-3; } //    A³ to nm³ = 10⁻³
src/libctp/apolarsite.cc:            else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/apolarsite.cc:            else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/apolarsite.cc:            else if (elem == "S") { alpha = 2.926e-3; }
src/libctp/apolarsite.cc:            //if      (elem == "C") { alpha = 1.334e-3; } // <- conversion from
src/libctp/apolarsite.cc:            //else if (elem == "H") { alpha = 0.496e-3; } //    A³ to nm³ = 10⁻³
src/libctp/apolarsite.cc:            //else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/apolarsite.cc:            //else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/apolarsite.cc:            //else if (elem == "S") { alpha = 3.300e-3; }
src/libctp/apolarsite.cc:            (*pol)->setPs(P1, state);
src/libctp/apolarsite.cc:        (*pol)->Charge(state);
src/libctp/apolarsite.cc://    e12  = pol2.getPos() - pol1.getPos();
src/libctp/apolarsite.cc:////        rbx = - pol2._locX * e12;
src/libctp/apolarsite.cc:////        rby = - pol2._locY * e12;
src/libctp/apolarsite.cc:////        rbz = - pol2._locZ * e12;
src/libctp/apolarsite.cc://        rbx = - rax;
src/libctp/apolarsite.cc://        rby = - ray;
src/libctp/apolarsite.cc://        rbz = - raz;
src/libctp/apolarsite.cc://    // Fields generated by rank-1 induced m'poles
src/libctp/calculatorfactory.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculatorfactory.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/density.h:        string xmlFile = string(getenv("VOTCASHARE")) + string("/ctp/xml/")+this->Identify()+string(".xml");
src/libctp/calculators/density.h:    _axis           = options->get(key+".axis").as< vec >();
src/libctp/calculators/density.h:    _resolution     = options->get(key+".resolution").as< double >();
src/libctp/calculators/density.h:    _outfile        = options->get(key+".output").as< string >();
src/libctp/calculators/density.h:    _outfile_EA_IP  = options->get(key+".output_e").as< string >();
src/libctp/calculators/density.h:    _density_type   = options->get(key+".density_type").as< string >();
src/libctp/calculators/density.h:    int autobin     = options->get(key+".auto_bin").as< int >();
src/libctp/calculators/density.h:        _min            = options->get(key+".min").as< double >();
src/libctp/calculators/density.h:        _max            = options->get(key+".max").as< double >();
src/libctp/calculators/density.h:    if (options->exists(key+".first")) {
src/libctp/calculators/density.h:        _firstSegId = options->get(key+".first").as<int>();
src/libctp/calculators/density.h:    if (options->exists(key+".last")) {
src/libctp/calculators/density.h:        _lastSegId = options->get(key+".last").as<int>();
src/libctp/calculators/density.h:    else { _lastSegId = -1; }
src/libctp/calculators/density.h:    double MAX = -1e100;
src/libctp/calculators/density.h:    for (sit = top->Segments().begin();
src/libctp/calculators/density.h:         sit < top->Segments().end();
src/libctp/calculators/density.h:        if (seg->getId() < _firstSegId) { continue; }
src/libctp/calculators/density.h:        if (seg->getId() == _lastSegId+1) { break; }
src/libctp/calculators/density.h:        if (!set_seg.count(seg->getName())) { set_seg[seg->getName()] = true; }
src/libctp/calculators/density.h:        double z_com = seg->getPos() * _axis;
src/libctp/calculators/density.h:        map_com_zs[seg->getName()].push_back(z_com);
src/libctp/calculators/density.h:        map_com_seg[seg->getName()].push_back(seg);
src/libctp/calculators/density.h:        // if (!wildcmp(seg->getName().c_str(),_seg_pattern.c_str())) {
src/libctp/calculators/density.h:        for (ait = seg->Atoms().begin();
src/libctp/calculators/density.h:             ait < seg->Atoms().end();
src/libctp/calculators/density.h:            double z = (*ait)->getPos() * _axis;
src/libctp/calculators/density.h:            map_seg_zs[seg->getName()].push_back(z);
src/libctp/calculators/density.h:    int BIN = int( (MAX-MIN)/_resolution + 0.5 ) + 1;
src/libctp/calculators/density.h:    // Calculate density profile from z-list, segment-name based //
src/libctp/calculators/density.h:        string segName = setit->first;
src/libctp/calculators/density.h:            int bin = int( ((*zit)-MIN)/_resolution + 0.5 );
src/libctp/calculators/density.h:            int bin = int( ((*zit)-MIN)/_resolution + 0.5 );
src/libctp/calculators/density.h:            binned_ea[bin].push_back((*sit)->getSiteEnergy(-1));
src/libctp/calculators/density.h:            binned_ec[bin].push_back((*sit)->getSiteEnergy(+1));
src/libctp/calculators/density.h:        // Segment-based number density
src/libctp/calculators/density.h:                std_ea += (binned_ea[bin][entry] - avg_ea)
src/libctp/calculators/density.h:                         *(binned_ea[bin][entry] - avg_ea);
src/libctp/calculators/density.h:                std_ec += (binned_ec[bin][entry] - avg_ec)
src/libctp/calculators/density.h:                         *(binned_ec[bin][entry] - avg_ec);
src/libctp/calculators/density.h:        fprintf(out, " N(%1s,z) ", setit->first.c_str());
src/libctp/calculators/density.h:    // Output spatially-resolved EA, IP //
src/libctp/calculators/density.h:        fprintf(out, " EA(%1s,z) +/- ", setit->first.c_str());
src/libctp/calculators/density.h:        fprintf(out, " IP(%1s,z) +/- ", setit->first.c_str());
src/libctp/calculators/eanalyze.h:    _resolution_pairs = opt->get(key+".resolution_pairs").as< double >();
src/libctp/calculators/eanalyze.h:    _resolution_sites = opt->get(key+".resolution_sites").as< double >();
src/libctp/calculators/eanalyze.h:    _resolution_space = opt->get(key+".resolution_space").as< double >();
src/libctp/calculators/eanalyze.h:    if (opt->exists(key+".states")) {
src/libctp/calculators/eanalyze.h:        _states = opt->get(key+".states").as< vector<int> >();
src/libctp/calculators/eanalyze.h:        _states.push_back(-1);
src/libctp/calculators/eanalyze.h:    if (opt->exists(key+".do_atomic_xyze")) {
src/libctp/calculators/eanalyze.h:        int do_xyze = opt->get(key+".do_atomic_xyze").as< int >();
src/libctp/calculators/eanalyze.h:        _atomic_first = opt->get(key+".atomic_first").as< int >();
src/libctp/calculators/eanalyze.h:        _atomic_last  = opt->get(key+".atomic_last").as< int >();
src/libctp/calculators/eanalyze.h:    _skip_corr = opt->exists(key+".skip_correlation");
src/libctp/calculators/eanalyze.h:    _skip_sites = opt->exists(key+".skip_sites");
src/libctp/calculators/eanalyze.h:    _skip_pairs = opt->exists(key+".skip_pairs");
src/libctp/calculators/eanalyze.h:    // ... Site-energy histogram, mean, width
src/libctp/calculators/eanalyze.h:    // ... Pair-energy histogram, mean, width
src/libctp/calculators/eanalyze.h:    // ... Site-energy correlation
src/libctp/calculators/eanalyze.h:    QMNBList &nblist = top->NBList();
src/libctp/calculators/eanalyze.h:        if (!top->Segments().size()) {            
src/libctp/calculators/eanalyze.h:            // Site-energy histogram <> DOS
src/libctp/calculators/eanalyze.h:                cout << endl << "... ... ... Skip site-energy hist." << flush;
src/libctp/calculators/eanalyze.h:            // Site-energy correlation function
src/libctp/calculators/eanalyze.h:            // Site-energy-difference histogram <> Pair DOS
src/libctp/calculators/eanalyze.h:                cout << endl << "... ... ... Skip pair-energy hist." << flush;
src/libctp/calculators/eanalyze.h:    Es.reserve(top->Segments().size());
src/libctp/calculators/eanalyze.h:    double MIN = top->Segments()[0]->getSiteEnergy(state);
src/libctp/calculators/eanalyze.h:    double MAX = top->Segments()[0]->getSiteEnergy(state);
src/libctp/calculators/eanalyze.h:    for (sit = top->Segments().begin(); 
src/libctp/calculators/eanalyze.h:         sit < top->Segments().end();
src/libctp/calculators/eanalyze.h:        double E = (*sit)->getSiteEnergy(state);
src/libctp/calculators/eanalyze.h:        AVG += E / top->Segments().size();
src/libctp/calculators/eanalyze.h:    int BIN = int( (MAX-MIN)/_resolution_sites + 0.5 ) + 1;
src/libctp/calculators/eanalyze.h:        int bin = int( (*eit-MIN)/_resolution_sites + 0.5 );
src/libctp/calculators/eanalyze.h:        VAR += ((*eit) - AVG)*((*eit) - AVG) / top->Segments().size();
src/libctp/calculators/eanalyze.h:    string tag = boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/eanalyze.h:               + "_SITES_" + ( (state == -1) ? "A" : "C" ) + ".dat";
src/libctp/calculators/eanalyze.h:    fprintf(out, "# EANALYZE: SITE-ENERGY HISTOGRAM \n");
src/libctp/calculators/eanalyze.h:        tag = (state == -1) ? "e_atomic_xyze" : "h_atomic_xyze";
src/libctp/calculators/eanalyze.h:        for (sit = top->Segments().begin(); 
src/libctp/calculators/eanalyze.h:             sit < top->Segments().end();
src/libctp/calculators/eanalyze.h:            if ((*sit)->getId() < _atomic_first) { continue; }
src/libctp/calculators/eanalyze.h:            if ((*sit)->getId() > _atomic_last) { continue; }
src/libctp/calculators/eanalyze.h:            double E = (*sit)->getSiteEnergy(state);
src/libctp/calculators/eanalyze.h:            for (ait = (*sit)->Atoms().begin();
src/libctp/calculators/eanalyze.h:                 ait < (*sit)->Atoms().end();
src/libctp/calculators/eanalyze.h:                              (*sit)->getName().c_str(),
src/libctp/calculators/eanalyze.h:                              atm->getPos().getX(),
src/libctp/calculators/eanalyze.h:                              atm->getPos().getY(),
src/libctp/calculators/eanalyze.h:                              atm->getPos().getZ(),
src/libctp/calculators/eanalyze.h:    QMNBList &nblist = top->NBList();
src/libctp/calculators/eanalyze.h:    double MIN = nblist.front()->Seg1()->getSiteEnergy(state)
src/libctp/calculators/eanalyze.h:               - nblist.front()->Seg2()->getSiteEnergy(state);
src/libctp/calculators/eanalyze.h:    double MAX = nblist.front()->Seg1()->getSiteEnergy(state)
src/libctp/calculators/eanalyze.h:               - nblist.front()->Seg2()->getSiteEnergy(state);
src/libctp/calculators/eanalyze.h:    string tag_dEs = boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/eanalyze.h:               + "_PAIRSLIST_" + ( (state == -1) ? "A" : "C" ) + ".dat";
src/libctp/calculators/eanalyze.h:    // Collect site-energy differences from neighbourlist
src/libctp/calculators/eanalyze.h:        Segment *seg1 = (*pit)->Seg1();
src/libctp/calculators/eanalyze.h:        Segment *seg2 = (*pit)->Seg2();
src/libctp/calculators/eanalyze.h:        double dE = seg2->getSiteEnergy(state) - seg1->getSiteEnergy(state);
src/libctp/calculators/eanalyze.h:        MIN = (-dE < MIN) ? -dE : MIN;
src/libctp/calculators/eanalyze.h:        MAX = (-dE > MAX) ? -dE : MAX;
src/libctp/calculators/eanalyze.h:        dEs.push_back(-dE);
src/libctp/calculators/eanalyze.h:        fprintf(out_dEs, "%5d %5d %4.7f \n", seg1->getId(), seg2->getId(), dE);
src/libctp/calculators/eanalyze.h:    int BIN = int( (MAX-MIN)/_resolution_pairs + 0.5 ) + 1;
src/libctp/calculators/eanalyze.h:        int bin = int( ((*eit)-MIN)/_resolution_pairs + 0.5 );
src/libctp/calculators/eanalyze.h:        VAR += ((*eit) - AVG)*((*eit) - AVG) / nblist.size();
src/libctp/calculators/eanalyze.h:    string tag = boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/eanalyze.h:               + "_PAIRS_" + ( (state == -1) ? "A" : "C" ) + ".dat";
src/libctp/calculators/eanalyze.h:    fprintf(out, "# EANALYZE: PAIR-ENERGY HISTOGRAM \n");
src/libctp/calculators/eanalyze.h:    for (sit = top->Segments().begin();
src/libctp/calculators/eanalyze.h:         sit < top->Segments().end();
src/libctp/calculators/eanalyze.h:        double E = (*sit)->getSiteEnergy(state);
src/libctp/calculators/eanalyze.h:        AVG += E / top->Segments().size();
src/libctp/calculators/eanalyze.h:        VAR += ((*eit) - AVG)*((*eit) - AVG) / top->Segments().size();
src/libctp/calculators/eanalyze.h:    // Collect inter-site distances, correlation product
src/libctp/calculators/eanalyze.h:    double MAX = -1e15;
src/libctp/calculators/eanalyze.h:    for (sit1 = top->Segments().begin(); sit1 < top->Segments().end(); ++sit1) {
src/libctp/calculators/eanalyze.h:             << (*sit1)->getId() << flush;
src/libctp/calculators/eanalyze.h:    for (sit2 = sit1 + 1;                sit2 < top->Segments().end(); ++sit2) {
src/libctp/calculators/eanalyze.h:        double R = abs(top->PbShortestConnect((*sit1)->getPos(),
src/libctp/calculators/eanalyze.h:                                              (*sit2)->getPos()));
src/libctp/calculators/eanalyze.h:        for (fit1 = (*sit1)->Fragments().begin();
src/libctp/calculators/eanalyze.h:             fit1 < (*sit1)->Fragments().end();
src/libctp/calculators/eanalyze.h:        for (fit2 = (*sit2)->Fragments().begin();
src/libctp/calculators/eanalyze.h:             fit2 < (*sit2)->Fragments().end();
src/libctp/calculators/eanalyze.h:            double R_FF = abs(top->PbShortestConnect((*fit1)->getPos(),
src/libctp/calculators/eanalyze.h:                                                     (*fit2)->getPos()));
src/libctp/calculators/eanalyze.h:        double C = ((*sit1)->getSiteEnergy(state) - AVG)
src/libctp/calculators/eanalyze.h:                 * ((*sit2)->getSiteEnergy(state) - AVG);
src/libctp/calculators/eanalyze.h:    int BIN = int( (MAX-MIN)/_resolution_space + 0.5 ) + 1;
src/libctp/calculators/eanalyze.h:        int bin = int((Rs[i] - MIN)/_resolution_space + 0.5);
src/libctp/calculators/eanalyze.h:            dcorr2 += (histCs[bin][i]/VAR - corr)*(histCs[bin][i]/VAR - corr);
src/libctp/calculators/eanalyze.h:    string tag = boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/eanalyze.h:               + "_CORR_" + ( (state == -1) ? "A" : "C" ) + ".dat";
src/libctp/calculators/eanalyze.h:    fprintf(out, "# EANALYZE: SPATIAL SITE-ENERGY CORRELATION \n");
src/libctp/calculators/ecoulomb.h:    map< int, int > _log_seg_sphere; // <- # segs within cut-off
src/libctp/calculators/ecoulomb.h:    _cutoff = options->get(key+".cutoff").as< double >();
src/libctp/calculators/ecoulomb.h:    _outFile = options->get(key+".output").as< string >();
src/libctp/calculators/ecoulomb.h:    if (options->exists(key+".first")) {
src/libctp/calculators/ecoulomb.h:        _first = options->get(key+".first").as< int >();
src/libctp/calculators/ecoulomb.h:    if (options->exists(key+".last")) {
src/libctp/calculators/ecoulomb.h:        _last = options->get(key+".last").as< int >();
src/libctp/calculators/ecoulomb.h:        _last = -1;
src/libctp/calculators/ecoulomb.h:    if (top->isEStatified() == false) {
src/libctp/calculators/ecoulomb.h:    for (sit = top->Segments().begin(); 
src/libctp/calculators/ecoulomb.h:         sit < top->Segments().end();
src/libctp/calculators/ecoulomb.h:    for (pit = (*sit)->PolarSites().begin();
src/libctp/calculators/ecoulomb.h:         pit < (*sit)->PolarSites().end();
src/libctp/calculators/ecoulomb.h:        (*pit)->Charge(0); 
src/libctp/calculators/ecoulomb.h:    for (sit = top->Segments().begin();
src/libctp/calculators/ecoulomb.h:         sit < top->Segments().end();
src/libctp/calculators/ecoulomb.h:         if ((*sit)->getId() < _first) { continue; }
src/libctp/calculators/ecoulomb.h:         if ((*sit)->getId() == _last+1)  { break; }
src/libctp/calculators/ecoulomb.h:         cout << endl << "... ... Evaluating site " << (*sit)->getId() << flush;
src/libctp/calculators/ecoulomb.h:    for (int state = -1; state < 2; ++state) {
src/libctp/calculators/ecoulomb.h:         this->EvaluateSegment(top, *sit, state);                 
src/libctp/calculators/ecoulomb.h:    this->Output2File(top);
src/libctp/calculators/ecoulomb.h:    if (seg->hasChrgState(state)) {        
src/libctp/calculators/ecoulomb.h:        for (pit1 = seg->PolarSites().begin();
src/libctp/calculators/ecoulomb.h:             pit1 < seg->PolarSites().end();
src/libctp/calculators/ecoulomb.h:             (*pit1)->Charge(state);
src/libctp/calculators/ecoulomb.h:        double INT2eV    = 1/(4*M_PI*8.854187817e-12)
src/libctp/calculators/ecoulomb.h:                         * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/ecoulomb.h:        string sphpdb = boost::lexical_cast<string>(seg->getId())
src/libctp/calculators/ecoulomb.h:        vec com_shift = -1 * seg->getPos();
src/libctp/calculators/ecoulomb.h:        for (pit1 = seg->PolarSites().begin();
src/libctp/calculators/ecoulomb.h:             pit1 < seg->PolarSites().end();
src/libctp/calculators/ecoulomb.h:             (*pit1)->PrintPDB(out, com_shift);
src/libctp/calculators/ecoulomb.h:        for (ext = top->Segments().begin();
src/libctp/calculators/ecoulomb.h:             ext < top->Segments().end();
src/libctp/calculators/ecoulomb.h:             if ((*ext)->getId() == seg->getId()) { continue; }             
src/libctp/calculators/ecoulomb.h:             vec R_pbc = top->PbShortestConnect((*ext)->getPos(), seg->getPos());
src/libctp/calculators/ecoulomb.h:             vec R_dir = seg->getPos() - (*ext)->getPos();
src/libctp/calculators/ecoulomb.h:             vec shift = R_dir - R_pbc;
src/libctp/calculators/ecoulomb.h://             double r12 = abs(top->PbShortestConnect((*ext)->getPos(),
src/libctp/calculators/ecoulomb.h://                                                       seg->getPos()));
src/libctp/calculators/ecoulomb.h:             // (*ext)->WritePDB(out, "Multipoles", "Charges");
src/libctp/calculators/ecoulomb.h:             for (pit1 = (*ext)->PolarSites().begin();
src/libctp/calculators/ecoulomb.h:                  pit1 < (*ext)->PolarSites().end();
src/libctp/calculators/ecoulomb.h://                  vec dr_pbc = top->PbShortestConnect((*pit1)->getPos(),
src/libctp/calculators/ecoulomb.h://                                                        seg->getPos());
src/libctp/calculators/ecoulomb.h://                  vec dr_dir = seg->getPos() - (*pit1)->getPos();
src/libctp/calculators/ecoulomb.h://                  if (abs(dr_pbc - dr_dir) > 1e-8) {
src/libctp/calculators/ecoulomb.h://                      pol_shift = dr_dir - dr_pbc;
src/libctp/calculators/ecoulomb.h:                  (*pit1)->PrintPDB(out, com_shift + shift);
src/libctp/calculators/ecoulomb.h:             for (pit2 = seg->PolarSites().begin();
src/libctp/calculators/ecoulomb.h:                  pit2 < seg->PolarSites().end();
src/libctp/calculators/ecoulomb.h://                  double R = abs(top->PbShortestConnect((*pit1)->getPos(),
src/libctp/calculators/ecoulomb.h://                                                        (*pit2)->getPos()));
src/libctp/calculators/ecoulomb.h:                 double R = abs((*pit1)->getPos() + shift - (*pit2)->getPos());
src/libctp/calculators/ecoulomb.h:                  E_INTER += (*pit1)->Q00 * 1/R * (*pit2)->Q00;
src/libctp/calculators/ecoulomb.h:        seg->setEMpoles(state, INT2eV * E_INTER);
src/libctp/calculators/ecoulomb.h:        _log_seg_sphere[seg->getId()] = COUNT_EXT;
src/libctp/calculators/ecoulomb.h:        for (pit1 = seg->PolarSites().begin();
src/libctp/calculators/ecoulomb.h:             pit1 < seg->PolarSites().end();
src/libctp/calculators/ecoulomb.h:             (*pit1)->Charge(0);
src/libctp/calculators/ecoulomb.h:                      + boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/ecoulomb.h:    for (sit = top->Segments().begin();
src/libctp/calculators/ecoulomb.h:         sit < top->Segments().end();
src/libctp/calculators/ecoulomb.h:         if ((*sit)->getId() < _first) { continue; }
src/libctp/calculators/ecoulomb.h:         else if ((*sit)->getId() == _last+1)  { break; }
src/libctp/calculators/ecoulomb.h:        fprintf(out, "%4d ", (*sit)->getId() );
src/libctp/calculators/ecoulomb.h:        fprintf(out, "%4s ", (*sit)->getName().c_str() );
src/libctp/calculators/ecoulomb.h:        if ((*sit)->hasChrgState(0)) {
src/libctp/calculators/ecoulomb.h:            fprintf(out, "   0 %3.8f   ", (*sit)->getEMpoles(0) );
src/libctp/calculators/ecoulomb.h:        if ((*sit)->hasChrgState(-1)) {
src/libctp/calculators/ecoulomb.h:            fprintf(out, "  -1 %3.8f   ", (*sit)->getEMpoles(-1) );
src/libctp/calculators/ecoulomb.h:        if ((*sit)->hasChrgState(+1)) {
src/libctp/calculators/ecoulomb.h:            fprintf(out, "  +1 %3.8f   ", (*sit)->getEMpoles(+1) );
src/libctp/calculators/ecoulomb.h:        if ((*sit)->hasChrgState(0)) {
src/libctp/calculators/ecoulomb.h:        if ((*sit)->hasChrgState(-1)) {
src/libctp/calculators/ecoulomb.h:            fprintf(out, "  -1 0     ");
src/libctp/calculators/ecoulomb.h:        if ((*sit)->hasChrgState(+1)) {
src/libctp/calculators/ecoulomb.h:                _log_seg_sphere[(*sit)->getId()]);
src/libctp/calculators/ecoulomb.h:                (*sit)->getPos().getX(),
src/libctp/calculators/ecoulomb.h:                (*sit)->getPos().getY(),
src/libctp/calculators/ecoulomb.h:                (*sit)->getPos().getZ());
src/libctp/calculators/eimport.h:    _energiesFile = options->get(key + ".energies").as< string >();    
src/libctp/calculators/eimport.h:    if (options->exists(key+".reset")) {
src/libctp/calculators/eimport.h:        int reset = options->get(key+".reset").as<int>();
src/libctp/calculators/eimport.h:        for (sit = top->Segments().begin();
src/libctp/calculators/eimport.h:             sit < top->Segments().end();
src/libctp/calculators/eimport.h:            (*sit)->setEMpoles( 0, 0.0);
src/libctp/calculators/eimport.h:            (*sit)->setEMpoles(-1, 0.0);
src/libctp/calculators/eimport.h:            (*sit)->setEMpoles(+1, 0.0);
src/libctp/calculators/eimport.h:              // 10 Alq3 0 0.00000000  +1 -0.49966334  0 20  +1 10  SPH 2366 ...
src/libctp/calculators/eimport.h:                Segment *seg = top->getSegment(id);
src/libctp/calculators/eimport.h:                if (seg->getName() != name) {
src/libctp/calculators/eimport.h:                    seg->setEMpoles(state_N, e_N);
src/libctp/calculators/eimport.h:                    seg->setEMpoles(state_C, e_C);
src/libctp/calculators/eimport.h:                    assert(state_A == -1);
src/libctp/calculators/eimport.h:                    seg->setEMpoles(state_N, e_N);
src/libctp/calculators/eimport.h:                    seg->setEMpoles(state_A, e_A);
src/libctp/calculators/eimport.h:                    seg->setEMpoles(state_C, e_C);
src/libctp/calculators/einternal.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/einternal.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/einternal.h:    /* ---- OPTIONS.XML Structure -----
src/libctp/calculators/einternal.h:    this->ParseEnergiesXML(top, options);
src/libctp/calculators/einternal.h:    string energiesXML = opt->get(key+".energiesXML").as<string> ();
src/libctp/calculators/einternal.h:    /* --- ENERGIES.XML Structure ---
src/libctp/calculators/einternal.h:     *              <!-- U_sG_sG, s->state, G->geometry !-->
src/libctp/calculators/einternal.h:        list<Property*> segs = (*molit)->Select(key);
src/libctp/calculators/einternal.h:            string segName = (*segit)->get("name").as<string> ();
src/libctp/calculators/einternal.h:            if ( (*segit)->exists("U_cC_nN_e") &&
src/libctp/calculators/einternal.h:                 (*segit)->exists("U_nC_nN_e") &&
src/libctp/calculators/einternal.h:                 (*segit)->exists("U_cN_cC_e")    ) {
src/libctp/calculators/einternal.h:                U_cC_nN_e = (*segit)->get("U_cC_nN_e").as< double > ();
src/libctp/calculators/einternal.h:                U_nC_nN_e = (*segit)->get("U_nC_nN_e").as< double > ();
src/libctp/calculators/einternal.h:                U_cN_cC_e = (*segit)->get("U_cN_cC_e").as< double > ();
src/libctp/calculators/einternal.h:            if ( (*segit)->exists("U_cC_nN_h") &&
src/libctp/calculators/einternal.h:                 (*segit)->exists("U_nC_nN_h") &&
src/libctp/calculators/einternal.h:                 (*segit)->exists("U_cN_cC_h")    ) {
src/libctp/calculators/einternal.h:                U_cC_nN_h = (*segit)->get("U_cC_nN_h").as< double > ();
src/libctp/calculators/einternal.h:                U_nC_nN_h = (*segit)->get("U_nC_nN_h").as< double > ();
src/libctp/calculators/einternal.h:                U_cN_cC_h = (*segit)->get("U_cN_cC_h").as< double > ();
src/libctp/calculators/einternal.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/einternal.h:        string segName = (*sit)->getName();
src/libctp/calculators/einternal.h:            (*sit)->setU_cC_nN(u, -1);
src/libctp/calculators/einternal.h:            (*sit)->setU_nC_nN(l1, -1);
src/libctp/calculators/einternal.h:            (*sit)->setU_cN_cC(l2, -1);
src/libctp/calculators/einternal.h:            (*sit)->setHasState(has_e, -1);
src/libctp/calculators/einternal.h:            (*sit)->setU_cC_nN(u, +1);
src/libctp/calculators/einternal.h:            (*sit)->setU_nC_nN(l1, +1);
src/libctp/calculators/einternal.h:            (*sit)->setU_cN_cC(l2, +1);
src/libctp/calculators/einternal.h:            (*sit)->setHasState(has_h, +1);
src/libctp/calculators/emultipole.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/emultipole.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/emultipole.h:    // Sub-Calculators ESP, ESF, MolPol //
src/libctp/calculators/emultipole.h:        double EP;       //   <- Interaction permanent multipoles (inter-site)
src/libctp/calculators/emultipole.h:        double EU_INTRA; //   <- Interaction induction multipoles (intra-site)
src/libctp/calculators/emultipole.h:        double EU_INTER; //   <- Interaction induction multipoles (inter-site)
src/libctp/calculators/emultipole.h:        double u3;      //  |-> NOTE: Only needed when using Thole model
src/libctp/calculators/emultipole.h:        double R3;      //  |-> NOTE: reciprocal, i.e. e.g. R3 = 1/(R*R*R)
src/libctp/calculators/emultipole.h:        inline double lambda3() { return 1 - exp( -a*u3); }
src/libctp/calculators/emultipole.h:        inline double lambda5() { return 1 - (1 + a*u3) * exp( -a*u3); }
src/libctp/calculators/emultipole.h:        inline double lambda7() { return 1 - (1 + a*u3 + 0.6*a*a*u3*u3) * exp( -a*u3); }
src/libctp/calculators/emultipole.h:        inline double lambda9() { return 1 - (1 + a*u3 + (18*a*a*u3*u3 + 9*a*a*a*u3*u3*u3)/35) * exp( -a*u3); }
src/libctp/calculators/emultipole.h:        inline double T20_00()  { return R3 * 0.5 * (3 * raz*raz - 1); }
src/libctp/calculators/emultipole.h:        inline double T22c_00() { return R3 * 0.5 * sqrt(3) * (rax*rax - ray*ray); }
src/libctp/calculators/emultipole.h:        inline double T00_20()  { return R3 * 0.5 * (3 * rbz*rbz - 1); }
src/libctp/calculators/emultipole.h:        inline double T00_22c() { return R3 * 0.5 * sqrt(3) * (rbx*rbx - rby*rby); }
src/libctp/calculators/emultipole.h:        inline double T20_1x()  { return R4 * 0.5 * (15*raz*raz*rbx + 6*raz*czx - 3*rbx); }
src/libctp/calculators/emultipole.h:        inline double T20_1y()  { return R4 * 0.5 * (15*raz*raz*rby + 6*raz*czy - 3*rby); }
src/libctp/calculators/emultipole.h:        inline double T20_1z()  { return R4 * 0.5 * (15*raz*raz*rbz + 6*raz*czz - 3*rbz); }
src/libctp/calculators/emultipole.h:        inline double T22c_1x() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbx + 2*rax*cxx - 2*ray*cyx); }
src/libctp/calculators/emultipole.h:        inline double T22c_1y() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rby + 2*rax*cxy - 2*ray*cyy); }
src/libctp/calculators/emultipole.h:        inline double T22c_1z() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbz + 2*rax*cxz - 2*ray*cyz); }
src/libctp/calculators/emultipole.h:        inline double T1x_20()  { return R4 * 0.5 * (15*rbz*rbz*rax + 6*rbz*cxz - 3*rax); }
src/libctp/calculators/emultipole.h:        inline double T1y_20()  { return R4 * 0.5 * (15*rbz*rbz*ray + 6*rbz*cyz - 3*ray); }
src/libctp/calculators/emultipole.h:        inline double T1z_20()  { return R4 * 0.5 * (15*rbz*rbz*raz + 6*rbz*czz - 3*raz); }
src/libctp/calculators/emultipole.h:        inline double T1x_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*rax + 2*rbx*cxx - 2*rby*cxy); }
src/libctp/calculators/emultipole.h:        inline double T1y_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*ray + 2*rbx*cyx - 2*rby*cyy); }
src/libctp/calculators/emultipole.h:        inline double T1z_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*raz + 2*rbx*czx - 2*rby*czy); }
src/libctp/calculators/emultipole.h:        inline double TU20_1x()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbx + lambda5()*(6*raz*czx - 3*rbx)); }
src/libctp/calculators/emultipole.h:        inline double TU20_1y()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rby + lambda5()*(6*raz*czy - 3*rby)); }
src/libctp/calculators/emultipole.h:        inline double TU20_1z()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbz + lambda5()*(6*raz*czz - 3*rbz)); }
src/libctp/calculators/emultipole.h:        inline double TU22c_1x() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbx + lambda5()*(2*rax*cxx - 2*ray*cyx)); }
src/libctp/calculators/emultipole.h:        inline double TU22c_1y() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rby + lambda5()*(2*rax*cxy - 2*ray*cyy)); }
src/libctp/calculators/emultipole.h:        inline double TU22c_1z() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbz + lambda5()*(2*rax*cxz - 2*ray*cyz)); }
src/libctp/calculators/emultipole.h:        inline double TU1x_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*rax + lambda5()*(6*rbz*cxz - 3*rax)); }
src/libctp/calculators/emultipole.h:        inline double TU1y_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*ray + lambda5()*(6*rbz*cyz - 3*ray)); }
src/libctp/calculators/emultipole.h:        inline double TU1z_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*raz + lambda5()*(6*rbz*czz - 3*raz)); }
src/libctp/calculators/emultipole.h:        inline double TU1x_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*rax + lambda5()*(2*rbx*cxx - 2*rby*cxy)); }
src/libctp/calculators/emultipole.h:        inline double TU1y_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*ray + lambda5()*(2*rbx*cyx - 2*rby*cyy)); }
src/libctp/calculators/emultipole.h:        inline double TU1z_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*raz + lambda5()*(2*rbx*czx - 2*rby*czy)); }
src/libctp/calculators/emultipole.h:        inline double T20_20()   { return R5 * 0.75 * (35*raz*raz*rbz*rbz - 5*raz*raz - 5*rbz*rbz + 20*raz*rbz*czz + 2*czz*czz + 1); }
src/libctp/calculators/emultipole.h:        inline double T20_21c()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rbz - 5*rbx*rbz + 10*raz*rbx*czz + 10*raz*rbz*czx + 2*czx*czz); }
src/libctp/calculators/emultipole.h:        inline double T20_21s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rby*rbz - 5*rby*rbz + 10*raz*rby*czz + 10*raz*rbz*czy + 2*czy*czz); }
src/libctp/calculators/emultipole.h:        inline double T20_22c()  { return R5 * 0.25 * sqrt(3) * (35*raz*raz*rbx*rbx - 35*raz*raz*rby*rby - 5*rbx*rbx + 5*rby*rby + 20*raz*rbx*czx - 20*raz*rby*czy + 2*czx*czx - 2*czy*czy); }
src/libctp/calculators/emultipole.h:        inline double T20_22s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rby - 5*rbx*rby + 10*raz*rbx*czy + 10*raz*rby*czx + 2*czx*czy); }
src/libctp/calculators/emultipole.h:        inline double T21c_22c() { return R5 * 0.5 * (35*rax*raz*rbx*rbx - 35*rax*raz*rby*rby + 10*rax*rbx*czx - 10*rax*rby*czy + 10*raz*rbx*cxx - 10*raz*rby*cxy + 2*cxx*czx - 2*cxy*czy); }
src/libctp/calculators/emultipole.h:        inline double T21s_22c() { return R5 * 0.5 * (35*ray*raz*rbx*rbx - 35*ray*raz*rby*rby + 10*ray*rbx*czx - 10*ray*rby*czy + 10*raz*rbx*cyx - 10*raz*rby*cyy + 2*cyx*czx - 2*cyy*czy); }
src/libctp/calculators/emultipole.h:        inline double T22c_22c() { return R5 * 0.25 * (35*rax*rax*rbx*rbx - 35*rax*rax*rby*rby - 35*ray*ray*rbx*rbx + 35*ray*ray*rby*rby + 20*rax*rbx*cxx - 20*rax*rby*cxy - 20*ray*rbx*cyx + 20*ray*rby*cyy + 2*cxx*cxx - 2*cxy*cxy - 2*cyx*cyx + 2*cyy*cyy); }
src/libctp/calculators/emultipole.h:        inline double T22c_22s() { return R5 * 0.5 * (35*rax*rax*rbx*rby - 35*ray*ray*rbx*rby + 10*rax*rbx*cxy + 10*rax*rby*cxx - 10*ray*rbx*cyy - 10*ray*rby*cyx + 2*cxx*cxy - 2*cyx*cyy); }
src/libctp/calculators/emultipole.h:        inline double T21c_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*raz - 5*rax*raz + 10*rbz*rax*czz + 10*rbz*raz*cxz + 2*cxz*czz); }
src/libctp/calculators/emultipole.h:        inline double T21s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*ray*raz - 5*ray*raz + 10*rbz*ray*czz + 10*rbz*raz*cyz + 2*cyz*czz); }
src/libctp/calculators/emultipole.h:        inline double T22c_20()  { return R5 * 0.25 * sqrt(3) * (35*rbz*rbz*rax*rax - 35*rbz*rbz*ray*ray - 5*rax*rax + 5*ray*ray + 20*rbz*rax*cxz - 20*rbz*ray*cyz + 2*cxz*cxz - 2*cyz*cyz); }
src/libctp/calculators/emultipole.h:        inline double T22s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*ray - 5*rax*ray + 10*rbz*rax*cyz + 10*rbz*ray*cxz + 2*cxz*cyz); }
src/libctp/calculators/emultipole.h:        inline double T22c_21c() { return R5 * 0.5 * (35*rbx*rbz*rax*rax - 35*rbx*rbz*ray*ray + 10*rbx*rax*cxz - 10*rbx*ray*cyz + 10*rbz*rax*cxx - 10*rbz*ray*cyx + 2*cxx*cxz - 2*cyx*cyz); }
src/libctp/calculators/emultipole.h:        inline double T22c_21s() { return R5 * 0.5 * (35*rby*rbz*rax*rax - 35*rby*rbz*ray*ray + 10*rby*rax*cxz - 10*rby*ray*cyz + 10*rbz*rax*cxy - 10*rbz*ray*cyy + 2*cxy*cxz - 2*cyy*cyz); }
src/libctp/calculators/emultipole.h:        inline double T22s_22c() { return R5 * 0.5 * (35*rbx*rbx*rax*ray - 35*rby*rby*rax*ray + 10*rbx*rax*cyx + 10*rbx*ray*cxx - 10*rby*rax*cyy - 10*rby*ray*cxy + 2*cxx*cyx - 2*cxy*cyy); }
src/libctp/calculators/emultipole.h:        vector< Segment* >           _segsPolSphere; // Segments    in c/o 0-1
src/libctp/calculators/emultipole.h:        vector< Segment* >           _segsOutSphere; // Segments    in c/0 1-2
src/libctp/calculators/emultipole.h:        vector< vector<PolarSite*> > _polsPolSphere; // Polar sites in c/o 0-1
src/libctp/calculators/emultipole.h:        vector< vector<PolarSite*> > _polsOutSphere; // Polar sites in c/o 1-2
src/libctp/calculators/emultipole.h:    /* ---- OPTIONS.XML Structure ----
src/libctp/calculators/emultipole.h:        if ( opt->exists(key) ) {
src/libctp/calculators/emultipole.h:            xmlfile = opt->get(key).as< string >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".induce") ) {
src/libctp/calculators/emultipole.h:            int induce = opt->get(key+".induce").as< int >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".first") ) {
src/libctp/calculators/emultipole.h:            _firstSeg = opt->get(key+".first").as< int >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".last") ) {
src/libctp/calculators/emultipole.h:            _lastSeg = opt->get(key+".last").as< int >();
src/libctp/calculators/emultipole.h:        else { _lastSeg = -1; }
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/emultipole.h:            _outFile = opt->get(key+".output").as< string >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".check") ) {
src/libctp/calculators/emultipole.h:            _checkPolesPDB = opt->get(key+".check").as< string >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".calcESP") ) {
src/libctp/calculators/emultipole.h:            int calcESP = opt->get(key+".calcESP").as< int >();
src/libctp/calculators/emultipole.h:            _espCubeFile = opt->get(key+".cube").as< string >();
src/libctp/calculators/emultipole.h:            _espOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/emultipole.h:            if (opt->exists(key+".doSystem")) {
src/libctp/calculators/emultipole.h:                int doSystem = opt->get(key+".doSystem").as< int >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".calcESF") ) {
src/libctp/calculators/emultipole.h:            int calcESF = opt->get(key+".calcESF").as< int >();
src/libctp/calculators/emultipole.h:            _esfGridFile = opt->get(key+".grid").as< string >();
src/libctp/calculators/emultipole.h:            _esfOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".calcAlpha") ) {
src/libctp/calculators/emultipole.h:            int calcAlpha = opt->get(key+".calcAlpha").as< int >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".doSystem") ) {
src/libctp/calculators/emultipole.h:            int doSystem = opt->get(key+".doSystem").as< int >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/emultipole.h:            string alphaOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".calcGSP") ) {
src/libctp/calculators/emultipole.h:            int calcGSP = opt->get(key+".calcGSP").as< int >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".dma_input") ) {
src/libctp/calculators/emultipole.h:            int dma_input = opt->get(key+".dma_input").as< int >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".first") ) {
src/libctp/calculators/emultipole.h:            _gsp_first = opt->get(key+".first").as< int >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".last") ) {
src/libctp/calculators/emultipole.h:            _gsp_last = opt->get(key+".last").as< int >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".normal") ) {
src/libctp/calculators/emultipole.h:            _gsp_normal = opt->get(key+".normal").as< vec >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".cutoff") ) {
src/libctp/calculators/emultipole.h:            _cutoff = opt->get(key+".cutoff").as< double >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".cutoff2") ) {
src/libctp/calculators/emultipole.h:            _cutoff2 = opt->get(key+".cutoff2").as< double >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".expdamp") ) {
src/libctp/calculators/emultipole.h:            _aDamp = opt->get(key+".expdamp").as< double >();
src/libctp/calculators/emultipole.h:         if ( opt->exists(key+".scaling") ) {
src/libctp/calculators/emultipole.h:            _scale1 = opt->get(key+".scaling").as< vector<double> >();
src/libctp/calculators/emultipole.h:                cout << endl << "... ... WARNING: 1-N SCALING SWITCHED OFF"; }
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".wSOR_N") ) {
src/libctp/calculators/emultipole.h:            _wSOR_N = opt->get(key+".wSOR_N").as< float >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".wSOR_C") ) {
src/libctp/calculators/emultipole.h:            _wSOR_C = opt->get(key+".wSOR_C").as< float >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".maxiter") ) {
src/libctp/calculators/emultipole.h:            _maxIter = opt->get(key+".maxiter").as< int >();
src/libctp/calculators/emultipole.h:        if ( opt->exists(key+".tolerance") ) {
src/libctp/calculators/emultipole.h:            _epsTol = opt->get(key+".tolerance").as< double >();
src/libctp/calculators/emultipole.h:    if (!top->isEStatified()) { this->EStatify(top, opt); }
src/libctp/calculators/emultipole.h:    if (_calcESP && (!_ESPdoSystem))      { this->CalculateESPInput(top); }
src/libctp/calculators/emultipole.h:    if (this->_calcESF)                   { this->CalculateESF(top); }
src/libctp/calculators/emultipole.h:    if (this->_calcAlphaMol)              { this->CalculateAlphaInput(top); }
src/libctp/calculators/emultipole.h:    if (_calcGSP && _dma_input)           { this->CalculateGSPInput(top); }
src/libctp/calculators/emultipole.h: * Creates polar-site templates using mapping file
src/libctp/calculators/emultipole.h: * ... Calls GDMA punch-file parser to load multipoles and polarizabilities
src/libctp/calculators/emultipole.h:    string allocFile = options->get(key+".multipoles").as<string> ();
src/libctp/calculators/emultipole.h:    // Load polar-site indices from XML //
src/libctp/calculators/emultipole.h:    Property allocation; // <- Which polar sites are part of which fragment?
src/libctp/calculators/emultipole.h:    /* --- MULTIPOLES.XML Structure ---
src/libctp/calculators/emultipole.h:        string molName = (*molit)->get("name").as<string> ();
src/libctp/calculators/emultipole.h:        list<Property *> segs = (*molit)->Select(key);
src/libctp/calculators/emultipole.h:            string segName = (*segit)->get("name").as<string> ();
src/libctp/calculators/emultipole.h:            string mpoleFile_n = (*segit)->get("multipoles_n").as<string> ();
src/libctp/calculators/emultipole.h:            if ( (*segit)->exists("multipoles_e")) {
src/libctp/calculators/emultipole.h:                string mpoleFile_e = (*segit)->get("multipoles_e").as<string>();
src/libctp/calculators/emultipole.h:            if ( (*segit)->exists("multipoles_h")) {
src/libctp/calculators/emultipole.h:                string mpoleFile_h = (*segit)->get("multipoles_h").as<string>();
src/libctp/calculators/emultipole.h:            if ( (*segit)->exists("map2md")) {
src/libctp/calculators/emultipole.h:                int map2md = (*segit)->get("map2md").as<int>();
src/libctp/calculators/emultipole.h:            list<Property *> frags = (*segit)->Select(key);
src/libctp/calculators/emultipole.h:                string fragName = (*fragit)->get("name").as<string> ();
src/libctp/calculators/emultipole.h:                string mpoles = (*fragit)->get("mpoles").as<string> ();
src/libctp/calculators/emultipole.h:        string segName = strit->first;
src/libctp/calculators/emultipole.h:        string filename = strit->second;
src/libctp/calculators/emultipole.h:        map_seg_chrgStates[segName][0] = false; // <- negative
src/libctp/calculators/emultipole.h:        map_seg_chrgStates[segName][1] = true;  // <- neutral
src/libctp/calculators/emultipole.h:        map_seg_chrgStates[segName][2] = false; // <- positive
src/libctp/calculators/emultipole.h:    state = -1;
src/libctp/calculators/emultipole.h:            string segName = strit->first;
src/libctp/calculators/emultipole.h:            string filename = strit->second;
src/libctp/calculators/emultipole.h:                polesNeutral[i]->setQs( polesAnion[i]->getQs(state), state );
src/libctp/calculators/emultipole.h:                polesNeutral[i]->setPs( polesAnion[i]->getPs(state), state );
src/libctp/calculators/emultipole.h:            string segName = strit->first;
src/libctp/calculators/emultipole.h:            string filename = strit->second;
src/libctp/calculators/emultipole.h:                polesNeutral[i]->setQs( polesCation[i]->getQs(state), state );
src/libctp/calculators/emultipole.h:                polesNeutral[i]->setPs( polesCation[i]->getPs(state), state );
src/libctp/calculators/emultipole.h:    // Forward information on polar-site templates to topology //
src/libctp/calculators/emultipole.h: * @return Yields polar-site template container
src/libctp/calculators/emultipole.h:    vector<double> Qs; // <- multipole moments
src/libctp/calculators/emultipole.h:    double         P1; // <- dipole polarizability
src/libctp/calculators/emultipole.h:    // ! SP        RB3LYP          6-311+G(d,p)
src/libctp/calculators/emultipole.h:    // C          -4.2414603400   -3.8124751600    0.0017575736    Rank  2
src/libctp/calculators/emultipole.h:    //  -0.3853409355
src/libctp/calculators/emultipole.h:    //  -0.0002321905   0.2401559510   0.6602334308
src/libctp/calculators/emultipole.h:    //  -0.7220625314   0.0004894995  -0.0003833545   0.4526409813  -0.50937399
src/libctp/calculators/emultipole.h:                P1 = -1.;
src/libctp/calculators/emultipole.h:                int id = poleCount++;  // <- starts from 1
src/libctp/calculators/emultipole.h:                newPole->setRank(rank);
src/libctp/calculators/emultipole.h:                newPole->setPos(pos);
src/libctp/calculators/emultipole.h:                P1 = 1e-3 * boost::lexical_cast<double>(split[1]);
src/libctp/calculators/emultipole.h:                thisPole->setPs(P1, state);
src/libctp/calculators/emultipole.h:                int lineRank = int( sqrt(thisPole->getQs(state).size()) + 0.5 );
src/libctp/calculators/emultipole.h:                thisPole->setQs(Qs, state);
src/libctp/calculators/emultipole.h:            string elem = (*pol)->getName();
src/libctp/calculators/emultipole.h:            if      (elem == "C") { alpha = 1.75e-3;  } // <- conversion from
src/libctp/calculators/emultipole.h:            else if (elem == "H") { alpha = 0.696e-3; } //    A³ to nm³ = 10⁻³
src/libctp/calculators/emultipole.h:            else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/calculators/emultipole.h:            else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/calculators/emultipole.h:            else if (elem == "S") { alpha = 2.926e-3; }
src/libctp/calculators/emultipole.h:            //if      (elem == "C") { alpha = 1.334e-3; } // <- conversion from
src/libctp/calculators/emultipole.h:            //else if (elem == "H") { alpha = 0.496e-3; } //    A³ to nm³ = 10⁻³
src/libctp/calculators/emultipole.h:            //else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/calculators/emultipole.h:            //else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/calculators/emultipole.h:            //else if (elem == "S") { alpha = 3.300e-3; }
src/libctp/calculators/emultipole.h:            (*pol)->setPs(alpha, state);
src/libctp/calculators/emultipole.h:                Nx = (Nx >= 0) ? Nx : -Nx;
src/libctp/calculators/emultipole.h:                Ny = (Ny >= 0) ? Ny : -Ny;
src/libctp/calculators/emultipole.h:                Nz = (Nz >= 0) ? Nz : -Nz;
src/libctp/calculators/emultipole.h:    for (sit = this->_map_seg_polarSites.begin();
src/libctp/calculators/emultipole.h:         sit != this->_map_seg_polarSites.end();
src/libctp/calculators/emultipole.h:        vector< PolarSite* > poles = sit->second;
src/libctp/calculators/emultipole.h:            CoM += (*pit)->getPos();
src/libctp/calculators/emultipole.h:            vec newpos = (*pit)->getPos() - CoM;
src/libctp/calculators/emultipole.h:            (*pit)->setPos( newpos );
src/libctp/calculators/emultipole.h:        for (int state = -1; state < 2; ++state) {
src/libctp/calculators/emultipole.h:            bool hasState = _map_seg_chrgStates[sit->first][state+1];
src/libctp/calculators/emultipole.h:                (*pit)->Depolarize();
src/libctp/calculators/emultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:            string filename = "dma_" + sit->first 
src/libctp/calculators/emultipole.h:                q += (*pit)->Q00;
src/libctp/calculators/emultipole.h:                d += (*pit)->Q00 * (*pit)->getPos();
src/libctp/calculators/emultipole.h:                Qxx += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getX()*(*pit)->getPos().getX()
src/libctp/calculators/emultipole.h:                                     -0.5*(*pit)->getPos()*(*pit)->getPos() );
src/libctp/calculators/emultipole.h:                Qyy += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getY()*(*pit)->getPos().getY()
src/libctp/calculators/emultipole.h:                                     -0.5*(*pit)->getPos()*(*pit)->getPos() );
src/libctp/calculators/emultipole.h:                Qzz += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getZ()*(*pit)->getPos().getZ()
src/libctp/calculators/emultipole.h:                                     -0.5*(*pit)->getPos()*(*pit)->getPos() );
src/libctp/calculators/emultipole.h:                Qxy += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getX()*(*pit)->getPos().getY() );
src/libctp/calculators/emultipole.h:                Qxz += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getX()*(*pit)->getPos().getZ() );
src/libctp/calculators/emultipole.h:                Qyz += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getY()*(*pit)->getPos().getZ() );
src/libctp/calculators/emultipole.h:                if ((*pit)->getRank() > 0) {
src/libctp/calculators/emultipole.h:                    d += vec((*pit)->Q1x,(*pit)->Q1y,(*pit)->Q1z);
src/libctp/calculators/emultipole.h:    for (sit = this->_map_seg_polarSites.begin();
src/libctp/calculators/emultipole.h:         sit != this->_map_seg_polarSites.end();
src/libctp/calculators/emultipole.h:        cout << endl << "... ... ... ESP for segment type " << sit->first
src/libctp/calculators/emultipole.h:        vector< PolarSite* > poles = sit->second;
src/libctp/calculators/emultipole.h:            CoM += (*pit)->getPos();
src/libctp/calculators/emultipole.h:            vec newpos = (*pit)->getPos() - CoM;
src/libctp/calculators/emultipole.h:            (*pit)->setPos( newpos );
src/libctp/calculators/emultipole.h:        for (int state = -1; state < 2; ++state) {
src/libctp/calculators/emultipole.h:            bool hasState = _map_seg_chrgStates[sit->first][state+1];
src/libctp/calculators/emultipole.h:                (*pit)->Depolarize();
src/libctp/calculators/emultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:                string chkOutfile = sit->first
src/libctp/calculators/emultipole.h:                    (*pit)->WriteChkLine(out, shift, true,"xyz", 0.04);
src/libctp/calculators/emultipole.h:            // Prepare cube file, for structure sample see cube-file parser
src/libctp/calculators/emultipole.h:            string espOutFile =  sit->first
src/libctp/calculators/emultipole.h:            fprintf(out, "ESP %4s CHARGE %1d \n", (sit->first).c_str(), state);
src/libctp/calculators/emultipole.h:            this->CalculateESP(poles, out);
src/libctp/calculators/emultipole.h:    Segment *seg = top->getSegment(segId);
src/libctp/calculators/emultipole.h:    cout << "... ... ... Selected segment type " << seg->getName() << flush;
src/libctp/calculators/emultipole.h:    vector< PolarSite* > poles = seg->PolarSites();
src/libctp/calculators/emultipole.h:        CoM += (*pit)->getPos();
src/libctp/calculators/emultipole.h:        vec newpos = (*pit)->getPos() - CoM;
src/libctp/calculators/emultipole.h:        (*pit)->setPos( newpos );
src/libctp/calculators/emultipole.h:    for (int state = -1; state < 2; ++state) {
src/libctp/calculators/emultipole.h:        bool hasState = _map_seg_chrgStates[seg->getName()][state+1];
src/libctp/calculators/emultipole.h:            (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:            string chkOutfile = seg->getName()
src/libctp/calculators/emultipole.h:                        + "_rigid_id" + boost::lexical_cast<string>(seg->getId())
src/libctp/calculators/emultipole.h:                (*pit)->WriteChkLine(out, shift, true,"xyz", 0.04);
src/libctp/calculators/emultipole.h:        string espOutFile = seg->getName()
src/libctp/calculators/emultipole.h:                        + "_ID" + boost::lexical_cast<string>(seg->getId())
src/libctp/calculators/emultipole.h:                      seg->getName().c_str(), seg->getId(), state);
src/libctp/calculators/emultipole.h:        this->CalculateESP(poles, out);
src/libctp/calculators/emultipole.h: * ... NOTE Writes output in cube-file format, two header lines should
src/libctp/calculators/emultipole.h:        string elem = (*pit)->_name;
src/libctp/calculators/emultipole.h:                (*pit)->getPos().getX() * NM2BOHR,
src/libctp/calculators/emultipole.h:                (*pit)->getPos().getY() * NM2BOHR,
src/libctp/calculators/emultipole.h:                (*pit)->getPos().getZ() * NM2BOHR);
src/libctp/calculators/emultipole.h:    double int2V = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/emultipole.h:    // Calculate self-energy of configuration (just out of interest)
src/libctp/calculators/emultipole.h:    double E2eV = 1.602176487e-19 * 1e9 * 1/(4*M_PI*8.854187817e-12);
src/libctp/calculators/emultipole.h:         << "Electrostatic self-energy of configuration: "
src/libctp/calculators/emultipole.h:    double int2N_C = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 * 1.000e-18;
src/libctp/calculators/emultipole.h:    intt.open(this->_esfGridFile.c_str());
src/libctp/calculators/emultipole.h:            //  -0.3853409355   0.0004894995  -0.0003833545
src/libctp/calculators/emultipole.h:            //  -0.0002321905   0.2401559510   0.6602334308
src/libctp/calculators/emultipole.h:    this->_esfGrid = gridPoints;
src/libctp/calculators/emultipole.h:    for (sit = this->_map_seg_polarSites.begin();
src/libctp/calculators/emultipole.h:         sit != this->_map_seg_polarSites.end();
src/libctp/calculators/emultipole.h:        cout << endl << "... ... ... ESF for segment " << sit->first << flush;
src/libctp/calculators/emultipole.h:        vector< PolarSite* > poles = sit->second;
src/libctp/calculators/emultipole.h:        for (int state = -1; state < 2; ++state) {
src/libctp/calculators/emultipole.h:            bool hasState = _map_seg_chrgStates[sit->first][state+1];
src/libctp/calculators/emultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:            string esfOutFile =  sit->first
src/libctp/calculators/emultipole.h:             << sit->first << flush;
src/libctp/calculators/emultipole.h:        string alphaOutFile = sit->first + "_" + _alphaOutFile;
src/libctp/calculators/emultipole.h:        if (_map_seg_chrgStates[sit->first][state+1]) {
src/libctp/calculators/emultipole.h:            for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/emultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:            this->CalculateAlphaRigid(sit->second, out, false);
src/libctp/calculators/emultipole.h:        if (_map_seg_chrgStates[sit->first][state+1]) {
src/libctp/calculators/emultipole.h:            for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/emultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:            this->CalculateAlphaRigid(sit->second, out, false);
src/libctp/calculators/emultipole.h:        state = -1;
src/libctp/calculators/emultipole.h:        if (_map_seg_chrgStates[sit->first][state+1]) {
src/libctp/calculators/emultipole.h:            for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/emultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:            this->CalculateAlphaRigid(sit->second, out, false);
src/libctp/calculators/emultipole.h:        for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/emultipole.h:                (*pit)->Charge(0);
src/libctp/calculators/emultipole.h:    double ayx, ayy, ayz;             // |-> Polarizability tensor
src/libctp/calculators/emultipole.h:    double siteU1x, siteU1y, siteU1z; // |-> Molecular ind. dipole
src/libctp/calculators/emultipole.h:    double extFx, extFy, extFz;       // |-> External applied field
src/libctp/calculators/emultipole.h:    // External field in x-direction //
src/libctp/calculators/emultipole.h:        (*pit)->FPx = extFx;
src/libctp/calculators/emultipole.h:        (*pit)->FPy = extFy;
src/libctp/calculators/emultipole.h:        (*pit)->FPz = extFz;
src/libctp/calculators/emultipole.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/emultipole.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/emultipole.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/emultipole.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/emultipole.h:    axx = - siteU1x / extFx;
src/libctp/calculators/emultipole.h:    ayx = - siteU1y / extFx;
src/libctp/calculators/emultipole.h:    azx = - siteU1z / extFx;
src/libctp/calculators/emultipole.h:    // External field in y-direction //
src/libctp/calculators/emultipole.h:        (*pit)->FPx = extFx;
src/libctp/calculators/emultipole.h:        (*pit)->FPy = extFy;
src/libctp/calculators/emultipole.h:        (*pit)->FPz = extFz;
src/libctp/calculators/emultipole.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/emultipole.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/emultipole.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/emultipole.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/emultipole.h:    axy = - siteU1x / extFy;
src/libctp/calculators/emultipole.h:    ayy = - siteU1y / extFy;
src/libctp/calculators/emultipole.h:    azy = - siteU1z / extFy;
src/libctp/calculators/emultipole.h:    // External field in z-direction //
src/libctp/calculators/emultipole.h:        (*pit)->FPx = extFx;
src/libctp/calculators/emultipole.h:        (*pit)->FPy = extFy;
src/libctp/calculators/emultipole.h:        (*pit)->FPz = extFz;
src/libctp/calculators/emultipole.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/emultipole.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/emultipole.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/emultipole.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/emultipole.h:    axz = - siteU1x / extFz;
src/libctp/calculators/emultipole.h:    ayz = - siteU1y / extFz;
src/libctp/calculators/emultipole.h:    azz = - siteU1z / extFz;
src/libctp/calculators/emultipole.h:        SUM_alpha += (*pit)->P1;
src/libctp/calculators/emultipole.h: * Induces dipoles on polar sites in self-consistent manner until converged
src/libctp/calculators/emultipole.h:    int    maxIter = this->_maxIter;
src/libctp/calculators/emultipole.h:    double wSOR = this->_wSOR_N;
src/libctp/calculators/emultipole.h:    double eTOL = this->_epsTol;
src/libctp/calculators/emultipole.h:        (*pit1)->InduceDirect();
src/libctp/calculators/emultipole.h:            (*pit1)->ResetFieldU();
src/libctp/calculators/emultipole.h:        // Calculate higher-order induction field
src/libctp/calculators/emultipole.h:            (*pit1)->Induce(wSOR);
src/libctp/calculators/emultipole.h:        double maxdU = -1;
src/libctp/calculators/emultipole.h:             double dU = (*pit1)->HistdU();
src/libctp/calculators/emultipole.h:        else if (iter == maxIter - 1) {
src/libctp/calculators/emultipole.h: * Equips segments with polar sites using polar-site template container
src/libctp/calculators/emultipole.h: * ... Translates + rotates polar-site into global frame
src/libctp/calculators/emultipole.h:    for (sit = top->Segments().begin();
src/libctp/calculators/emultipole.h:         sit < top->Segments().end();
src/libctp/calculators/emultipole.h:        vector<PolarSite*> poleSites = _map_seg_polarSites.at(seg->getName());
src/libctp/calculators/emultipole.h:        seg->setChrgStates(_map_seg_chrgStates[seg->getName()]);
src/libctp/calculators/emultipole.h:        bool map2md = _map2md[seg->getName()];
src/libctp/calculators/emultipole.h:        for (fit = seg->Fragments().begin();
src/libctp/calculators/emultipole.h:             fit < seg->Fragments().end();
src/libctp/calculators/emultipole.h:            string idkey = frag->getName() + seg->getName()
src/libctp/calculators/emultipole.h:                         + seg->getMolecule()->getName();
src/libctp/calculators/emultipole.h:                if (polesInFrag.size() != frag->Atoms().size()) {
src/libctp/calculators/emultipole.h:                    cout << endl << "ERROR: Segment " << seg->getName() <<
src/libctp/calculators/emultipole.h:                            " Fragment " << frag->getName() <<
src/libctp/calculators/emultipole.h:                PolarSite *templ = poleSites[poleId-1];
src/libctp/calculators/emultipole.h:                PolarSite *newSite = top->AddPolarSite(name);
src/libctp/calculators/emultipole.h:                newSite->ImportFrom(templ);
src/libctp/calculators/emultipole.h:                seg->AddPolarSite(newSite);
src/libctp/calculators/emultipole.h:                frag->AddPolarSite(newSite);
src/libctp/calculators/emultipole.h:                    newSite->Translate(frag->getTransQM2MD());
src/libctp/calculators/emultipole.h:                    newSite->Rotate(frag->getRotQM2MD(), frag->getCoMD());
src/libctp/calculators/emultipole.h:                    vec mdpos = frag->Atoms()[i]->getPos();
src/libctp/calculators/emultipole.h:                    newSite->setPos(mdpos);
src/libctp/calculators/emultipole.h:                    if (newSite->getRank() > 0) {
src/libctp/calculators/emultipole.h:                        " prevents use of higher-rank multipoles. " << endl;
src/libctp/calculators/emultipole.h:    top->setIsEStatified(true);
src/libctp/calculators/emultipole.h:    if (!top->isRigid()) {
src/libctp/calculators/emultipole.h:        bool isRigid = top->Rigidify();
src/libctp/calculators/emultipole.h:    if (top->isEStatified() == false) {
src/libctp/calculators/emultipole.h:        this->DistributeMpoles(top);
src/libctp/calculators/emultipole.h:        cout << endl << "... ... Created " << top->PolarSites().size()
src/libctp/calculators/emultipole.h:        cout << endl << "... ... Writing polar-site coordinates to "
src/libctp/calculators/emultipole.h:        for (sit = top->Segments().begin();
src/libctp/calculators/emultipole.h:             sit < top->Segments().end();
src/libctp/calculators/emultipole.h:            (*sit)->WritePDB(mpPDB, "Multipoles", "MD");
src/libctp/calculators/emultipole.h:        this->CalculateESPRigid(top);
src/libctp/calculators/emultipole.h:        if (this->_calcAlphaMol) {
src/libctp/calculators/emultipole.h:        if (this->_calcESP) {
src/libctp/calculators/emultipole.h:        if (this->_calcESF) {
src/libctp/calculators/emultipole.h:        if (this->_dma_input) {
src/libctp/calculators/emultipole.h:                "Frame" + boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/emultipole.h:        for (sit = top->Segments().begin();
src/libctp/calculators/emultipole.h:             sit < top->Segments().end();
src/libctp/calculators/emultipole.h:            vector< PolarSite* > poles = (*sit)->PolarSites();
src/libctp/calculators/emultipole.h:            cout << "\r... ... ... Segment " << (*sit)->getId() << " " << flush;
src/libctp/calculators/emultipole.h:            fprintf(out, "%4d %4s ", (*sit)->getId(),(*sit)->getName().c_str());
src/libctp/calculators/emultipole.h:            if ( (*sit)->hasChrgState(state) ) {
src/libctp/calculators/emultipole.h:                    (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:                this->CalculateAlphaRigid(poles, out, true);
src/libctp/calculators/emultipole.h:            state = -1;
src/libctp/calculators/emultipole.h:            if ( (*sit)->hasChrgState(state) ) {
src/libctp/calculators/emultipole.h:                    (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:                this->CalculateAlphaRigid(poles, out, true);
src/libctp/calculators/emultipole.h:            if ( (*sit)->hasChrgState(state) ) {
src/libctp/calculators/emultipole.h:                    (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:                this->CalculateAlphaRigid(poles, out, true);
src/libctp/calculators/emultipole.h:                (*pit)->Charge(0);
src/libctp/calculators/emultipole.h:    if (this->_calcGSP) {
src/libctp/calculators/emultipole.h:            Segment *seg = top->getSegment(i);
src/libctp/calculators/emultipole.h:            for (pit = seg->PolarSites().begin(); 
src/libctp/calculators/emultipole.h:                 pit < seg->PolarSites().end();
src/libctp/calculators/emultipole.h:                (*pit)->Charge(0);
src/libctp/calculators/emultipole.h:                (*pit)->Translate(-1*seg->getPos());
src/libctp/calculators/emultipole.h:                q += (*pit)->Q00;
src/libctp/calculators/emultipole.h:                d += (*pit)->Q00 * (*pit)->getPos();
src/libctp/calculators/emultipole.h:                Qxx += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getX()*(*pit)->getPos().getX()
src/libctp/calculators/emultipole.h:                                     -0.5*(*pit)->getPos()*(*pit)->getPos() );
src/libctp/calculators/emultipole.h:                Qyy += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getY()*(*pit)->getPos().getY()
src/libctp/calculators/emultipole.h:                                     -0.5*(*pit)->getPos()*(*pit)->getPos() );
src/libctp/calculators/emultipole.h:                Qzz += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getZ()*(*pit)->getPos().getZ()
src/libctp/calculators/emultipole.h:                                     -0.5*(*pit)->getPos()*(*pit)->getPos() );
src/libctp/calculators/emultipole.h:                Qxy += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getX()*(*pit)->getPos().getY() );
src/libctp/calculators/emultipole.h:                Qxz += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getX()*(*pit)->getPos().getZ() );
src/libctp/calculators/emultipole.h:                Qyz += (*pit)->Q00 * ( 1.5*(*pit)->getPos().getY()*(*pit)->getPos().getZ() );
src/libctp/calculators/emultipole.h:                if ((*pit)->getRank() > 0) {
src/libctp/calculators/emultipole.h:                    d += vec((*pit)->Q1x,(*pit)->Q1y,(*pit)->Q1z);
src/libctp/calculators/emultipole.h:                (*pit)->Translate(+1*seg->getPos());
src/libctp/calculators/emultipole.h:            double prj_r = gsp_n * seg->getPos();
src/libctp/calculators/emultipole.h:    _nextSite = top->Segments().begin();
src/libctp/calculators/emultipole.h:    for ( ; (*_nextSite)->getId() != this->_firstSeg &&
src/libctp/calculators/emultipole.h:              _nextSite < top->Segments().end(); ++_nextSite) { ; }
src/libctp/calculators/emultipole.h:        siteOps[id]->InitSlotData(top);
src/libctp/calculators/emultipole.h:        siteOps[id]->Start();
src/libctp/calculators/emultipole.h:        siteOps[id]->WaitDone();
src/libctp/calculators/emultipole.h:                          + boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/emultipole.h:        for (sit = top->Segments().begin();
src/libctp/calculators/emultipole.h:             sit < top->Segments().end();
src/libctp/calculators/emultipole.h:            if ((*sit)->getId() < _firstSeg ) { continue; }
src/libctp/calculators/emultipole.h:            fprintf(out, "%4d ", (*sit)->getId() );
src/libctp/calculators/emultipole.h:            fprintf(out, "%4s ", (*sit)->getName().c_str() );
src/libctp/calculators/emultipole.h:            if ((*sit)->hasChrgState(0)) {
src/libctp/calculators/emultipole.h:                fprintf(out, "   0 %3.8f   ", (*sit)->getEMpoles(0) );
src/libctp/calculators/emultipole.h:            if ((*sit)->hasChrgState(-1)) {
src/libctp/calculators/emultipole.h:                fprintf(out, "  -1 %3.8f   ", (*sit)->getEMpoles(-1) );
src/libctp/calculators/emultipole.h:            if ((*sit)->hasChrgState(+1)) {
src/libctp/calculators/emultipole.h:                fprintf(out, "  +1 %3.8f   ", (*sit)->getEMpoles(+1) );
src/libctp/calculators/emultipole.h:            if ((*sit)->hasChrgState(0)) {
src/libctp/calculators/emultipole.h:                fprintf(out, "   0 %3d   ", _log_seg_iter[(*sit)->getId()][1]);
src/libctp/calculators/emultipole.h:            if ((*sit)->hasChrgState(-1)) {
src/libctp/calculators/emultipole.h:                fprintf(out, "  -1 %3d   ", _log_seg_iter[(*sit)->getId()][0]);
src/libctp/calculators/emultipole.h:            if ((*sit)->hasChrgState(+1)) {
src/libctp/calculators/emultipole.h:                fprintf(out, "  +1 %3d   ", _log_seg_iter[(*sit)->getId()][2]);
src/libctp/calculators/emultipole.h:                    _log_seg_sphereSize[(*sit)->getId()]);
src/libctp/calculators/emultipole.h:                    _log_seg_com[(*sit)->getId()].getX(),
src/libctp/calculators/emultipole.h:                    _log_seg_com[(*sit)->getId()].getY(),
src/libctp/calculators/emultipole.h:                    _log_seg_com[(*sit)->getId()].getZ());            
src/libctp/calculators/emultipole.h:            if ( (*sit)->getId() == _lastSeg ) { break; }
src/libctp/calculators/emultipole.h:    this->PostProcess(top);
src/libctp/calculators/emultipole.h:    if (_nextSite == top->Segments().end()) {
src/libctp/calculators/emultipole.h:    else if ((*_nextSite)->getId() > _lastSeg && _lastSeg > 0) {
src/libctp/calculators/emultipole.h:             << workOnThis->getId() << flush;
src/libctp/calculators/emultipole.h:        _seg = _master->RequestNextSite(_id, _top);
src/libctp/calculators/emultipole.h:        else { this->EvalSite(_top, _seg); }
src/libctp/calculators/emultipole.h:    _polarSites.resize(top->Segments().size());
src/libctp/calculators/emultipole.h:    assert(top->Segments().size() == _polarSites.size());
src/libctp/calculators/emultipole.h:    for (sitRef = top->Segments().begin(), sitNew = _polarSites.begin();
src/libctp/calculators/emultipole.h:         sitRef < top->Segments().end();
src/libctp/calculators/emultipole.h:        (*sitNew).resize((*sitRef)->PolarSites().size());
src/libctp/calculators/emultipole.h:        for (pitRef = (*sitRef)->PolarSites().begin(),
src/libctp/calculators/emultipole.h:             pitRef < (*sitRef)->PolarSites().end();
src/libctp/calculators/emultipole.h:            (*pitNew)->ImportFrom(*pitRef, "full");
src/libctp/calculators/emultipole.h:            (*pitNew)->Charge(0);
src/libctp/calculators/emultipole.h: * ... Determine polarization sphere via cut-off
src/libctp/calculators/emultipole.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/emultipole.h:    this->_segsPolSphere.clear(); // <- Segments    within cutoff
src/libctp/calculators/emultipole.h:    this->_segsOutSphere.clear(); // <- Segments    within cutoff1, cutoff2
src/libctp/calculators/emultipole.h:    this->_polsPolSphere.clear(); // <- Polar sites within cutoff
src/libctp/calculators/emultipole.h:    this->_polsOutSphere.clear(); // <- Polar sites within cutoff1, cutoff2
src/libctp/calculators/emultipole.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/emultipole.h:        double r12 = abs(_top->PbShortestConnect((*sit)->getPos(),
src/libctp/calculators/emultipole.h:                                                    seg->getPos()));
src/libctp/calculators/emultipole.h:        if      ( r12 > _master->_cutoff2) { continue; }
src/libctp/calculators/emultipole.h:        else if ( r12 > _master->_cutoff ) {
src/libctp/calculators/emultipole.h:            _polsOutSphere.push_back( _polarSites[(*sit)->getId() - 1] );
src/libctp/calculators/emultipole.h:            _polsPolSphere.push_back( _polarSites[(*sit)->getId() - 1] );
src/libctp/calculators/emultipole.h://        (*sit)->WritePDB(out, "Multipoles", "");
src/libctp/calculators/emultipole.h:    if (_master->_maverick) {
src/libctp/calculators/emultipole.h:    this->Depolarize();
src/libctp/calculators/emultipole.h:            (*pit)->Depolarize();
src/libctp/calculators/emultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/emultipole.h:        if (_master->_maverick) {
src/libctp/calculators/emultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/emultipole.h:        this->Charge(state);
src/libctp/calculators/emultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/emultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/emultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/emultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/emultipole.h://        string toFile = boost::lexical_cast<string>(_seg->getId())
src/libctp/calculators/emultipole.h://        vec CoM = _seg->getPos();
src/libctp/calculators/emultipole.h://                vec r  = _top->PbShortestConnect((*pit)->getPos(), CoM);
src/libctp/calculators/emultipole.h://                int segId = (*pit)->getSegment()->getId();
src/libctp/calculators/emultipole.h://                vec u = vec( (*pit)->U1x, (*pit)->U1y, (*pit)->U1z );
src/libctp/calculators/emultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/emultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/emultipole.h:        // this->Depolarize(); // OVERRIDE
src/libctp/calculators/emultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/emultipole.h:                (*pit1)->ResetFieldP();
src/libctp/calculators/emultipole.h:                (*pit1)->ResetU1Hist();
src/libctp/calculators/emultipole.h:    state = -1;
src/libctp/calculators/emultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/emultipole.h:        if (_master->_maverick) {
src/libctp/calculators/emultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/emultipole.h:        this->Charge(state);
src/libctp/calculators/emultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/emultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/emultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/emultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/emultipole.h:            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/emultipole.h:        // this->Depolarize(); // OVERRIDE
src/libctp/calculators/emultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/emultipole.h:                (*pit1)->ResetFieldP();
src/libctp/calculators/emultipole.h:                (*pit1)->ResetU1Hist();
src/libctp/calculators/emultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/emultipole.h:        if (_master->_maverick) {
src/libctp/calculators/emultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/emultipole.h:        this->Charge(state);
src/libctp/calculators/emultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/emultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/emultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/emultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/emultipole.h://        string toFile = boost::lexical_cast<string>(_seg->getId())
src/libctp/calculators/emultipole.h://        vec CoM = _seg->getPos();
src/libctp/calculators/emultipole.h://                vec r  = _top->PbShortestConnect((*pit)->getPos(), CoM);
src/libctp/calculators/emultipole.h://                int segId = (*pit)->getSegment()->getId();
src/libctp/calculators/emultipole.h://                vec u = vec( (*pit)->U1x, (*pit)->U1y, (*pit)->U1z );
src/libctp/calculators/emultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/emultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/emultipole.h:        this->Depolarize();
src/libctp/calculators/emultipole.h:    this->_master->_logMutex.Lock();
src/libctp/calculators/emultipole.h:    _master->_log_seg_iter[_seg->getId()] = iters;
src/libctp/calculators/emultipole.h:    _master->_log_seg_sphereSize[_seg->getId()] = _polsPolSphere.size();
src/libctp/calculators/emultipole.h:    _master->_log_seg_com[_seg->getId()] = _seg->getPos();
src/libctp/calculators/emultipole.h:    this->_master->_logMutex.Unlock();
src/libctp/calculators/emultipole.h:    this->Charge(0);
src/libctp/calculators/emultipole.h:    for (pit = _polarSites[_seg->getId()-1].begin();
src/libctp/calculators/emultipole.h:         pit < _polarSites[_seg->getId()-1].end();
src/libctp/calculators/emultipole.h:        (*pit)->Charge(state);
src/libctp/calculators/emultipole.h:    double wSOR = (state == 0) ? _master->_wSOR_N : _master->_wSOR_C;
src/libctp/calculators/emultipole.h:    double eTOL = this->_master->_epsTol;
src/libctp/calculators/emultipole.h:    int    maxI = this->_master->_maxIter;
src/libctp/calculators/emultipole.h:    // Inter-site fields (arising from perm. m'poles) //
src/libctp/calculators/emultipole.h://    cout << endl << "... ... ... 0th-order field" << flush;
src/libctp/calculators/emultipole.h:    // 1st-order induction //
src/libctp/calculators/emultipole.h:                 (*pit1)->InduceDirect();
src/libctp/calculators/emultipole.h:    if (maxI < 0) { maxI = - maxI; }
src/libctp/calculators/emultipole.h:    // Higher-order induction //
src/libctp/calculators/emultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/emultipole.h:        // Intra-site contribution to induction field
src/libctp/calculators/emultipole.h://        cout << " | Intra-Site (" << iter << ")" << flush;
src/libctp/calculators/emultipole.h:        // Inter-site contribution to induction field
src/libctp/calculators/emultipole.h://        cout << " | Inter-Site (" << iter << ")" << flush;
src/libctp/calculators/emultipole.h:                 (*pit1)->Induce(wSOR);
src/libctp/calculators/emultipole.h:        double maxdU = -1;
src/libctp/calculators/emultipole.h:                 double dU = (*pit1)->HistdU();
src/libctp/calculators/emultipole.h:        else if (iter == maxI - 1) {
src/libctp/calculators/emultipole.h:            this->_master->LockCout();
src/libctp/calculators/emultipole.h:                 << _seg->getId() << " - state " << state 
src/libctp/calculators/emultipole.h:            this->_master->UnlockCout();
src/libctp/calculators/emultipole.h://         << " - wSOR " << wSOR
src/libctp/calculators/emultipole.h://         << " - Iterations " << iter << flush;
src/libctp/calculators/emultipole.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/emultipole.h:    vector< PolarSite* > central = _polarSites[ _seg->getId() - 1 ];
src/libctp/calculators/emultipole.h:        int id = (*seg1)->getId();
src/libctp/calculators/emultipole.h:        if (id == _seg->getId()) {
src/libctp/calculators/emultipole.h:        for (pit1 = _polarSites[id-1].begin();
src/libctp/calculators/emultipole.h:             pit1 < _polarSites[id-1].end();
src/libctp/calculators/emultipole.h:    if (_master->_maverick) {
src/libctp/calculators/emultipole.h: * Calculates electrostatic + induction energy of segment up to Q2-Q2
src/libctp/calculators/emultipole.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/emultipole.h:    // Inter-site energy //
src/libctp/calculators/emultipole.h:        //if ( abs(_top->PbShortestConnect((*seg1)->getPos(),_seg->getPos()))
src/libctp/calculators/emultipole.h:        //        > _master->_cutoff) { throw runtime_error("Not this."); }
src/libctp/calculators/emultipole.h:        //     << (*seg1)->getId() << "|" << (*seg2)->getId() << "   " << flush;
src/libctp/calculators/emultipole.h:            //(*pit1)->PrintInfo(cout);
src/libctp/calculators/emultipole.h:            //(*pit2)->PrintInfo(cout);
src/libctp/calculators/emultipole.h:    // Intra-site energy //
src/libctp/calculators/emultipole.h:    // Outer-Shell energy //
src/libctp/calculators/emultipole.h:    vector< PolarSite* > central = _polarSites[ _seg->getId() - 1 ];
src/libctp/calculators/emultipole.h:    if (_master->_maverick) {
src/libctp/calculators/emultipole.h:            (*pit)->Depolarize();
src/libctp/calculators/emultipole.h:    e12  = pol.getPos() - r;
src/libctp/calculators/emultipole.h:    rbx = - e12.getX();
src/libctp/calculators/emultipole.h:    rby = - e12.getY();
src/libctp/calculators/emultipole.h:    rbz = - e12.getZ();
src/libctp/calculators/emultipole.h:    e12  = pol.getPos() - r;
src/libctp/calculators/emultipole.h:        rbx = - rax;
src/libctp/calculators/emultipole.h:        rby = - ray;
src/libctp/calculators/emultipole.h:        rbz = - raz;
src/libctp/calculators/emultipole.h:    // Field generated by rank-0 m'pole
src/libctp/calculators/emultipole.h:    // Field generated by rank-1 m'pole
src/libctp/calculators/emultipole.h:    // Field generated by rank-2 m'pole
src/libctp/calculators/emultipole.h: * Used in molecular-polarizability calculator (initialize stage)
src/libctp/calculators/emultipole.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/emultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/emultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/emultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/emultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/emultipole.h:        rbx = - rax;
src/libctp/calculators/emultipole.h:        rby = - ray;
src/libctp/calculators/emultipole.h:        rbz = - raz;
src/libctp/calculators/emultipole.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/emultipole.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/emultipole.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/emultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/emultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/emultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/emultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/emultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/emultipole.h:        rbx = - rax;
src/libctp/calculators/emultipole.h:        rby = - ray;
src/libctp/calculators/emultipole.h:        rbz = - raz;
src/libctp/calculators/emultipole.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/emultipole.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/emultipole.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/emultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/emultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/emultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/emultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/emultipole.h:        rbx = - rax;
src/libctp/calculators/emultipole.h:        rby = - ray;
src/libctp/calculators/emultipole.h:        rbz = - raz;
src/libctp/calculators/emultipole.h:    // Fields generated by rank-0 m'poles
src/libctp/calculators/emultipole.h:    // Fields generated by rank-1 m'poles
src/libctp/calculators/emultipole.h:    // Fields generated by rank-2 m'poles
src/libctp/calculators/emultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/emultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/emultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/emultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/emultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/emultipole.h:        rbx = - rax;
src/libctp/calculators/emultipole.h:        rby = - ray;
src/libctp/calculators/emultipole.h:        rbz = - raz;
src/libctp/calculators/emultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/emultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/emultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/emultipole.h:    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
src/libctp/calculators/emultipole.h:    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
src/libctp/calculators/emultipole.h:    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
src/libctp/calculators/emultipole.h:    //cout << "seg2  " << pol2.getSegment()->getId() << endl;    
src/libctp/calculators/emultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/emultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/emultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/emultipole.h:        rbx = - rax;
src/libctp/calculators/emultipole.h:        rby = - ray;
src/libctp/calculators/emultipole.h:        rbz = - raz;
src/libctp/calculators/emultipole.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/emultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/emultipole.h:        //cout << "E up to q <-> q " << E << endl;
src/libctp/calculators/emultipole.h:        //cout << "E up to q <-> d " << E << endl;
src/libctp/calculators/emultipole.h:        //cout << "E up to q <-> Q " << E << endl;
src/libctp/calculators/emultipole.h:        //cout << "E up to d <-> d " << E << endl;
src/libctp/calculators/emultipole.h:        //cout << "E up to d <-> Q " << E << endl;
src/libctp/calculators/emultipole.h:        //cout << "E up to Q <-> Q " << E << endl;
src/libctp/calculators/emultipole.h: * Designed for use in ESP calculator (init. stage). Only for error-checking.
src/libctp/calculators/emultipole.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/emultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/emultipole.h:        rbx = - rax;
src/libctp/calculators/emultipole.h:        rby = - ray;
src/libctp/calculators/emultipole.h:        rbz = - raz;
src/libctp/calculators/emultipole.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/emultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/emultipole_stdal.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/emultipole_stdal.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/emultipole_stdal.h:    string   Identify() { return "EMultipole (Parallel; Stand-Alone)"; }
src/libctp/calculators/emultipole_stdal.h:    // Sub-Calculators ESP, ESF, MolPol //
src/libctp/calculators/emultipole_stdal.h:        double EP;       //   <- Interaction permanent multipoles (inter-site)
src/libctp/calculators/emultipole_stdal.h:        double EU_INTRA; //   <- Interaction induction multipoles (intra-site)
src/libctp/calculators/emultipole_stdal.h:        double EU_INTER; //   <- Interaction induction multipoles (inter-site)
src/libctp/calculators/emultipole_stdal.h:        double u3;      //  |-> NOTE: Only needed when using Thole model
src/libctp/calculators/emultipole_stdal.h:        double R3;      //  |-> NOTE: reciprocal, i.e. e.g. R3 = 1/(R*R*R)
src/libctp/calculators/emultipole_stdal.h:        inline double lambda3() { return 1 - exp( -a*u3); }
src/libctp/calculators/emultipole_stdal.h:        inline double lambda5() { return 1 - (1 + a*u3) * exp( -a*u3); }
src/libctp/calculators/emultipole_stdal.h:        inline double lambda7() { return 1 - (1 + a*u3 + 0.6*a*a*u3*u3) * exp( -a*u3); }
src/libctp/calculators/emultipole_stdal.h:        inline double lambda9() { return 1 - (1 + a*u3 + (18*a*a*u3*u3 + 9*a*a*a*u3*u3*u3)/35) * exp( -a*u3); }
src/libctp/calculators/emultipole_stdal.h:        inline double T20_00()  { return R3 * 0.5 * (3 * raz*raz - 1); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22c_00() { return R3 * 0.5 * sqrt(3) * (rax*rax - ray*ray); }
src/libctp/calculators/emultipole_stdal.h:        inline double T00_20()  { return R3 * 0.5 * (3 * rbz*rbz - 1); }
src/libctp/calculators/emultipole_stdal.h:        inline double T00_22c() { return R3 * 0.5 * sqrt(3) * (rbx*rbx - rby*rby); }
src/libctp/calculators/emultipole_stdal.h:        inline double T20_1x()  { return R4 * 0.5 * (15*raz*raz*rbx + 6*raz*czx - 3*rbx); }
src/libctp/calculators/emultipole_stdal.h:        inline double T20_1y()  { return R4 * 0.5 * (15*raz*raz*rby + 6*raz*czy - 3*rby); }
src/libctp/calculators/emultipole_stdal.h:        inline double T20_1z()  { return R4 * 0.5 * (15*raz*raz*rbz + 6*raz*czz - 3*rbz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22c_1x() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbx + 2*rax*cxx - 2*ray*cyx); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22c_1y() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rby + 2*rax*cxy - 2*ray*cyy); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22c_1z() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbz + 2*rax*cxz - 2*ray*cyz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T1x_20()  { return R4 * 0.5 * (15*rbz*rbz*rax + 6*rbz*cxz - 3*rax); }
src/libctp/calculators/emultipole_stdal.h:        inline double T1y_20()  { return R4 * 0.5 * (15*rbz*rbz*ray + 6*rbz*cyz - 3*ray); }
src/libctp/calculators/emultipole_stdal.h:        inline double T1z_20()  { return R4 * 0.5 * (15*rbz*rbz*raz + 6*rbz*czz - 3*raz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T1x_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*rax + 2*rbx*cxx - 2*rby*cxy); }
src/libctp/calculators/emultipole_stdal.h:        inline double T1y_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*ray + 2*rbx*cyx - 2*rby*cyy); }
src/libctp/calculators/emultipole_stdal.h:        inline double T1z_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*raz + 2*rbx*czx - 2*rby*czy); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU20_1x()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbx + lambda5()*(6*raz*czx - 3*rbx)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU20_1y()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rby + lambda5()*(6*raz*czy - 3*rby)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU20_1z()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbz + lambda5()*(6*raz*czz - 3*rbz)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU22c_1x() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbx + lambda5()*(2*rax*cxx - 2*ray*cyx)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU22c_1y() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rby + lambda5()*(2*rax*cxy - 2*ray*cyy)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU22c_1z() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbz + lambda5()*(2*rax*cxz - 2*ray*cyz)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU1x_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*rax + lambda5()*(6*rbz*cxz - 3*rax)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU1y_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*ray + lambda5()*(6*rbz*cyz - 3*ray)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU1z_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*raz + lambda5()*(6*rbz*czz - 3*raz)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU1x_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*rax + lambda5()*(2*rbx*cxx - 2*rby*cxy)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU1y_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*ray + lambda5()*(2*rbx*cyx - 2*rby*cyy)); }
src/libctp/calculators/emultipole_stdal.h:        inline double TU1z_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*raz + lambda5()*(2*rbx*czx - 2*rby*czy)); }
src/libctp/calculators/emultipole_stdal.h:        inline double T20_20()   { return R5 * 0.75 * (35*raz*raz*rbz*rbz - 5*raz*raz - 5*rbz*rbz + 20*raz*rbz*czz + 2*czz*czz + 1); }
src/libctp/calculators/emultipole_stdal.h:        inline double T20_21c()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rbz - 5*rbx*rbz + 10*raz*rbx*czz + 10*raz*rbz*czx + 2*czx*czz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T20_21s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rby*rbz - 5*rby*rbz + 10*raz*rby*czz + 10*raz*rbz*czy + 2*czy*czz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T20_22c()  { return R5 * 0.25 * sqrt(3) * (35*raz*raz*rbx*rbx - 35*raz*raz*rby*rby - 5*rbx*rbx + 5*rby*rby + 20*raz*rbx*czx - 20*raz*rby*czy + 2*czx*czx - 2*czy*czy); }
src/libctp/calculators/emultipole_stdal.h:        inline double T20_22s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rby - 5*rbx*rby + 10*raz*rbx*czy + 10*raz*rby*czx + 2*czx*czy); }
src/libctp/calculators/emultipole_stdal.h:        inline double T21c_22c() { return R5 * 0.5 * (35*rax*raz*rbx*rbx - 35*rax*raz*rby*rby + 10*rax*rbx*czx - 10*rax*rby*czy + 10*raz*rbx*cxx - 10*raz*rby*cxy + 2*cxx*czx - 2*cxy*czy); }
src/libctp/calculators/emultipole_stdal.h:        inline double T21s_22c() { return R5 * 0.5 * (35*ray*raz*rbx*rbx - 35*ray*raz*rby*rby + 10*ray*rbx*czx - 10*ray*rby*czy + 10*raz*rbx*cyx - 10*raz*rby*cyy + 2*cyx*czx - 2*cyy*czy); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22c_22c() { return R5 * 0.25 * (35*rax*rax*rbx*rbx - 35*rax*rax*rby*rby - 35*ray*ray*rbx*rbx + 35*ray*ray*rby*rby + 20*rax*rbx*cxx - 20*rax*rby*cxy - 20*ray*rbx*cyx + 20*ray*rby*cyy + 2*cxx*cxx - 2*cxy*cxy - 2*cyx*cyx + 2*cyy*cyy); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22c_22s() { return R5 * 0.5 * (35*rax*rax*rbx*rby - 35*ray*ray*rbx*rby + 10*rax*rbx*cxy + 10*rax*rby*cxx - 10*ray*rbx*cyy - 10*ray*rby*cyx + 2*cxx*cxy - 2*cyx*cyy); }
src/libctp/calculators/emultipole_stdal.h:        inline double T21c_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*raz - 5*rax*raz + 10*rbz*rax*czz + 10*rbz*raz*cxz + 2*cxz*czz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T21s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*ray*raz - 5*ray*raz + 10*rbz*ray*czz + 10*rbz*raz*cyz + 2*cyz*czz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22c_20()  { return R5 * 0.25 * sqrt(3) * (35*rbz*rbz*rax*rax - 35*rbz*rbz*ray*ray - 5*rax*rax + 5*ray*ray + 20*rbz*rax*cxz - 20*rbz*ray*cyz + 2*cxz*cxz - 2*cyz*cyz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*ray - 5*rax*ray + 10*rbz*rax*cyz + 10*rbz*ray*cxz + 2*cxz*cyz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22c_21c() { return R5 * 0.5 * (35*rbx*rbz*rax*rax - 35*rbx*rbz*ray*ray + 10*rbx*rax*cxz - 10*rbx*ray*cyz + 10*rbz*rax*cxx - 10*rbz*ray*cyx + 2*cxx*cxz - 2*cyx*cyz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22c_21s() { return R5 * 0.5 * (35*rby*rbz*rax*rax - 35*rby*rbz*ray*ray + 10*rby*rax*cxz - 10*rby*ray*cyz + 10*rbz*rax*cxy - 10*rbz*ray*cyy + 2*cxy*cxz - 2*cyy*cyz); }
src/libctp/calculators/emultipole_stdal.h:        inline double T22s_22c() { return R5 * 0.5 * (35*rbx*rbx*rax*ray - 35*rby*rby*rax*ray + 10*rbx*rax*cyx + 10*rbx*ray*cxx - 10*rby*rax*cyy - 10*rby*ray*cxy + 2*cxx*cyx - 2*cxy*cyy); }
src/libctp/calculators/emultipole_stdal.h:    // Stand-Alone Multipoles
src/libctp/calculators/emultipole_stdal.h:    /* ---- OPTIONS.XML Structure ----
src/libctp/calculators/emultipole_stdal.h:    _polarSites_N = opt->get(key).as< string >();
src/libctp/calculators/emultipole_stdal.h:    _polarSites_C = opt->get(key).as< string >();
src/libctp/calculators/emultipole_stdal.h:    _period = opt->get(key).as< int >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key) ) {
src/libctp/calculators/emultipole_stdal.h:            xmlfile = opt->get(key).as< string >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".induce") ) {
src/libctp/calculators/emultipole_stdal.h:            int induce = opt->get(key+".induce").as< int >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".first") ) {
src/libctp/calculators/emultipole_stdal.h:            _firstSeg = opt->get(key+".first").as< int >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".last") ) {
src/libctp/calculators/emultipole_stdal.h:            _lastSeg = opt->get(key+".last").as< int >();
src/libctp/calculators/emultipole_stdal.h:        else { _lastSeg = -1; }
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/emultipole_stdal.h:            _outFile = opt->get(key+".output").as< string >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".check") ) {
src/libctp/calculators/emultipole_stdal.h:            _checkPolesPDB = opt->get(key+".check").as< string >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".calcESP") ) {
src/libctp/calculators/emultipole_stdal.h:            int calcESP = opt->get(key+".calcESP").as< int >();
src/libctp/calculators/emultipole_stdal.h:            _espCubeFile = opt->get(key+".cube").as< string >();
src/libctp/calculators/emultipole_stdal.h:            _espOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/emultipole_stdal.h:            if (opt->exists(key+".doSystem")) {
src/libctp/calculators/emultipole_stdal.h:                int doSystem = opt->get(key+".doSystem").as< int >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".calcAlpha") ) {
src/libctp/calculators/emultipole_stdal.h:            int calcAlpha = opt->get(key+".calcAlpha").as< int >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".doSystem") ) {
src/libctp/calculators/emultipole_stdal.h:            int doSystem = opt->get(key+".doSystem").as< int >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/emultipole_stdal.h:            string alphaOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".cutoff") ) {
src/libctp/calculators/emultipole_stdal.h:            _cutoff = opt->get(key+".cutoff").as< double >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".expdamp") ) {
src/libctp/calculators/emultipole_stdal.h:            _aDamp = opt->get(key+".expdamp").as< double >();
src/libctp/calculators/emultipole_stdal.h:         if ( opt->exists(key+".scaling") ) {
src/libctp/calculators/emultipole_stdal.h:            _scale1 = opt->get(key+".scaling").as< vector<double> >();
src/libctp/calculators/emultipole_stdal.h:                cout << endl << "... ... WARNING: 1-N SCALING SWITCHED OFF"; }
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".wSOR_N") ) {
src/libctp/calculators/emultipole_stdal.h:            _wSOR_N = opt->get(key+".wSOR_N").as< float >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".wSOR_C") ) {
src/libctp/calculators/emultipole_stdal.h:            _wSOR_C = opt->get(key+".wSOR_C").as< float >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".maxiter") ) {
src/libctp/calculators/emultipole_stdal.h:            _maxIter = opt->get(key+".maxiter").as< int >();
src/libctp/calculators/emultipole_stdal.h:        if ( opt->exists(key+".tolerance") ) {
src/libctp/calculators/emultipole_stdal.h:            _epsTol = opt->get(key+".tolerance").as< double >();
src/libctp/calculators/emultipole_stdal.h: * @return Yields polar-site template container
src/libctp/calculators/emultipole_stdal.h:    vector<double> Qs; // <- multipole moments
src/libctp/calculators/emultipole_stdal.h:    double         P1; // <- dipole polarizability
src/libctp/calculators/emultipole_stdal.h:    // ! SP        RB3LYP          6-311+G(d,p)
src/libctp/calculators/emultipole_stdal.h:    // C          -4.2414603400   -3.8124751600    0.0017575736    Rank  2
src/libctp/calculators/emultipole_stdal.h:    //  -0.3853409355
src/libctp/calculators/emultipole_stdal.h:    //  -0.0002321905   0.2401559510   0.6602334308
src/libctp/calculators/emultipole_stdal.h:    //  -0.7220625314   0.0004894995  -0.0003833545   0.4526409813  -0.50937399
src/libctp/calculators/emultipole_stdal.h:                P1 = -1.;
src/libctp/calculators/emultipole_stdal.h:                int id = poleCount++;  // <- starts from 1
src/libctp/calculators/emultipole_stdal.h:                newPole->setRank(rank);
src/libctp/calculators/emultipole_stdal.h:                newPole->setPos(pos);
src/libctp/calculators/emultipole_stdal.h:                P1 = 1e-3 * boost::lexical_cast<double>(split[1]);
src/libctp/calculators/emultipole_stdal.h:                thisPole->setPs(P1, state);
src/libctp/calculators/emultipole_stdal.h:                int lineRank = int( sqrt(thisPole->getQs(state).size()) + 0.5 );
src/libctp/calculators/emultipole_stdal.h:                thisPole->setQs(Qs, state);
src/libctp/calculators/emultipole_stdal.h:            string elem = (*pol)->getName();
src/libctp/calculators/emultipole_stdal.h:            if      (elem == "C") { alpha = 1.75e-3;  } // <- conversion from
src/libctp/calculators/emultipole_stdal.h:            else if (elem == "H") { alpha = 0.696e-3; } //    A³ to nm³ = 10⁻³
src/libctp/calculators/emultipole_stdal.h:            else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/calculators/emultipole_stdal.h:            else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/calculators/emultipole_stdal.h:            else if (elem == "S") { alpha = 2.926e-3; }
src/libctp/calculators/emultipole_stdal.h:            //if      (elem == "C") { alpha = 1.334e-3; } // <- conversion from
src/libctp/calculators/emultipole_stdal.h:            //else if (elem == "H") { alpha = 0.496e-3; } //    A³ to nm³ = 10⁻³
src/libctp/calculators/emultipole_stdal.h:            //else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/calculators/emultipole_stdal.h:            //else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/calculators/emultipole_stdal.h:            //else if (elem == "S") { alpha = 3.300e-3; }
src/libctp/calculators/emultipole_stdal.h:            (*pol)->setPs(alpha, state);
src/libctp/calculators/emultipole_stdal.h:                Nx = (Nx >= 0) ? Nx : -Nx;
src/libctp/calculators/emultipole_stdal.h:                Ny = (Ny >= 0) ? Ny : -Ny;
src/libctp/calculators/emultipole_stdal.h:                Nz = (Nz >= 0) ? Nz : -Nz;
src/libctp/calculators/emultipole_stdal.h: * ... NOTE Writes output in cube-file format, two header lines should
src/libctp/calculators/emultipole_stdal.h:        string elem = (*pit)->_name;
src/libctp/calculators/emultipole_stdal.h:                (*pit)->getPos().getX() * NM2BOHR,
src/libctp/calculators/emultipole_stdal.h:                (*pit)->getPos().getY() * NM2BOHR,
src/libctp/calculators/emultipole_stdal.h:                (*pit)->getPos().getZ() * NM2BOHR);
src/libctp/calculators/emultipole_stdal.h:    double int2V = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/emultipole_stdal.h:    // Calculate self-energy of configuration (just out of interest)
src/libctp/calculators/emultipole_stdal.h:    double E2eV = 1.602176487e-19 * 1e9 * 1/(4*M_PI*8.854187817e-12);
src/libctp/calculators/emultipole_stdal.h:         << "Electrostatic self-energy of configuration: "
src/libctp/calculators/emultipole_stdal.h:    double ayx, ayy, ayz;             // |-> Polarizability tensor
src/libctp/calculators/emultipole_stdal.h:    double siteU1x, siteU1y, siteU1z; // |-> Molecular ind. dipole
src/libctp/calculators/emultipole_stdal.h:    double extFx, extFy, extFz;       // |-> External applied field
src/libctp/calculators/emultipole_stdal.h:    // External field in x-direction //
src/libctp/calculators/emultipole_stdal.h:        (*pit)->FPx = extFx;
src/libctp/calculators/emultipole_stdal.h:        (*pit)->FPy = extFy;
src/libctp/calculators/emultipole_stdal.h:        (*pit)->FPz = extFz;
src/libctp/calculators/emultipole_stdal.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/emultipole_stdal.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/emultipole_stdal.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/emultipole_stdal.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/emultipole_stdal.h:    axx = - siteU1x / extFx;
src/libctp/calculators/emultipole_stdal.h:    ayx = - siteU1y / extFx;
src/libctp/calculators/emultipole_stdal.h:    azx = - siteU1z / extFx;
src/libctp/calculators/emultipole_stdal.h:    // External field in y-direction //
src/libctp/calculators/emultipole_stdal.h:        (*pit)->FPx = extFx;
src/libctp/calculators/emultipole_stdal.h:        (*pit)->FPy = extFy;
src/libctp/calculators/emultipole_stdal.h:        (*pit)->FPz = extFz;
src/libctp/calculators/emultipole_stdal.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/emultipole_stdal.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/emultipole_stdal.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/emultipole_stdal.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/emultipole_stdal.h:    axy = - siteU1x / extFy;
src/libctp/calculators/emultipole_stdal.h:    ayy = - siteU1y / extFy;
src/libctp/calculators/emultipole_stdal.h:    azy = - siteU1z / extFy;
src/libctp/calculators/emultipole_stdal.h:    // External field in z-direction //
src/libctp/calculators/emultipole_stdal.h:        (*pit)->FPx = extFx;
src/libctp/calculators/emultipole_stdal.h:        (*pit)->FPy = extFy;
src/libctp/calculators/emultipole_stdal.h:        (*pit)->FPz = extFz;
src/libctp/calculators/emultipole_stdal.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/emultipole_stdal.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/emultipole_stdal.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/emultipole_stdal.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/emultipole_stdal.h:    axz = - siteU1x / extFz;
src/libctp/calculators/emultipole_stdal.h:    ayz = - siteU1y / extFz;
src/libctp/calculators/emultipole_stdal.h:    azz = - siteU1z / extFz;
src/libctp/calculators/emultipole_stdal.h:        SUM_alpha += (*pit)->P1;
src/libctp/calculators/emultipole_stdal.h: * Induces dipoles on polar sites in self-consistent manner until converged
src/libctp/calculators/emultipole_stdal.h:    int    maxIter = this->_maxIter;
src/libctp/calculators/emultipole_stdal.h:    double wSOR = this->_wSOR_N;
src/libctp/calculators/emultipole_stdal.h:    double eTOL = this->_epsTol;
src/libctp/calculators/emultipole_stdal.h:        (*pit1)->InduceDirect();
src/libctp/calculators/emultipole_stdal.h:            (*pit1)->ResetFieldU();
src/libctp/calculators/emultipole_stdal.h:        // Calculate higher-order induction field
src/libctp/calculators/emultipole_stdal.h:            (*pit1)->Induce(wSOR);
src/libctp/calculators/emultipole_stdal.h:        double maxdU = -1;
src/libctp/calculators/emultipole_stdal.h:             double dU = (*pit1)->HistdU();
src/libctp/calculators/emultipole_stdal.h:        else if (iter == maxIter - 1) {
src/libctp/calculators/emultipole_stdal.h: * Equips segments with polar sites using polar-site template container
src/libctp/calculators/emultipole_stdal.h: * ... Translates + rotates polar-site into global frame
src/libctp/calculators/emultipole_stdal.h:    vector< PolarSite* > poles = this->ParseGdmaFile(_polarSites_N, 0);
src/libctp/calculators/emultipole_stdal.h:    vector< PolarSite* > poles_C = this->ParseGdmaFile(_polarSites_C, state);
src/libctp/calculators/emultipole_stdal.h:        poles[i]->setQs( poles_C[i]->getQs(state), state );
src/libctp/calculators/emultipole_stdal.h:        poles[i]->setPs( poles_C[i]->getPs(state), state );
src/libctp/calculators/emultipole_stdal.h:    int chunkId = -1;
src/libctp/calculators/emultipole_stdal.h:            if (chunks[i][p]->getName() != "S") {
src/libctp/calculators/emultipole_stdal.h:                CoM += (chunks[i][p])->getPos();
src/libctp/calculators/emultipole_stdal.h:    this->DistributeMpoles(top);
src/libctp/calculators/emultipole_stdal.h:        cout << endl << "... ... Writing polar-site coordinates to "
src/libctp/calculators/emultipole_stdal.h:                 int id = (*pol)->getId() % 100000;
src/libctp/calculators/emultipole_stdal.h:                 string name =  (*pol)->getName();
src/libctp/calculators/emultipole_stdal.h:                 vec position = (*pol)->getPos();
src/libctp/calculators/emultipole_stdal.h:        if (this->_calcAlphaMol) {
src/libctp/calculators/emultipole_stdal.h:        if (this->_calcESP) {
src/libctp/calculators/emultipole_stdal.h:                "Frame" + boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/emultipole_stdal.h:        for (sit = top->Segments().begin();
src/libctp/calculators/emultipole_stdal.h:             sit < top->Segments().end();
src/libctp/calculators/emultipole_stdal.h:            vector< PolarSite* > poles = (*sit)->PolarSites();
src/libctp/calculators/emultipole_stdal.h:            cout << "\r... ... ... Segment " << (*sit)->getId() << "   ";
src/libctp/calculators/emultipole_stdal.h:            this->CalculateAlpha(poles, out, true);
src/libctp/calculators/emultipole_stdal.h:    for ( ; _nextSite < this->_firstSeg; ++_nextSite) { ; }
src/libctp/calculators/emultipole_stdal.h:        siteOps[id]->InitSlotData(top);
src/libctp/calculators/emultipole_stdal.h:        siteOps[id]->Start();
src/libctp/calculators/emultipole_stdal.h:        siteOps[id]->WaitDone();
src/libctp/calculators/emultipole_stdal.h:                          + boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/emultipole_stdal.h:        for (mit_N = this->_chunkEnergiesN.begin(), mit_C = _chunkEnergiesC.begin();
src/libctp/calculators/emultipole_stdal.h:            assert(mit_N->first == mit_C->first);
src/libctp/calculators/emultipole_stdal.h:            fprintf(out, "%4d ", mit_N->first );
src/libctp/calculators/emultipole_stdal.h:            fprintf(out, "   0 %3.8f   ", mit_N->second );
src/libctp/calculators/emultipole_stdal.h:            fprintf(out, "  +1 %3.8f   ", mit_C->second );
src/libctp/calculators/emultipole_stdal.h:        workOnThis = -1;
src/libctp/calculators/emultipole_stdal.h:        workOnThis = -1;
src/libctp/calculators/emultipole_stdal.h:        _seg = _master->RequestNextSite(_id, _top);
src/libctp/calculators/emultipole_stdal.h:        if (_seg == -1) { break; }
src/libctp/calculators/emultipole_stdal.h:        else { this->EvalSite(_top, _seg); }
src/libctp/calculators/emultipole_stdal.h:    _polarSites.resize(_master->_chunks.size());
src/libctp/calculators/emultipole_stdal.h:    _chunkCoMs = _master->_chunkCoMs;
src/libctp/calculators/emultipole_stdal.h:    assert(_master->_chunks.size() == _polarSites.size());
src/libctp/calculators/emultipole_stdal.h:    for (sitRef = _master->_chunks.begin(), sitNew = _polarSites.begin();
src/libctp/calculators/emultipole_stdal.h:         sitRef < _master->_chunks.end();
src/libctp/calculators/emultipole_stdal.h:            (*pitNew)->ImportFrom(*pitRef, "full");
src/libctp/calculators/emultipole_stdal.h:            (*pitNew)->Charge(0);
src/libctp/calculators/emultipole_stdal.h: * ... Determine polarization sphere via cut-off
src/libctp/calculators/emultipole_stdal.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/emultipole_stdal.h:    this->_segsPolSphere.clear(); // <- Segments within cutoff
src/libctp/calculators/emultipole_stdal.h:    this->_polsPolSphere.clear(); // <- Polar sites within cutoff
src/libctp/calculators/emultipole_stdal.h:    vec thisCoM = _chunkCoMs[seg-1];
src/libctp/calculators/emultipole_stdal.h:    for (int i = 0; i < this->_chunkCoMs.size(); ++i) {
src/libctp/calculators/emultipole_stdal.h:        if ( abs(_top->PbShortestConnect(thisCoM,_chunkCoMs[i]))
src/libctp/calculators/emultipole_stdal.h:                > _master->_cutoff) { continue; }
src/libctp/calculators/emultipole_stdal.h:            _polsPolSphere.push_back( this->_polarSites[i] );
src/libctp/calculators/emultipole_stdal.h:    if (this->_master->_maverick) {
src/libctp/calculators/emultipole_stdal.h:        this->CheckPolarSphere();
src/libctp/calculators/emultipole_stdal.h:    if (_master->_maverick) {
src/libctp/calculators/emultipole_stdal.h:    this->Depolarize();
src/libctp/calculators/emultipole_stdal.h:        if (_master->_maverick) {
src/libctp/calculators/emultipole_stdal.h:        this->Charge(state);
src/libctp/calculators/emultipole_stdal.h:        if (_master->_induce) this->Induce(state);
src/libctp/calculators/emultipole_stdal.h:        double EState = this->Energy(state);
src/libctp/calculators/emultipole_stdal.h:        _master->LockCout();
src/libctp/calculators/emultipole_stdal.h:        _master->_chunkEnergiesC[seg] = int2eV * EState;
src/libctp/calculators/emultipole_stdal.h:        _master->UnlockCout();
src/libctp/calculators/emultipole_stdal.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/emultipole_stdal.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/emultipole_stdal.h:        this->Depolarize();
src/libctp/calculators/emultipole_stdal.h:    state = -1;
src/libctp/calculators/emultipole_stdal.h:        if (_master->_maverick) {
src/libctp/calculators/emultipole_stdal.h:        this->Charge(state);
src/libctp/calculators/emultipole_stdal.h:        if (_master->_induce) this->Induce(state);
src/libctp/calculators/emultipole_stdal.h:        double EState = this->Energy(state);
src/libctp/calculators/emultipole_stdal.h:            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/emultipole_stdal.h:        this->Depolarize();
src/libctp/calculators/emultipole_stdal.h:        if (_master->_maverick) {
src/libctp/calculators/emultipole_stdal.h:        this->Charge(state);
src/libctp/calculators/emultipole_stdal.h:        if (_master->_induce) this->Induce(state);
src/libctp/calculators/emultipole_stdal.h:        double EState = this->Energy(state);
src/libctp/calculators/emultipole_stdal.h:        _master->LockCout();
src/libctp/calculators/emultipole_stdal.h:        _master->_chunkEnergiesN[seg] = int2eV * EState;
src/libctp/calculators/emultipole_stdal.h:        _master->UnlockCout();
src/libctp/calculators/emultipole_stdal.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/emultipole_stdal.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/emultipole_stdal.h:        this->Depolarize();
src/libctp/calculators/emultipole_stdal.h:             int id = (*pol)->getId() % 100000;
src/libctp/calculators/emultipole_stdal.h:             string name =  (*pol)->getName();
src/libctp/calculators/emultipole_stdal.h:             vec position = (*pol)->getPos();
src/libctp/calculators/emultipole_stdal.h:    fprintf(mpPDB, "%5d \n\n", _master->_chunkCoMs.size());
src/libctp/calculators/emultipole_stdal.h:    for ( ; chunkId < _master->_chunkCoMs.size(); ++chunkId) {
src/libctp/calculators/emultipole_stdal.h:                _master->_chunkCoMs[chunkId].getX()*10,
src/libctp/calculators/emultipole_stdal.h:                _master->_chunkCoMs[chunkId].getY()*10,
src/libctp/calculators/emultipole_stdal.h:                _master->_chunkCoMs[chunkId].getZ()*10);
src/libctp/calculators/emultipole_stdal.h:    for (pit = _polarSites[_seg-1].begin();
src/libctp/calculators/emultipole_stdal.h:         pit < _polarSites[_seg-1].end();
src/libctp/calculators/emultipole_stdal.h:        (*pit)->Charge(state);
src/libctp/calculators/emultipole_stdal.h:    double wSOR = (state == 0) ? _master->_wSOR_N : _master->_wSOR_C;
src/libctp/calculators/emultipole_stdal.h:    double eTOL = this->_master->_epsTol;
src/libctp/calculators/emultipole_stdal.h:    int    maxI = this->_master->_maxIter;
src/libctp/calculators/emultipole_stdal.h:    // Inter-site fields (arising from perm. m'poles) //
src/libctp/calculators/emultipole_stdal.h://    cout << endl << "... ... ... 0th-order field" << flush;
src/libctp/calculators/emultipole_stdal.h:    // 1st-order induction //
src/libctp/calculators/emultipole_stdal.h:             (*pit1)->InduceDirect();
src/libctp/calculators/emultipole_stdal.h:    // Higher-order induction //
src/libctp/calculators/emultipole_stdal.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/emultipole_stdal.h:        // Intra-site contribution to induction field
src/libctp/calculators/emultipole_stdal.h://        cout << " | Intra-Site (" << iter << ")" << flush;
src/libctp/calculators/emultipole_stdal.h:        // Inter-site contribution to induction field
src/libctp/calculators/emultipole_stdal.h://        cout << " | Inter-Site (" << iter << ")" << flush;
src/libctp/calculators/emultipole_stdal.h:                 (*pit1)->Induce(wSOR);
src/libctp/calculators/emultipole_stdal.h:        double maxdU = -1;
src/libctp/calculators/emultipole_stdal.h:                 double dU = (*pit1)->HistdU();
src/libctp/calculators/emultipole_stdal.h:        else if (iter == maxI - 1) {
src/libctp/calculators/emultipole_stdal.h:            this->_master->LockCout();
src/libctp/calculators/emultipole_stdal.h:                 << _seg << " - state " << state 
src/libctp/calculators/emultipole_stdal.h:            this->_master->UnlockCout();
src/libctp/calculators/emultipole_stdal.h://         << " - wSOR " << wSOR
src/libctp/calculators/emultipole_stdal.h://         << " - Iterations " << iter << flush;
src/libctp/calculators/emultipole_stdal.h: * Calculates electrostatic energy of segment up to Q2-Q2
src/libctp/calculators/emultipole_stdal.h:    // Inter-site energy //
src/libctp/calculators/emultipole_stdal.h:        //if ( abs(_top->PbShortestConnect((*seg1)->getPos(),_seg->getPos()))
src/libctp/calculators/emultipole_stdal.h:        //        > _master->_cutoff) { throw runtime_error("Not this."); }
src/libctp/calculators/emultipole_stdal.h:        //     << (*seg1)->getId() << "|" << (*seg2)->getId() << "   " << flush;
src/libctp/calculators/emultipole_stdal.h:            //(*pit1)->PrintInfo(cout);
src/libctp/calculators/emultipole_stdal.h:            //(*pit2)->PrintInfo(cout);
src/libctp/calculators/emultipole_stdal.h:    // Intra-site energy //
src/libctp/calculators/emultipole_stdal.h:    if (_master->_maverick) {
src/libctp/calculators/emultipole_stdal.h:            (*pit)->Depolarize();
src/libctp/calculators/emultipole_stdal.h:    e12  = pol.getPos() - r;
src/libctp/calculators/emultipole_stdal.h:    rbx = - pol._locX * e12;
src/libctp/calculators/emultipole_stdal.h:    rby = - pol._locY * e12;
src/libctp/calculators/emultipole_stdal.h:    rbz = - pol._locZ * e12;
src/libctp/calculators/emultipole_stdal.h:    e12  = pol.getPos() - r;
src/libctp/calculators/emultipole_stdal.h:        rbx = - rax;
src/libctp/calculators/emultipole_stdal.h:        rby = - ray;
src/libctp/calculators/emultipole_stdal.h:        rbz = - raz;
src/libctp/calculators/emultipole_stdal.h:    // Field generated by rank-0 m'pole
src/libctp/calculators/emultipole_stdal.h:    // Field generated by rank-1 m'pole
src/libctp/calculators/emultipole_stdal.h:    // Field generated by rank-2 m'pole
src/libctp/calculators/emultipole_stdal.h: * Used in molecular-polarizability calculator (initialize stage)
src/libctp/calculators/emultipole_stdal.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/emultipole_stdal.h:    a    = _em->_aDamp;
src/libctp/calculators/emultipole_stdal.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/emultipole_stdal.h://        rby = - pol2._locY * e12;
src/libctp/calculators/emultipole_stdal.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/emultipole_stdal.h:        rbx = - rax;
src/libctp/calculators/emultipole_stdal.h:        rby = - ray;
src/libctp/calculators/emultipole_stdal.h:        rbz = - raz;
src/libctp/calculators/emultipole_stdal.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/emultipole_stdal.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/emultipole_stdal.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/emultipole_stdal.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/emultipole_stdal.h:    a    = _em->_aDamp;
src/libctp/calculators/emultipole_stdal.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/emultipole_stdal.h://        rby = - pol2._locY * e12;
src/libctp/calculators/emultipole_stdal.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/emultipole_stdal.h:        rbx = - rax;
src/libctp/calculators/emultipole_stdal.h:        rby = - ray;
src/libctp/calculators/emultipole_stdal.h:        rbz = - raz;
src/libctp/calculators/emultipole_stdal.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/emultipole_stdal.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/emultipole_stdal.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/emultipole_stdal.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/emultipole_stdal.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/emultipole_stdal.h://        rby = - pol2._locY * e12;
src/libctp/calculators/emultipole_stdal.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/emultipole_stdal.h:        rbx = - rax;
src/libctp/calculators/emultipole_stdal.h:        rby = - ray;
src/libctp/calculators/emultipole_stdal.h:        rbz = - raz;
src/libctp/calculators/emultipole_stdal.h:    // Fields generated by rank-0 m'poles
src/libctp/calculators/emultipole_stdal.h:    // Fields generated by rank-1 m'poles
src/libctp/calculators/emultipole_stdal.h:    // Fields generated by rank-2 m'poles
src/libctp/calculators/emultipole_stdal.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/emultipole_stdal.h:    a    = _em->_aDamp;
src/libctp/calculators/emultipole_stdal.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/emultipole_stdal.h://        rby = - pol2._locY * e12;
src/libctp/calculators/emultipole_stdal.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/emultipole_stdal.h:        rbx = - rax;
src/libctp/calculators/emultipole_stdal.h:        rby = - ray;
src/libctp/calculators/emultipole_stdal.h:        rbz = - raz;
src/libctp/calculators/emultipole_stdal.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/emultipole_stdal.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/emultipole_stdal.h:    a    = _em->_aDamp;
src/libctp/calculators/emultipole_stdal.h:    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
src/libctp/calculators/emultipole_stdal.h:    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
src/libctp/calculators/emultipole_stdal.h:    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
src/libctp/calculators/emultipole_stdal.h:    //cout << "seg2  " << pol2.getSegment()->getId() << endl;    
src/libctp/calculators/emultipole_stdal.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/emultipole_stdal.h://        rby = - pol2._locY * e12;
src/libctp/calculators/emultipole_stdal.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/emultipole_stdal.h:        rbx = - rax;
src/libctp/calculators/emultipole_stdal.h:        rby = - ray;
src/libctp/calculators/emultipole_stdal.h:        rbz = - raz;
src/libctp/calculators/emultipole_stdal.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/emultipole_stdal.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/emultipole_stdal.h:        //cout << "E up to q <-> q " << E << endl;
src/libctp/calculators/emultipole_stdal.h:        //cout << "E up to q <-> d " << E << endl;
src/libctp/calculators/emultipole_stdal.h:        //cout << "E up to q <-> Q " << E << endl;
src/libctp/calculators/emultipole_stdal.h:        //cout << "E up to d <-> d " << E << endl;
src/libctp/calculators/emultipole_stdal.h:        //cout << "E up to d <-> Q " << E << endl;
src/libctp/calculators/emultipole_stdal.h:        //cout << "E up to Q <-> Q " << E << endl;
src/libctp/calculators/emultipole_stdal.h: * Designed for use in ESP calculator (init. stage). Only for error-checking.
src/libctp/calculators/emultipole_stdal.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/emultipole_stdal.h:    a    = _em->_aDamp;
src/libctp/calculators/emultipole_stdal.h:        rbx = - rax;
src/libctp/calculators/emultipole_stdal.h:        rby = - ray;
src/libctp/calculators/emultipole_stdal.h:        rbz = - raz;
src/libctp/calculators/emultipole_stdal.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/emultipole_stdal.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/eoutersphere.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/eoutersphere.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/eoutersphere.cc:    /* ---- OPTIONS.XML Structure -----
src/libctp/calculators/eoutersphere.cc:    _method = opt->get(key+".method").as<string> ();
src/libctp/calculators/eoutersphere.cc:        _lambdaConstant = opt->get(key+".lambdaconst").as<double> ();
src/libctp/calculators/eoutersphere.cc:        _pekarFactor = opt->get(key+".pekar").as<double> ();
src/libctp/calculators/eoutersphere.cc:        _pekarFactor = opt->get(key+".pekar").as<double> ();
src/libctp/calculators/eoutersphere.cc:        _lambdaCutoff = opt->get(key+".cutoff").as<double> ();
src/libctp/calculators/eoutersphere.cc:    this->EStatify(top, opt);
src/libctp/calculators/eoutersphere.cc:    string allocFile = options->get(key+".multipoles").as<string> ();
src/libctp/calculators/eoutersphere.cc:    // Load polar-site indices from XML //
src/libctp/calculators/eoutersphere.cc:    Property allocation; // <- Which polar sites are part of which fragment?
src/libctp/calculators/eoutersphere.cc:    /* --- MULTIPOLES.XML Structure ---
src/libctp/calculators/eoutersphere.cc:        string molName = (*molit)->get("name").as<string> ();
src/libctp/calculators/eoutersphere.cc:        list<Property *> segs = (*molit)->Select(key);
src/libctp/calculators/eoutersphere.cc:            string segName = (*segit)->get("name").as<string> ();
src/libctp/calculators/eoutersphere.cc:            string mpoleFile_n = (*segit)->get("multipoles_n").as<string> ();
src/libctp/calculators/eoutersphere.cc:            if ( (*segit)->exists("multipoles_e")) {
src/libctp/calculators/eoutersphere.cc:                string mpoleFile_e = (*segit)->get("multipoles_e").as<string>();
src/libctp/calculators/eoutersphere.cc:            if ( (*segit)->exists("multipoles_h")) {
src/libctp/calculators/eoutersphere.cc:                string mpoleFile_h = (*segit)->get("multipoles_h").as<string>();
src/libctp/calculators/eoutersphere.cc:            if ( (*segit)->exists("map2md")) {
src/libctp/calculators/eoutersphere.cc:                int map2md = (*segit)->get("map2md").as<int>();
src/libctp/calculators/eoutersphere.cc:            list<Property *> frags = (*segit)->Select(key);
src/libctp/calculators/eoutersphere.cc:                string fragName = (*fragit)->get("name").as<string> ();
src/libctp/calculators/eoutersphere.cc:                string mpoles = (*fragit)->get("mpoles").as<string> ();
src/libctp/calculators/eoutersphere.cc:        string segName = strit->first;
src/libctp/calculators/eoutersphere.cc:        string filename = strit->second;
src/libctp/calculators/eoutersphere.cc:        map_seg_chrgStates[segName][0] = false; // <- negative
src/libctp/calculators/eoutersphere.cc:        map_seg_chrgStates[segName][1] = true;  // <- neutral
src/libctp/calculators/eoutersphere.cc:        map_seg_chrgStates[segName][2] = false; // <- positive
src/libctp/calculators/eoutersphere.cc:    state = -1;
src/libctp/calculators/eoutersphere.cc:            string segName = strit->first;
src/libctp/calculators/eoutersphere.cc:            string filename = strit->second;
src/libctp/calculators/eoutersphere.cc:                polesNeutral[i]->setQs( polesAnion[i]->getQs(state), state );
src/libctp/calculators/eoutersphere.cc:                polesNeutral[i]->setPs( polesAnion[i]->getPs(state), state );
src/libctp/calculators/eoutersphere.cc:            string segName = strit->first;
src/libctp/calculators/eoutersphere.cc:            string filename = strit->second;
src/libctp/calculators/eoutersphere.cc:                polesNeutral[i]->setQs( polesCation[i]->getQs(state), state );
src/libctp/calculators/eoutersphere.cc:                polesNeutral[i]->setPs( polesCation[i]->getPs(state), state );
src/libctp/calculators/eoutersphere.cc:    // Forward information on polar-site templates to topology //
src/libctp/calculators/eoutersphere.cc:    vector<double> Qs; // <- multipole moments
src/libctp/calculators/eoutersphere.cc:    double         P1; // <- dipole polarizability
src/libctp/calculators/eoutersphere.cc:    // ! SP        RB3LYP          6-311+G(d,p)
src/libctp/calculators/eoutersphere.cc:    // C          -4.2414603400   -3.8124751600    0.0017575736    Rank  2
src/libctp/calculators/eoutersphere.cc:    //  -0.3853409355
src/libctp/calculators/eoutersphere.cc:    //  -0.0002321905   0.2401559510   0.6602334308
src/libctp/calculators/eoutersphere.cc:    //  -0.7220625314   0.0004894995  -0.0003833545   0.4526409813  -0.50937399
src/libctp/calculators/eoutersphere.cc:                P1 = -1.;
src/libctp/calculators/eoutersphere.cc:                int id = poleCount++;  // <- starts from 1
src/libctp/calculators/eoutersphere.cc:                newPole->setRank(rank);
src/libctp/calculators/eoutersphere.cc:                newPole->setPos(pos);
src/libctp/calculators/eoutersphere.cc:                P1 = 1e-3 * boost::lexical_cast<double>(split[1]);
src/libctp/calculators/eoutersphere.cc:                thisPole->setPs(P1, state);
src/libctp/calculators/eoutersphere.cc:                int lineRank = int( sqrt(thisPole->getQs(state).size()) + 0.5 );
src/libctp/calculators/eoutersphere.cc:                thisPole->setQs(Qs, state);
src/libctp/calculators/eoutersphere.cc:            string elem = (*pol)->getName();
src/libctp/calculators/eoutersphere.cc:            if      (elem == "C") { alpha = 1.75e-3;  } // <- conversion from
src/libctp/calculators/eoutersphere.cc:            else if (elem == "H") { alpha = 0.696e-3; } //    A³ to nm³ = 10⁻³
src/libctp/calculators/eoutersphere.cc:            else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/calculators/eoutersphere.cc:            else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/calculators/eoutersphere.cc:            else if (elem == "S") { alpha = 2.926e-3; }
src/libctp/calculators/eoutersphere.cc:            //if      (elem == "C") { alpha = 1.334e-3; } // <- conversion from
src/libctp/calculators/eoutersphere.cc:            //else if (elem == "H") { alpha = 0.496e-3; } //    A³ to nm³ = 10⁻³
src/libctp/calculators/eoutersphere.cc:            //else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/calculators/eoutersphere.cc:            //else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/calculators/eoutersphere.cc:            //else if (elem == "S") { alpha = 3.300e-3; }
src/libctp/calculators/eoutersphere.cc:            (*pol)->setPs(alpha, state);
src/libctp/calculators/eoutersphere.cc:    for (sit = top->Segments().begin();
src/libctp/calculators/eoutersphere.cc:         sit < top->Segments().end();
src/libctp/calculators/eoutersphere.cc:        vector<PolarSite*> poleSites = _map_seg_polarSites.at(seg->getName());
src/libctp/calculators/eoutersphere.cc:        seg->setChrgStates(_map_seg_chrgStates[seg->getName()]);
src/libctp/calculators/eoutersphere.cc:        bool map2md = _map2md[seg->getName()];
src/libctp/calculators/eoutersphere.cc:        for (fit = seg->Fragments().begin();
src/libctp/calculators/eoutersphere.cc:             fit < seg->Fragments().end();
src/libctp/calculators/eoutersphere.cc:            string idkey = frag->getName() + seg->getName()
src/libctp/calculators/eoutersphere.cc:                         + seg->getMolecule()->getName();
src/libctp/calculators/eoutersphere.cc:                if (polesInFrag.size() != frag->Atoms().size()) {
src/libctp/calculators/eoutersphere.cc:                    cout << endl << "ERROR: Segment " << seg->getName() <<
src/libctp/calculators/eoutersphere.cc:                            " Fragment " << frag->getName() <<
src/libctp/calculators/eoutersphere.cc:                PolarSite *templ = poleSites[poleId-1];
src/libctp/calculators/eoutersphere.cc:                PolarSite *newSite = top->AddPolarSite(name);
src/libctp/calculators/eoutersphere.cc:                newSite->ImportFrom(templ);
src/libctp/calculators/eoutersphere.cc:                seg->AddPolarSite(newSite);
src/libctp/calculators/eoutersphere.cc:                frag->AddPolarSite(newSite);
src/libctp/calculators/eoutersphere.cc:                    newSite->Translate(frag->getTransQM2MD());
src/libctp/calculators/eoutersphere.cc:                    newSite->Rotate(frag->getRotQM2MD(), frag->getCoMD());
src/libctp/calculators/eoutersphere.cc:                    vec mdpos = frag->Atoms()[i]->getPos();
src/libctp/calculators/eoutersphere.cc:                    newSite->setPos(mdpos);
src/libctp/calculators/eoutersphere.cc:                    if (newSite->getRank() > 0) {
src/libctp/calculators/eoutersphere.cc:                        " prevents use of higher-rank multipoles. " << endl;
src/libctp/calculators/eoutersphere.cc:    if (_nextPair == top->NBList().end()) {
src/libctp/calculators/eoutersphere.cc:             << workOnThis->getId() << flush;
src/libctp/calculators/eoutersphere.cc:    if (!top->isRigid()) {
src/libctp/calculators/eoutersphere.cc:        bool isRigid = top->Rigidify();
src/libctp/calculators/eoutersphere.cc:    if (_method != "constant" && !top->isEStatified()) {
src/libctp/calculators/eoutersphere.cc:        this->DistributeMpoles(top);
src/libctp/calculators/eoutersphere.cc:        cout << endl << "... ... Created " << top->PolarSites().size()
src/libctp/calculators/eoutersphere.cc:    _nextPair = top->NBList().begin();
src/libctp/calculators/eoutersphere.cc:    //for ( ; (*_nextPair)->getId() != this->_firstSeg &&
src/libctp/calculators/eoutersphere.cc:    //          _nextSite < top->Segments().end(); ++_nextSite) { ; }
src/libctp/calculators/eoutersphere.cc:        pairOps[id]->InitSlotData(top);
src/libctp/calculators/eoutersphere.cc:        pairOps[id]->Start();
src/libctp/calculators/eoutersphere.cc:        pairOps[id]->WaitDone();
src/libctp/calculators/eoutersphere.cc:    //if      (_method == "constant")   { this->ConstLambda(top); }
src/libctp/calculators/eoutersphere.cc:    //else if (_method == "spheres")    { this->SpheresLambda(top);}
src/libctp/calculators/eoutersphere.cc:    //else if (_method == "dielectric") { this->DielectricLambda(top); }
src/libctp/calculators/eoutersphere.cc:    if (_master->_method != "constant") {
src/libctp/calculators/eoutersphere.cc:        this->_segsSphere.clear();
src/libctp/calculators/eoutersphere.cc:        this->_polsSphere.clear();
src/libctp/calculators/eoutersphere.cc:        this->_polsPair.clear();
src/libctp/calculators/eoutersphere.cc:        for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/eoutersphere.cc:            // TODO Introduce volume-correction when using cutoff
src/libctp/calculators/eoutersphere.cc:            //if ( abs(_top->PbShortestConnect((*sit)->getPos(), qmpair->getPos()))
src/libctp/calculators/eoutersphere.cc:            //        > _master->_lambdaCutoff) { continue; }
src/libctp/calculators/eoutersphere.cc:            if ( (*sit)->getId() == qmpair->Seg1()->getId() ||
src/libctp/calculators/eoutersphere.cc:                 (*sit)->getId() == qmpair->Seg2()->getId() ) {
src/libctp/calculators/eoutersphere.cc:                 _polsPair.push_back( _polarSites[(*sit)->getId() - 1] );
src/libctp/calculators/eoutersphere.cc:                _polsSphere.push_back( _polarSites[(*sit)->getId() - 1] );
src/libctp/calculators/eoutersphere.cc:        bool hasCation = qmpair->first->hasChrgState(+1)
src/libctp/calculators/eoutersphere.cc:                      && qmpair->second->hasChrgState(+1);
src/libctp/calculators/eoutersphere.cc:        bool hasAnion  = qmpair->first->hasChrgState(-1)
src/libctp/calculators/eoutersphere.cc:                      && qmpair->second->hasChrgState(-1);
src/libctp/calculators/eoutersphere.cc:            this->ResetFields();
src/libctp/calculators/eoutersphere.cc:            this->ChargeDeltaPair(state);
src/libctp/calculators/eoutersphere.cc:            double lOut = this->CalcOuter(top, qmpair, state);
src/libctp/calculators/eoutersphere.cc:            qmpair->setLambdaO(lOut, state);
src/libctp/calculators/eoutersphere.cc:            this->ResetFields();
src/libctp/calculators/eoutersphere.cc:            int state = -1;
src/libctp/calculators/eoutersphere.cc:            this->ResetFields();
src/libctp/calculators/eoutersphere.cc:            this->ChargeDeltaPair(state);
src/libctp/calculators/eoutersphere.cc:            double lOut = this->CalcOuter(top, qmpair, state);
src/libctp/calculators/eoutersphere.cc:            qmpair->setLambdaO(lOut, state);
src/libctp/calculators/eoutersphere.cc:            this->ResetFields();
src/libctp/calculators/eoutersphere.cc:    else if (_master->_method == "constant") {
src/libctp/calculators/eoutersphere.cc:        bool hasCation = qmpair->first->hasChrgState(+1)
src/libctp/calculators/eoutersphere.cc:                      && qmpair->second->hasChrgState(+1);
src/libctp/calculators/eoutersphere.cc:        bool hasAnion  = qmpair->first->hasChrgState(-1)
src/libctp/calculators/eoutersphere.cc:                      && qmpair->second->hasChrgState(-1);
src/libctp/calculators/eoutersphere.cc:            double lOut = _master->_lambdaConstant;
src/libctp/calculators/eoutersphere.cc:            qmpair->setLambdaO(lOut, state);
src/libctp/calculators/eoutersphere.cc:            int state = -1;
src/libctp/calculators/eoutersphere.cc:            double lOut = _master->_lambdaConstant;
src/libctp/calculators/eoutersphere.cc:            qmpair->setLambdaO(lOut, state);
src/libctp/calculators/eoutersphere.cc:    double int2displ = 1/(4*M_PI) * 1.602176487e-19 / 1.000e-18;
src/libctp/calculators/eoutersphere.cc:    //double int2eV   = 8.854187817e-12 *int2N_C*int2N_C /1.602176487e-19;
src/libctp/calculators/eoutersphere.cc:        this->_actor.Field_AT_DUE(*(*pit1), *(*pit2));
src/libctp/calculators/eoutersphere.cc:        dD2dV += (*pit1)->FPx * (*pit1)->FPx +
src/libctp/calculators/eoutersphere.cc:                 (*pit1)->FPy * (*pit1)->FPy +
src/libctp/calculators/eoutersphere.cc:                 (*pit1)->FPz * (*pit1)->FPz;
src/libctp/calculators/eoutersphere.cc:    return 0.5 * _master->_pekarFactor/8.854187817e-12
src/libctp/calculators/eoutersphere.cc:               * top->BoxVolume()*1.000e-27/top->PolarSites().size()
src/libctp/calculators/eoutersphere.cc:               * dD2dV /1.602176487e-19;
src/libctp/calculators/eoutersphere.cc:        (*pit)->ChargeDelta(state, 0);
src/libctp/calculators/eoutersphere.cc:        (*pit)->ChargeDelta(0, state);
src/libctp/calculators/eoutersphere.cc:            (*pit)->ResetFieldP();
src/libctp/calculators/eoutersphere.cc:        _pair = _master->RequestNextPair(_id, _top);
src/libctp/calculators/eoutersphere.cc:        else { this->EvalSite(_top, _pair); }
src/libctp/calculators/eoutersphere.cc:    _polarSites.resize(top->Segments().size());
src/libctp/calculators/eoutersphere.cc:    assert(top->Segments().size() == _polarSites.size());
src/libctp/calculators/eoutersphere.cc:    for (sitRef = top->Segments().begin(), sitNew = _polarSites.begin();
src/libctp/calculators/eoutersphere.cc:         sitRef < top->Segments().end();
src/libctp/calculators/eoutersphere.cc:        (*sitNew).resize((*sitRef)->PolarSites().size());
src/libctp/calculators/eoutersphere.cc:        for (pitRef = (*sitRef)->PolarSites().begin(),
src/libctp/calculators/eoutersphere.cc:             pitRef < (*sitRef)->PolarSites().end();
src/libctp/calculators/eoutersphere.cc:            (*pitNew)->ImportFrom(*pitRef, "full");
src/libctp/calculators/eoutersphere.cc:            (*pitNew)->Charge(0);
src/libctp/calculators/eoutersphere.cc:    for (pit = top->NBList().begin(); pit != top->NBList().end(); pit++) {
src/libctp/calculators/eoutersphere.cc:        assert (false); // TODO e, h calc. // pair->setLambdaO(_lambdaConstant);
src/libctp/calculators/eoutersphere.cc:    double e = 1.602176487e-19;
src/libctp/calculators/eoutersphere.cc:    double EPS0 = 8.85418782e-12;
src/libctp/calculators/eoutersphere.cc:    double NM = 1e-09;    
src/libctp/calculators/eoutersphere.cc:    for (pit = top->NBList().begin(); pit != top->NBList().end(); pit++) {
src/libctp/calculators/eoutersphere.cc:        throw std::runtime_error(" EOutersphere -> Need to read in radii");
src/libctp/calculators/eoutersphere.cc:                                      - 1. / ( pair->Dist()*NM ));
src/libctp/calculators/eoutersphere.cc:        assert (false); // TODO e, h calc. // pair->setLambdaO(lambda);
src/libctp/calculators/eoutersphere.cc:    double e = 1.602176487e-19;
src/libctp/calculators/eoutersphere.cc:    double EPS0 = 8.85418782e-12;
src/libctp/calculators/eoutersphere.cc:    double NM = 1.e-09;
src/libctp/calculators/eoutersphere.cc:    double NM3 = 1.e-27;
src/libctp/calculators/eoutersphere.cc:    for (pit = top->NBList().begin(); pit != top->NBList().end(); pit++) {
src/libctp/calculators/eoutersphere.cc:        vec seg1pos = pair->Seg1()->getPos();
src/libctp/calculators/eoutersphere.cc:        vec seg2pos = pair->Seg2()->getPos();
src/libctp/calculators/eoutersphere.cc:        for (sit = top->Segments().begin();
src/libctp/calculators/eoutersphere.cc:             sit < top->Segments().end();
src/libctp/calculators/eoutersphere.cc:             // Segment external to pair? Cut-off obeyed?
src/libctp/calculators/eoutersphere.cc:             if ( seg == pair->Seg1() || seg == pair->Seg2() ) { continue; }
src/libctp/calculators/eoutersphere.cc:             vec dR1bc = top->PbShortestConnect( seg->getPos(), seg1pos );
src/libctp/calculators/eoutersphere.cc:             vec dR2bc = top->PbShortestConnect( seg->getPos(), seg2pos );
src/libctp/calculators/eoutersphere.cc:             vec dR1   = seg1pos - seg->getPos();
src/libctp/calculators/eoutersphere.cc:             vec dR2   = seg2pos - seg->getPos();
src/libctp/calculators/eoutersphere.cc:             vec shift1 = dR1bc - dR1;
src/libctp/calculators/eoutersphere.cc:             vec shift2 = dR2bc - dR2;
src/libctp/calculators/eoutersphere.cc:             for (ait = seg->Atoms().begin(); ait < seg->Atoms().end(); ait++) {
src/libctp/calculators/eoutersphere.cc:                 for (bit = pair->Seg1()->Atoms().begin();
src/libctp/calculators/eoutersphere.cc:                         bit < pair->Seg1()->Atoms().end();
src/libctp/calculators/eoutersphere.cc:                     double dQ = Int->getQ(-1) - Int->getQ(0);
src/libctp/calculators/eoutersphere.cc:                     vec R = Ext->getPos() - Int->getPos() - shift1;
src/libctp/calculators/eoutersphere.cc:                 for (bit = pair->Seg2()->Atoms().begin();
src/libctp/calculators/eoutersphere.cc:                         bit < pair->Seg2()->Atoms().end();
src/libctp/calculators/eoutersphere.cc:                     double dQ = Int->getQ(0) - Int->getQ(-1);
src/libctp/calculators/eoutersphere.cc:                     vec R = Ext->getPos() - Int->getPos() - shift2;
src/libctp/calculators/eoutersphere.cc:                         * top->BoxVolume()*NM3 / top->Atoms().size();   
src/libctp/calculators/eoutersphere.cc:        assert (false); // TODO e, h calculation // pair->setLambdaO(lambda);
src/libctp/calculators/eoutersphere.cc:    e12  = _top->PbShortestConnect(pol1.getPos(), pol.getPos());
src/libctp/calculators/eoutersphere.cc:        rbx = - rax;
src/libctp/calculators/eoutersphere.cc:        rby = - ray;
src/libctp/calculators/eoutersphere.cc:        rbz = - raz;
src/libctp/calculators/eoutersphere.cc:    // Field generated by rank-0 m'pole
src/libctp/calculators/eoutersphere.cc:    // Field generated by rank-1 m'pole
src/libctp/calculators/eoutersphere.cc:    // Field generated by rank-2 m'pole
src/libctp/calculators/eoutersphere.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/eoutersphere.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/eoutersphere.h:        double dDy;     //  |<- Electric displ. fields D_initial - D_final
src/libctp/calculators/eoutersphere.h:        double R3;      //  |-> NOTE: reciprocal, i.e. e.g. R3 = 1/(R*R*R)
src/libctp/calculators/eoutersphere.h:        inline double T20_00()  { return R3 * 0.5 * (3 * raz*raz - 1); }
src/libctp/calculators/eoutersphere.h:        inline double T22c_00() { return R3 * 0.5 * sqrt(3) * (rax*rax - ray*ray); }
src/libctp/calculators/eoutersphere.h:        inline double T00_20()  { return R3 * 0.5 * (3 * rbz*rbz - 1); }
src/libctp/calculators/eoutersphere.h:        inline double T00_22c() { return R3 * 0.5 * sqrt(3) * (rbx*rbx - rby*rby); }
src/libctp/calculators/eoutersphere.h:        inline double T20_1x()  { return R4 * 0.5 * (15*raz*raz*rbx + 6*raz*czx - 3*rbx); }
src/libctp/calculators/eoutersphere.h:        inline double T20_1y()  { return R4 * 0.5 * (15*raz*raz*rby + 6*raz*czy - 3*rby); }
src/libctp/calculators/eoutersphere.h:        inline double T20_1z()  { return R4 * 0.5 * (15*raz*raz*rbz + 6*raz*czz - 3*rbz); }
src/libctp/calculators/eoutersphere.h:        inline double T22c_1x() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbx + 2*rax*cxx - 2*ray*cyx); }
src/libctp/calculators/eoutersphere.h:        inline double T22c_1y() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rby + 2*rax*cxy - 2*ray*cyy); }
src/libctp/calculators/eoutersphere.h:        inline double T22c_1z() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbz + 2*rax*cxz - 2*ray*cyz); }
src/libctp/calculators/eoutersphere.h:        inline double T1x_20()  { return R4 * 0.5 * (15*rbz*rbz*rax + 6*rbz*cxz - 3*rax); }
src/libctp/calculators/eoutersphere.h:        inline double T1y_20()  { return R4 * 0.5 * (15*rbz*rbz*ray + 6*rbz*cyz - 3*ray); }
src/libctp/calculators/eoutersphere.h:        inline double T1z_20()  { return R4 * 0.5 * (15*rbz*rbz*raz + 6*rbz*czz - 3*raz); }
src/libctp/calculators/eoutersphere.h:        inline double T1x_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*rax + 2*rbx*cxx - 2*rby*cxy); }
src/libctp/calculators/eoutersphere.h:        inline double T1y_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*ray + 2*rbx*cyx - 2*rby*cyy); }
src/libctp/calculators/eoutersphere.h:        inline double T1z_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*raz + 2*rbx*czx - 2*rby*czy); }
src/libctp/calculators/eoutersphere.h:        inline double T20_20()   { return R5 * 0.75 * (35*raz*raz*rbz*rbz - 5*raz*raz - 5*rbz*rbz + 20*raz*rbz*czz + 2*czz*czz + 1); }
src/libctp/calculators/eoutersphere.h:        inline double T20_21c()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rbz - 5*rbx*rbz + 10*raz*rbx*czz + 10*raz*rbz*czx + 2*czx*czz); }
src/libctp/calculators/eoutersphere.h:        inline double T20_21s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rby*rbz - 5*rby*rbz + 10*raz*rby*czz + 10*raz*rbz*czy + 2*czy*czz); }
src/libctp/calculators/eoutersphere.h:        inline double T20_22c()  { return R5 * 0.25 * sqrt(3) * (35*raz*raz*rbx*rbx - 35*raz*raz*rby*rby - 5*rbx*rbx + 5*rby*rby + 20*raz*rbx*czx - 20*raz*rby*czy + 2*czx*czx - 2*czy*czy); }
src/libctp/calculators/eoutersphere.h:        inline double T20_22s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rby - 5*rbx*rby + 10*raz*rbx*czy + 10*raz*rby*czx + 2*czx*czy); }
src/libctp/calculators/eoutersphere.h:        inline double T21c_22c() { return R5 * 0.5 * (35*rax*raz*rbx*rbx - 35*rax*raz*rby*rby + 10*rax*rbx*czx - 10*rax*rby*czy + 10*raz*rbx*cxx - 10*raz*rby*cxy + 2*cxx*czx - 2*cxy*czy); }
src/libctp/calculators/eoutersphere.h:        inline double T21s_22c() { return R5 * 0.5 * (35*ray*raz*rbx*rbx - 35*ray*raz*rby*rby + 10*ray*rbx*czx - 10*ray*rby*czy + 10*raz*rbx*cyx - 10*raz*rby*cyy + 2*cyx*czx - 2*cyy*czy); }
src/libctp/calculators/eoutersphere.h:        inline double T22c_22c() { return R5 * 0.25 * (35*rax*rax*rbx*rbx - 35*rax*rax*rby*rby - 35*ray*ray*rbx*rbx + 35*ray*ray*rby*rby + 20*rax*rbx*cxx - 20*rax*rby*cxy - 20*ray*rbx*cyx + 20*ray*rby*cyy + 2*cxx*cxx - 2*cxy*cxy - 2*cyx*cyx + 2*cyy*cyy); }
src/libctp/calculators/eoutersphere.h:        inline double T22c_22s() { return R5 * 0.5 * (35*rax*rax*rbx*rby - 35*ray*ray*rbx*rby + 10*rax*rbx*cxy + 10*rax*rby*cxx - 10*ray*rbx*cyy - 10*ray*rby*cyx + 2*cxx*cxy - 2*cyx*cyy); }
src/libctp/calculators/eoutersphere.h:        inline double T21c_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*raz - 5*rax*raz + 10*rbz*rax*czz + 10*rbz*raz*cxz + 2*cxz*czz); }
src/libctp/calculators/eoutersphere.h:        inline double T21s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*ray*raz - 5*ray*raz + 10*rbz*ray*czz + 10*rbz*raz*cyz + 2*cyz*czz); }
src/libctp/calculators/eoutersphere.h:        inline double T22c_20()  { return R5 * 0.25 * sqrt(3) * (35*rbz*rbz*rax*rax - 35*rbz*rbz*ray*ray - 5*rax*rax + 5*ray*ray + 20*rbz*rax*cxz - 20*rbz*ray*cyz + 2*cxz*cxz - 2*cyz*cyz); }
src/libctp/calculators/eoutersphere.h:        inline double T22s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*ray - 5*rax*ray + 10*rbz*rax*cyz + 10*rbz*ray*cxz + 2*cxz*cyz); }
src/libctp/calculators/eoutersphere.h:        inline double T22c_21c() { return R5 * 0.5 * (35*rbx*rbz*rax*rax - 35*rbx*rbz*ray*ray + 10*rbx*rax*cxz - 10*rbx*ray*cyz + 10*rbz*rax*cxx - 10*rbz*ray*cyx + 2*cxx*cxz - 2*cyx*cyz); }
src/libctp/calculators/eoutersphere.h:        inline double T22c_21s() { return R5 * 0.5 * (35*rby*rbz*rax*rax - 35*rby*rbz*ray*ray + 10*rby*rax*cxz - 10*rby*ray*cyz + 10*rbz*rax*cxy - 10*rbz*ray*cyy + 2*cxy*cxz - 2*cyy*cyz); }
src/libctp/calculators/eoutersphere.h:        inline double T22s_22c() { return R5 * 0.5 * (35*rbx*rbx*rax*ray - 35*rby*rby*rax*ray + 10*rbx*rax*cyx + 10*rbx*ray*cxx - 10*rby*rax*cyy - 10*rby*ray*cxy + 2*cxx*cyx - 2*cxy*cyy); }
src/libctp/calculators/ianalyze.h:    _resolution_logJ2 = opt->get(key+".resolution_logJ2").as< double >();
src/libctp/calculators/ianalyze.h:    _states = opt->get(key+".states").as< vector<int> >();
src/libctp/calculators/ianalyze.h:    QMNBList &nblist = top->NBList();
src/libctp/calculators/ianalyze.h:        this->IHist(top, _states[i]);
src/libctp/calculators/ianalyze.h:    QMNBList &nblist = top->NBList();
src/libctp/calculators/ianalyze.h:    double MIN = log10(nblist.front()->getJeff2(state));
src/libctp/calculators/ianalyze.h:    double MAX = log10(nblist.front()->getJeff2(state));
src/libctp/calculators/ianalyze.h:        double J2 = log10((*nit)->getJeff2(state));
src/libctp/calculators/ianalyze.h:    int BIN = ( (MAX-MIN)/_resolution_logJ2 + 0.5 ) + 1;
src/libctp/calculators/ianalyze.h:        int bin = int( (*jit-MIN)/_resolution_logJ2 + 0.5 );
src/libctp/calculators/ianalyze.h:    string tag = boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/ianalyze.h:               + "_INTEGRALS_" + ( (state == -1) ? "e" : "h" ) + ".dat";
src/libctp/calculators/ianalyze.h:    fprintf(out, "# IANALYZE: PAIR-INTEGRAL J2 HISTOGRAM\n");
src/libctp/calculators/iimport.h:    if (options->exists(key+".TI_tag")) {
src/libctp/calculators/iimport.h:        _TI_tag = options->get(key+".TI_tag").as< string >();
src/libctp/calculators/iimport.h:    else if (options->exists(key+".TI_file")) {
src/libctp/calculators/iimport.h:        _TI_file = options->get(key+".TI_file").as< string >();
src/libctp/calculators/iimport.h:      this->List2PairsTI(top, _TI_file);
src/libctp/calculators/iimport.h:    string PARDIR = "frame" + boost::lexical_cast<string>(top->getDatabaseId());
src/libctp/calculators/iimport.h:    QMNBList &nblist = top->NBList();
src/libctp/calculators/iimport.h:        string ID1  = boost::lexical_cast<string>((*nit)->Seg1()->getId());
src/libctp/calculators/iimport.h:        string ID2  = boost::lexical_cast<string>((*nit)->Seg2()->getId());
src/libctp/calculators/iimport.h:        this->XML2PairTI(*nit, SUBDIR);
src/libctp/calculators/iimport.h:    QMNBList &nblist = top->NBList();
src/libctp/calculators/iimport.h:            Segment *seg1 = top->getSegment(seg1id);
src/libctp/calculators/iimport.h:            Segment *seg2 = top->getSegment(seg2id);
src/libctp/calculators/iimport.h:                throw std::runtime_error("Forgot to run -e neighborlist?");
src/libctp/calculators/iimport.h:            int e_h_1 = (split[2] == "e") ? -1 : +1;
src/libctp/calculators/iimport.h:                int e_h_2 = (split[4] == "e") ? -1 : +1;
src/libctp/calculators/iimport.h:                qmp->setJeff2(j2_2, e_h_2);
src/libctp/calculators/iimport.h:                qmp->setIsPathCarrier(true, e_h_2);
src/libctp/calculators/iimport.h:            qmp->setJeff2(j2_1, e_h_1);
src/libctp/calculators/iimport.h:            qmp->setIsPathCarrier(true, e_h_1);
src/libctp/calculators/iimport.h:            qmpair->getId(), qmpair->Seg1()->getId(), qmpair->Seg2()->getId());
src/libctp/calculators/iimport.h:                STATE = (TRANSPORT == "electron") ? -1 : +1;
src/libctp/calculators/iimport.h:                    qmpair->setJeff2(J*J, STATE);
src/libctp/calculators/iimport.h:                    qmpair->setIsPathCarrier(1, STATE);
src/libctp/calculators/iimport.h:                            STATE, qmpair->getJeff2(STATE));
src/libctp/calculators/iimport.h:                    qmpair->setJeff2(J2, STATE);
src/libctp/calculators/iimport.h:                    qmpair->setIsPathCarrier(1, STATE);
src/libctp/calculators/iimport.h:                            STATE, qmpair->getJeff2(STATE));
src/libctp/calculators/izindo.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/izindo.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/izindo.h:* \brief Semi-empirical electronic coupling elements for QM pairs
src/libctp/calculators/izindo.h:* Semi-empirical (ZINDO) electronic coupling elements for all conjugated
src/libctp/calculators/izindo.h:    // thread-unsafe containers and / or
src/libctp/calculators/izindo.h:    /* ---- OPTIONS.XML Structure -----
src/libctp/calculators/izindo.h:    this->ParseOrbitalsXML(top, options);
src/libctp/calculators/izindo.h:    string orbitalsXML = opt->get(key+".orbitalsXML").as<string> ();
src/libctp/calculators/izindo.h:    /* --- ORBITALS.XML Structure ---
src/libctp/calculators/izindo.h:        list<Property*> segs = (*molit)->Select(key);
src/libctp/calculators/izindo.h:            string segName = (*segit)->get("name").as<string> ();
src/libctp/calculators/izindo.h:            string basisName = (*segit)->get("basisset").as<string> ();
src/libctp/calculators/izindo.h:            string orbFile = (*segit)->get("orbitals").as<string> ();
src/libctp/calculators/izindo.h:            if ( (*segit)->exists("torbital_e") ) {
src/libctp/calculators/izindo.h:                torbs_e = (*segit)->get("torbital_e").as< vector<int> > ();
src/libctp/calculators/izindo.h:            if ( (*segit)->exists("torbital_h") ) {
src/libctp/calculators/izindo.h:                torbs_h = (*segit)->get("torbital_h").as< vector<int> > ();
src/libctp/calculators/izindo.h:    this->LockCout();
src/libctp/calculators/izindo.h:    cout << "\r... ... Evaluating pair " << qmpair->getId()+1 << flush;
src/libctp/calculators/izindo.h:    this->UnlockCout();
src/libctp/calculators/izindo.h:    string segName1 = qmpair->Seg1()->getName();
src/libctp/calculators/izindo.h:    string segName2 = qmpair->Seg2()->getName();
src/libctp/calculators/izindo.h:        this->LockCout();
src/libctp/calculators/izindo.h:        this->UnlockCout();
src/libctp/calculators/izindo.h:        this->CTP2MOO2CTP(qmpair, opThread, -1);
src/libctp/calculators/izindo.h:        this->CTP2MOO2CTP(qmpair, opThread, +1);
src/libctp/calculators/izindo.h:    Segment *seg1 = pair->Seg1PbCopy();
src/libctp/calculators/izindo.h:    Segment *seg2 = pair->Seg2PbCopy();
src/libctp/calculators/izindo.h:    SegmentType *type2 = seg2->getType();
src/libctp/calculators/izindo.h:    SegmentType *type1 = seg1->getType();
src/libctp/calculators/izindo.h:    string coordsFile1 = type1->getQMCoordsFile();
src/libctp/calculators/izindo.h:    string coordsFile2 = type2->getQMCoordsFile();
src/libctp/calculators/izindo.h:    basisName1 = _seg_basisName.at(type1->getName());
src/libctp/calculators/izindo.h:    basisName2 = _seg_basisName.at(type2->getName());
src/libctp/calculators/izindo.h:    orbFile1 = _seg_orbFile.at(type1->getName());
src/libctp/calculators/izindo.h:    orbFile2 = _seg_orbFile.at(type2->getName());
src/libctp/calculators/izindo.h:    torbs1 = (state == -1) ? _seg_torbs_e.at(type1->getName()) :
src/libctp/calculators/izindo.h:                             _seg_torbs_h.at(type1->getName());
src/libctp/calculators/izindo.h:    torbs2 = (state == -1) ? _seg_torbs_e.at(type2->getName()) :
src/libctp/calculators/izindo.h:                             _seg_torbs_h.at(type2->getName());
src/libctp/calculators/izindo.h:    //string basisName1 = type1->getBasisName();
src/libctp/calculators/izindo.h:    //string basisName2 = type2->getBasisName();
src/libctp/calculators/izindo.h:    //string orbFile1 = type1->getOrbitalsFile();
src/libctp/calculators/izindo.h:    //string orbFile2 = type2->getOrbitalsFile();
src/libctp/calculators/izindo.h:    //vector<int> torbs1 = type1->getTOrbNrs();
src/libctp/calculators/izindo.h:    //vector<int> torbs2 = type2->getTOrbNrs();
src/libctp/calculators/izindo.h:    basis1->set_basis_set(basisName1);
src/libctp/calculators/izindo.h:    morb1->define_bs(basis1);
src/libctp/calculators/izindo.h:    basis2->set_basis_set(basisName2);
src/libctp/calculators/izindo.h:    morb2->define_bs(basis2);
src/libctp/calculators/izindo.h:    morb1->init(coordsFile1.c_str());
src/libctp/calculators/izindo.h:    morb2->init(coordsFile2.c_str());
src/libctp/calculators/izindo.h:    morb1->init_orbitals(*orb1, orbFile1.c_str());
src/libctp/calculators/izindo.h:    morb2->init_orbitals(*orb2, orbFile2.c_str());
src/libctp/calculators/izindo.h:    orb1->strip_orbitals(torbs1);
src/libctp/calculators/izindo.h:    orb2->strip_orbitals(torbs2);
src/libctp/calculators/izindo.h:    morb1->assign_orb(orb1);
src/libctp/calculators/izindo.h:    morb2->assign_orb(orb2);
src/libctp/calculators/izindo.h:    fock12->init(*morb1, *morb2);
src/libctp/calculators/izindo.h:    // Rotate + Translate QM frame to MD frame, fragment-wise
src/libctp/calculators/izindo.h:    for (fit = seg1->Fragments().begin();
src/libctp/calculators/izindo.h:         fit < seg1->Fragments().end();
src/libctp/calculators/izindo.h:        vec CoMD = frag->getCoMD();
src/libctp/calculators/izindo.h:        vec CoQM = frag->getCoQM();
src/libctp/calculators/izindo.h:        matrix rotQM2MD = frag->getRotQM2MD();
src/libctp/calculators/izindo.h:        for (ait = frag->Atoms().begin();
src/libctp/calculators/izindo.h:             ait < frag->Atoms().end();
src/libctp/calculators/izindo.h:             if ( (*ait)->HasQMPart() ) {
src/libctp/calculators/izindo.h:                 atmIdcs.push_back( (*ait)->getQMId()-1 );
src/libctp/calculators/izindo.h:        morb1->rotate_someatoms_ctp(atmIdcs, rotQM2MD,
src/libctp/calculators/izindo.h:            orb1->rotate_someatoms(atmIdcs, &rotQM2MD,
src/libctp/calculators/izindo.h:                                    morb1->getorb(i), i);
src/libctp/calculators/izindo.h:    morb1->write_pdb("morbs.pdb", "MOL", 0);
src/libctp/calculators/izindo.h:    for (fit = seg2->Fragments().begin();
src/libctp/calculators/izindo.h:            fit < seg2->Fragments().end();
src/libctp/calculators/izindo.h:        vec CoMD = frag->getCoMD();
src/libctp/calculators/izindo.h:        vec CoQM = frag->getCoQM();
src/libctp/calculators/izindo.h:        matrix rotQM2MD = frag->getRotQM2MD();
src/libctp/calculators/izindo.h:        for (ait = frag->Atoms().begin();
src/libctp/calculators/izindo.h:             ait < frag->Atoms().end();
src/libctp/calculators/izindo.h:             if ( (*ait)->HasQMPart() ) {
src/libctp/calculators/izindo.h:                atmIdcs.push_back( (*ait)->getQMId()-1 );
src/libctp/calculators/izindo.h:        morb2->rotate_someatoms_ctp(atmIdcs, rotQM2MD,
src/libctp/calculators/izindo.h:            orb2->rotate_someatoms(atmIdcs, &rotQM2MD,
src/libctp/calculators/izindo.h:                                    morb2->getorb(i), i);
src/libctp/calculators/izindo.h:    morb2->write_pdb("morbs.pdb", "MOL", 1);
src/libctp/calculators/izindo.h:        double J = fock12->calcJ(torb2torb);
src/libctp/calculators/izindo.h:    pair->setJs(Js, state);
src/libctp/calculators/izindo.h:    pair->setIsPathCarrier(true, state);
src/libctp/calculators/izindo.h:    //cout << endl << "Jeff2 " << pair->getJeff2(state) << " ___ state " << state << endl;
src/libctp/calculators/izindo.h:    //cout << "path  " << pair->isPathCarrier(state) << endl;
src/libctp/calculators/izindo.h:    Segment *seg1 = pair->Seg1PbCopy();
src/libctp/calculators/izindo.h:    Segment *seg2 = pair->Seg2PbCopy();
src/libctp/calculators/izindo.h:    // Rotate + Translate QM frame to MD frame, fragment-wise
src/libctp/calculators/izindo.h:    for (fit = seg1->Fragments().begin();
src/libctp/calculators/izindo.h:         fit < seg1->Fragments().end();
src/libctp/calculators/izindo.h:        vec CoMD = frag->getCoMD();
src/libctp/calculators/izindo.h:        vec CoQM = frag->getCoQM();
src/libctp/calculators/izindo.h:        matrix rotQM2MD = frag->getRotQM2MD();
src/libctp/calculators/izindo.h:        for (ait = frag->Atoms().begin();
src/libctp/calculators/izindo.h:             ait < frag->Atoms().end();
src/libctp/calculators/izindo.h:             if ( (*ait)->HasQMPart() ) {
src/libctp/calculators/izindo.h:                 atmIdcs.push_back( (*ait)->getQMId()-1 );
src/libctp/calculators/izindo.h:        _morb1->rotate_someatoms_ctp(atmIdcs, rotQM2MD,
src/libctp/calculators/izindo.h:        for (int i = 0; i < this->_torbNrs1.size(); i++) {
src/libctp/calculators/izindo.h:            _orb1->rotate_someatoms(atmIdcs, &rotQM2MD,
src/libctp/calculators/izindo.h:                                    _morb1->getorb(i), i);
src/libctp/calculators/izindo.h:    //_morb1->write_pdb("morbs.pdb", "MOL", 1);
src/libctp/calculators/izindo.h:    for (fit = seg2->Fragments().begin();
src/libctp/calculators/izindo.h:            fit < seg2->Fragments().end();
src/libctp/calculators/izindo.h:        vec CoMD = frag->getCoMD();
src/libctp/calculators/izindo.h:        vec CoQM = frag->getCoQM();
src/libctp/calculators/izindo.h:        matrix rotQM2MD = frag->getRotQM2MD();
src/libctp/calculators/izindo.h:        for (ait = frag->Atoms().begin();
src/libctp/calculators/izindo.h:             ait < frag->Atoms().end();
src/libctp/calculators/izindo.h:             if ( (*ait)->HasQMPart() ) {
src/libctp/calculators/izindo.h:                atmIdcs.push_back( (*ait)->getQMId()-1 );
src/libctp/calculators/izindo.h:        _morb2->rotate_someatoms_ctp(atmIdcs, rotQM2MD,
src/libctp/calculators/izindo.h:        for (int i = 0; i < this->_torbNrs2.size(); i++) {
src/libctp/calculators/izindo.h:            _orb2->rotate_someatoms(atmIdcs, &rotQM2MD,
src/libctp/calculators/izindo.h:                                    _morb2->getorb(i), i);
src/libctp/calculators/izindo.h:        double J = _fock->calcJ(torb2torb);
src/libctp/calculators/izindo.h:    assert(false); // pair->setJs(Js);
src/libctp/calculators/molpol.h:    if (options->exists(key+".mps_input")) {
src/libctp/calculators/molpol.h:        _mps_input = options->get(key+".mps_input").as<string>();
src/libctp/calculators/molpol.h:    if (options->exists(key+".mps_output")) {
src/libctp/calculators/molpol.h:        _mps_output = options->get(key+".mps_output").as<string>();
src/libctp/calculators/molpol.h:    if (options->exists(key+".pol_output")) {
src/libctp/calculators/molpol.h:        _pol_output = options->get(key+".pol_output").as<string>();
src/libctp/calculators/molpol.h:    if ( options->exists(key+".expdamp") ) {
src/libctp/calculators/molpol.h:        _aDamp = options->get(key+".expdamp").as< double >();
src/libctp/calculators/molpol.h:    if ( options->exists(key+".wSOR") ) {
src/libctp/calculators/molpol.h:        _wSOR = options->get(key+".wSOR").as< float >();
src/libctp/calculators/molpol.h:    if ( options->exists(key+".maxiter") ) {
src/libctp/calculators/molpol.h:        _maxIter = options->get(key+".maxiter").as< int >();
src/libctp/calculators/molpol.h:    if ( options->exists(key+".tolerance") ) {
src/libctp/calculators/molpol.h:        _epsTol = options->get(key+".tolerance").as< double >();
src/libctp/calculators/molpol.h:    matrix pmol = this->CalculateMolPol(poles, true);
src/libctp/calculators/molpol.h:    //    (*pit)->PrintInfo(cout);
src/libctp/calculators/molpol.h:    double ayx, ayy, ayz;             // |-> Polarizability tensor
src/libctp/calculators/molpol.h:    double siteU1x, siteU1y, siteU1z; // |-> Molecular ind. dipole
src/libctp/calculators/molpol.h:    double extFx, extFy, extFz;       // |-> External applied field
src/libctp/calculators/molpol.h:    // External field in x-direction //
src/libctp/calculators/molpol.h:        (*pit)->FPx = extFx;
src/libctp/calculators/molpol.h:        (*pit)->FPy = extFy;
src/libctp/calculators/molpol.h:        (*pit)->FPz = extFz;
src/libctp/calculators/molpol.h:    int iter_x = this->SCF_Induce(poles);
src/libctp/calculators/molpol.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/molpol.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/molpol.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/molpol.h:    axx = - siteU1x / extFx;
src/libctp/calculators/molpol.h:    ayx = - siteU1y / extFx;
src/libctp/calculators/molpol.h:    azx = - siteU1z / extFx;
src/libctp/calculators/molpol.h:    // External field in y-direction //
src/libctp/calculators/molpol.h:        (*pit)->FPx = extFx;
src/libctp/calculators/molpol.h:        (*pit)->FPy = extFy;
src/libctp/calculators/molpol.h:        (*pit)->FPz = extFz;
src/libctp/calculators/molpol.h:    int iter_y = this->SCF_Induce(poles);
src/libctp/calculators/molpol.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/molpol.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/molpol.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/molpol.h:    axy = - siteU1x / extFy;
src/libctp/calculators/molpol.h:    ayy = - siteU1y / extFy;
src/libctp/calculators/molpol.h:    azy = - siteU1z / extFy;
src/libctp/calculators/molpol.h:    // External field in z-direction //
src/libctp/calculators/molpol.h:        (*pit)->FPx = extFx;
src/libctp/calculators/molpol.h:        (*pit)->FPy = extFy;
src/libctp/calculators/molpol.h:        (*pit)->FPz = extFz;
src/libctp/calculators/molpol.h:    int iter_z = this->SCF_Induce(poles);
src/libctp/calculators/molpol.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/molpol.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/molpol.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/molpol.h:    axz = - siteU1x / extFz;
src/libctp/calculators/molpol.h:    ayz = - siteU1y / extFz;
src/libctp/calculators/molpol.h:    azz = - siteU1z / extFz;
src/libctp/calculators/molpol.h:        SUM_alpha_x += (*pit)->Pxx;
src/libctp/calculators/molpol.h:        SUM_alpha_y += (*pit)->Pyy;
src/libctp/calculators/molpol.h:        SUM_alpha_z += (*pit)->Pzz;
src/libctp/calculators/molpol.h:        SUM_alpha_iso += (*pit)->getIsoP();
src/libctp/calculators/molpol.h:    int    maxIter  = this->_maxIter;
src/libctp/calculators/molpol.h:    double wSOR     = this->_wSOR;
src/libctp/calculators/molpol.h:    double eTOL     = this->_epsTol;
src/libctp/calculators/molpol.h:        (*pit1)->InduceDirect();
src/libctp/calculators/molpol.h:            (*pit1)->ResetFieldU();
src/libctp/calculators/molpol.h:        // Calculate higher-order induction field
src/libctp/calculators/molpol.h:            (*pit1)->Induce(wSOR);
src/libctp/calculators/molpol.h:        double maxdU = -1;
src/libctp/calculators/molpol.h:             double dU = (*pit1)->HistdU();
src/libctp/calculators/molpol.h:        else if (iter == maxIter - 1) {
src/libctp/calculators/neighborlist.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/neighborlist.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/neighborlist.h:    list< Property* > segs = options->Select(key+".segments");
src/libctp/calculators/neighborlist.h:        string types = (*segsIt)->get("type").as<string>();
src/libctp/calculators/neighborlist.h:        double cutoff = (*segsIt)->get("cutoff").as<double>();
src/libctp/calculators/neighborlist.h:            cout << "ERROR: Faulty pair definition for cut-off's: "
src/libctp/calculators/neighborlist.h:    if (options->exists(key+".constant")) {
src/libctp/calculators/neighborlist.h:        _constantCutoff = options->get(key+".constant").as< double >();
src/libctp/calculators/neighborlist.h:    if (options->exists(key+".generate_from")) {
src/libctp/calculators/neighborlist.h:        _generate_from = options->get(key+".generate_from").as< string >();
src/libctp/calculators/neighborlist.h:    if (options->exists(key+".generate_unsafe")) {
src/libctp/calculators/neighborlist.h:    top->NBList().Cleanup();
src/libctp/calculators/neighborlist.h:        this->GenerateFromFile(top, _generate_from);        
src/libctp/calculators/neighborlist.h:        for (segit1 = top->Segments().begin();
src/libctp/calculators/neighborlist.h:                segit1 < top->Segments().end();
src/libctp/calculators/neighborlist.h:                    cout << "\r ... ... NB List Seg " << seg1->getId() << flush;
src/libctp/calculators/neighborlist.h:                    segit2 < top->Segments().end();
src/libctp/calculators/neighborlist.h:                    // Find cut-off
src/libctp/calculators/neighborlist.h:                        cutoff = _cutoffs.at(seg1->getName())
src/libctp/calculators/neighborlist.h:                                         .at(seg2->getName());
src/libctp/calculators/neighborlist.h:                        cout << "ERROR: No cut-off specified for segment pair "
src/libctp/calculators/neighborlist.h:                             << seg1->getName() << " | " << seg2->getName() 
src/libctp/calculators/neighborlist.h:                for (fragit1 = seg1->Fragments().begin();
src/libctp/calculators/neighborlist.h:                        fragit1 < seg1->Fragments().end();
src/libctp/calculators/neighborlist.h:                    for (fragit2 = seg2->Fragments().begin();
src/libctp/calculators/neighborlist.h:                            fragit2 < seg2->Fragments().end();
src/libctp/calculators/neighborlist.h:                        r1 = (*fragit1)->getPos();
src/libctp/calculators/neighborlist.h:                        r2 = (*fragit2)->getPos();
src/libctp/calculators/neighborlist.h:                        if( abs( top->PbShortestConnect(r1, r2) ) > cutoff ) {
src/libctp/calculators/neighborlist.h:                            top->NBList().Add(seg1, seg2);
src/libctp/calculators/neighborlist.h:    cout << endl << "... ... Created " << top->NBList().size() << " pairs.";
src/libctp/calculators/neighborlist.h:        QMNBList& nblist = top->NBList();
src/libctp/calculators/neighborlist.h:                Segment* segment1 = pair->Seg1PbCopy();
src/libctp/calculators/neighborlist.h:                Segment* segment2 = pair->Seg2PbCopy();
src/libctp/calculators/neighborlist.h:                cout << " [" << segment1->getId() << ":" << segment2->getId()<< "] " << pair->Dist()<< endl;
src/libctp/calculators/neighborlist.h:            Segment* seg1 = top->getSegment(seg1id);
src/libctp/calculators/neighborlist.h:            Segment* seg2 = top->getSegment(seg2id);
src/libctp/calculators/neighborlist.h:                assert(seg1->getName() == seg1name);
src/libctp/calculators/neighborlist.h:                assert(seg2->getName() == seg2name);
src/libctp/calculators/neighborlist.h:            QMPair* pair12 = top->NBList().Add(seg1,seg2);
src/libctp/calculators/neighborlist.h:     1  1000 1010 2.4292699e-03 1.61313482160154 -1.05173043628102 0.759048038980236 DCV DCV
src/libctp/calculators/neighborlist.h:     2  1000 1020 1.0551418e-03 1.4977782788484 -0.466982612402543 0.876438986736797 DCV DCV
src/libctp/calculators/neighborlist.h:     3  1000 1023 5.9645622e-03 1.51684342052626 0.189056522949882 0.763447935684869 DCV DCV
src/libctp/calculators/neighborlist.h:     4  1000 1027 2.1161184e-02 -0.121730375289917 0.483095637611721 0.078926185939622 DCV DCV
src/libctp/calculators/neighborlist.h:     5  1000 1034 1.5198626e-03 0.586534707442574 -1.59841490776642 0.695082730832308 DCV DCV
src/libctp/calculators/neighborlist.h:     6  1000 1048 1.0121481e-03 -0.296308693678482 -1.02535652660805 0.347373638982358 DCV DCV
src/libctp/calculators/neighborlist.h:     7  1000 1050 9.3073820e-04 1.34660870303278 -1.49037826725322 0.571647867949114 DCV DCV
src/libctp/calculators/neighborlist.h:     8  1000 1052 1.0803526e-03 -0.337469581935717 -0.853313051455695 0.592304403885553 DCV DCV
src/libctp/calculators/neighborlist.h:     9  1000 1065 4.6567327e-04 0.45481307817542 -1.44727391982856 1.05151722120202 DCV DCV
src/libctp/calculators/neighborlist.h:    10  1000 1073 5.7739082e-03 -0.388582683646161 -0.221439142589984 0.731973764170771 DCV DCV
src/libctp/calculators/pairdump.h:    if (!top->isRigid()) {
src/libctp/calculators/pairdump.h:        bool isRigid = top->Rigidify();
src/libctp/calculators/pairdump.h:    _outParent = "frame" + boost::lexical_cast<string>(top->getDatabaseId());
src/libctp/calculators/pairdump.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/pairdump.h:        string ID   = boost::lexical_cast<string>((*sit)->getId());
src/libctp/calculators/pairdump.h:        (*sit)->WriteXYZ(out);
src/libctp/calculators/pairdump.h:    QMNBList &nblist = top->NBList();
src/libctp/calculators/pairdump.h:        string ID1  = boost::lexical_cast<string>((*pit)->Seg1()->getId());
src/libctp/calculators/pairdump.h:        string ID2  = boost::lexical_cast<string>((*pit)->Seg2()->getId());
src/libctp/calculators/pairdump.h:        (*pit)->WriteXYZ(out);
src/libctp/calculators/qmultipole.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/qmultipole.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/qmultipole.h:    string   Identify() { return "ZMultipole - Anisotropic Polarizabilities"; }
src/libctp/calculators/qmultipole.h:    // Sub-Calculators ESP, ESF, MolPol //
src/libctp/calculators/qmultipole.h:        double EP;       //   <- Interaction permanent multipoles (inter-site)
src/libctp/calculators/qmultipole.h:        double EU_INTRA; //   <- Interaction induction multipoles (intra-site)
src/libctp/calculators/qmultipole.h:        double EU_INTER; //   <- Interaction induction multipoles (inter-site)
src/libctp/calculators/qmultipole.h:        double u3;      //  |-> NOTE: Only needed when using Thole model
src/libctp/calculators/qmultipole.h:        double R3;      //  |-> NOTE: reciprocal, i.e. e.g. R3 = 1/(R*R*R)
src/libctp/calculators/qmultipole.h:        inline double lambda3() { return 1 - exp( -a*u3); }
src/libctp/calculators/qmultipole.h:        inline double lambda5() { return 1 - (1 + a*u3) * exp( -a*u3); }
src/libctp/calculators/qmultipole.h:        inline double lambda7() { return 1 - (1 + a*u3 + 0.6*a*a*u3*u3) * exp( -a*u3); }
src/libctp/calculators/qmultipole.h:        inline double lambda9() { return 1 - (1 + a*u3 + (18*a*a*u3*u3 + 9*a*a*a*u3*u3*u3)/35) * exp( -a*u3); }
src/libctp/calculators/qmultipole.h:        inline double T20_00()  { return R3 * 0.5 * (3 * raz*raz - 1); }
src/libctp/calculators/qmultipole.h:        inline double T22c_00() { return R3 * 0.5 * sqrt(3) * (rax*rax - ray*ray); }
src/libctp/calculators/qmultipole.h:        inline double T00_20()  { return R3 * 0.5 * (3 * rbz*rbz - 1); }
src/libctp/calculators/qmultipole.h:        inline double T00_22c() { return R3 * 0.5 * sqrt(3) * (rbx*rbx - rby*rby); }
src/libctp/calculators/qmultipole.h:        inline double T20_1x()  { return R4 * 0.5 * (15*raz*raz*rbx + 6*raz*czx - 3*rbx); }
src/libctp/calculators/qmultipole.h:        inline double T20_1y()  { return R4 * 0.5 * (15*raz*raz*rby + 6*raz*czy - 3*rby); }
src/libctp/calculators/qmultipole.h:        inline double T20_1z()  { return R4 * 0.5 * (15*raz*raz*rbz + 6*raz*czz - 3*rbz); }
src/libctp/calculators/qmultipole.h:        inline double T22c_1x() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbx + 2*rax*cxx - 2*ray*cyx); }
src/libctp/calculators/qmultipole.h:        inline double T22c_1y() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rby + 2*rax*cxy - 2*ray*cyy); }
src/libctp/calculators/qmultipole.h:        inline double T22c_1z() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbz + 2*rax*cxz - 2*ray*cyz); }
src/libctp/calculators/qmultipole.h:        inline double T1x_20()  { return R4 * 0.5 * (15*rbz*rbz*rax + 6*rbz*cxz - 3*rax); }
src/libctp/calculators/qmultipole.h:        inline double T1y_20()  { return R4 * 0.5 * (15*rbz*rbz*ray + 6*rbz*cyz - 3*ray); }
src/libctp/calculators/qmultipole.h:        inline double T1z_20()  { return R4 * 0.5 * (15*rbz*rbz*raz + 6*rbz*czz - 3*raz); }
src/libctp/calculators/qmultipole.h:        inline double T1x_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*rax + 2*rbx*cxx - 2*rby*cxy); }
src/libctp/calculators/qmultipole.h:        inline double T1y_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*ray + 2*rbx*cyx - 2*rby*cyy); }
src/libctp/calculators/qmultipole.h:        inline double T1z_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*raz + 2*rbx*czx - 2*rby*czy); }
src/libctp/calculators/qmultipole.h:        inline double TU20_1x()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbx + lambda5()*(6*raz*czx - 3*rbx)); }
src/libctp/calculators/qmultipole.h:        inline double TU20_1y()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rby + lambda5()*(6*raz*czy - 3*rby)); }
src/libctp/calculators/qmultipole.h:        inline double TU20_1z()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbz + lambda5()*(6*raz*czz - 3*rbz)); }
src/libctp/calculators/qmultipole.h:        inline double TU22c_1x() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbx + lambda5()*(2*rax*cxx - 2*ray*cyx)); }
src/libctp/calculators/qmultipole.h:        inline double TU22c_1y() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rby + lambda5()*(2*rax*cxy - 2*ray*cyy)); }
src/libctp/calculators/qmultipole.h:        inline double TU22c_1z() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbz + lambda5()*(2*rax*cxz - 2*ray*cyz)); }
src/libctp/calculators/qmultipole.h:        inline double TU1x_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*rax + lambda5()*(6*rbz*cxz - 3*rax)); }
src/libctp/calculators/qmultipole.h:        inline double TU1y_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*ray + lambda5()*(6*rbz*cyz - 3*ray)); }
src/libctp/calculators/qmultipole.h:        inline double TU1z_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*raz + lambda5()*(6*rbz*czz - 3*raz)); }
src/libctp/calculators/qmultipole.h:        inline double TU1x_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*rax + lambda5()*(2*rbx*cxx - 2*rby*cxy)); }
src/libctp/calculators/qmultipole.h:        inline double TU1y_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*ray + lambda5()*(2*rbx*cyx - 2*rby*cyy)); }
src/libctp/calculators/qmultipole.h:        inline double TU1z_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*raz + lambda5()*(2*rbx*czx - 2*rby*czy)); }
src/libctp/calculators/qmultipole.h:        inline double T20_20()   { return R5 * 0.75 * (35*raz*raz*rbz*rbz - 5*raz*raz - 5*rbz*rbz + 20*raz*rbz*czz + 2*czz*czz + 1); }
src/libctp/calculators/qmultipole.h:        inline double T20_21c()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rbz - 5*rbx*rbz + 10*raz*rbx*czz + 10*raz*rbz*czx + 2*czx*czz); }
src/libctp/calculators/qmultipole.h:        inline double T20_21s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rby*rbz - 5*rby*rbz + 10*raz*rby*czz + 10*raz*rbz*czy + 2*czy*czz); }
src/libctp/calculators/qmultipole.h:        inline double T20_22c()  { return R5 * 0.25 * sqrt(3) * (35*raz*raz*rbx*rbx - 35*raz*raz*rby*rby - 5*rbx*rbx + 5*rby*rby + 20*raz*rbx*czx - 20*raz*rby*czy + 2*czx*czx - 2*czy*czy); }
src/libctp/calculators/qmultipole.h:        inline double T20_22s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rby - 5*rbx*rby + 10*raz*rbx*czy + 10*raz*rby*czx + 2*czx*czy); }
src/libctp/calculators/qmultipole.h:        inline double T21c_22c() { return R5 * 0.5 * (35*rax*raz*rbx*rbx - 35*rax*raz*rby*rby + 10*rax*rbx*czx - 10*rax*rby*czy + 10*raz*rbx*cxx - 10*raz*rby*cxy + 2*cxx*czx - 2*cxy*czy); }
src/libctp/calculators/qmultipole.h:        inline double T21s_22c() { return R5 * 0.5 * (35*ray*raz*rbx*rbx - 35*ray*raz*rby*rby + 10*ray*rbx*czx - 10*ray*rby*czy + 10*raz*rbx*cyx - 10*raz*rby*cyy + 2*cyx*czx - 2*cyy*czy); }
src/libctp/calculators/qmultipole.h:        inline double T22c_22c() { return R5 * 0.25 * (35*rax*rax*rbx*rbx - 35*rax*rax*rby*rby - 35*ray*ray*rbx*rbx + 35*ray*ray*rby*rby + 20*rax*rbx*cxx - 20*rax*rby*cxy - 20*ray*rbx*cyx + 20*ray*rby*cyy + 2*cxx*cxx - 2*cxy*cxy - 2*cyx*cyx + 2*cyy*cyy); }
src/libctp/calculators/qmultipole.h:        inline double T22c_22s() { return R5 * 0.5 * (35*rax*rax*rbx*rby - 35*ray*ray*rbx*rby + 10*rax*rbx*cxy + 10*rax*rby*cxx - 10*ray*rbx*cyy - 10*ray*rby*cyx + 2*cxx*cxy - 2*cyx*cyy); }
src/libctp/calculators/qmultipole.h:        inline double T21c_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*raz - 5*rax*raz + 10*rbz*rax*czz + 10*rbz*raz*cxz + 2*cxz*czz); }
src/libctp/calculators/qmultipole.h:        inline double T21s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*ray*raz - 5*ray*raz + 10*rbz*ray*czz + 10*rbz*raz*cyz + 2*cyz*czz); }
src/libctp/calculators/qmultipole.h:        inline double T22c_20()  { return R5 * 0.25 * sqrt(3) * (35*rbz*rbz*rax*rax - 35*rbz*rbz*ray*ray - 5*rax*rax + 5*ray*ray + 20*rbz*rax*cxz - 20*rbz*ray*cyz + 2*cxz*cxz - 2*cyz*cyz); }
src/libctp/calculators/qmultipole.h:        inline double T22s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*ray - 5*rax*ray + 10*rbz*rax*cyz + 10*rbz*ray*cxz + 2*cxz*cyz); }
src/libctp/calculators/qmultipole.h:        inline double T22c_21c() { return R5 * 0.5 * (35*rbx*rbz*rax*rax - 35*rbx*rbz*ray*ray + 10*rbx*rax*cxz - 10*rbx*ray*cyz + 10*rbz*rax*cxx - 10*rbz*ray*cyx + 2*cxx*cxz - 2*cyx*cyz); }
src/libctp/calculators/qmultipole.h:        inline double T22c_21s() { return R5 * 0.5 * (35*rby*rbz*rax*rax - 35*rby*rbz*ray*ray + 10*rby*rax*cxz - 10*rby*ray*cyz + 10*rbz*rax*cxy - 10*rbz*ray*cyy + 2*cxy*cxz - 2*cyy*cyz); }
src/libctp/calculators/qmultipole.h:        inline double T22s_22c() { return R5 * 0.5 * (35*rbx*rbx*rax*ray - 35*rby*rby*rax*ray + 10*rbx*rax*cyx + 10*rbx*ray*cxx - 10*rby*rax*cyy - 10*rby*ray*cxy + 2*cxx*cyx - 2*cxy*cyy); }
src/libctp/calculators/qmultipole.h:        vector< Segment* >           _segsPolSphere; // Segments    in c/o 0-1
src/libctp/calculators/qmultipole.h:        vector< Segment* >           _segsOutSphere; // Segments    in c/0 1-2
src/libctp/calculators/qmultipole.h:        vector< vector<APolarSite*> > _polsPolSphere; // Polar sites in c/o 0-1
src/libctp/calculators/qmultipole.h:        vector< vector<APolarSite*> > _polsOutSphere; // Polar sites in c/o 1-2
src/libctp/calculators/qmultipole.h:    /* ---- OPTIONS.XML Structure ----
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key) ) {
src/libctp/calculators/qmultipole.h:            xmlfile = opt->get(key).as< string >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".induce") ) {
src/libctp/calculators/qmultipole.h:            int induce = opt->get(key+".induce").as< int >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".first") ) {
src/libctp/calculators/qmultipole.h:            _firstSeg = opt->get(key+".first").as< int >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".last") ) {
src/libctp/calculators/qmultipole.h:            _lastSeg = opt->get(key+".last").as< int >();
src/libctp/calculators/qmultipole.h:        else { _lastSeg = -1; }
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/qmultipole.h:            _outFile = opt->get(key+".output").as< string >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".check") ) {
src/libctp/calculators/qmultipole.h:            _checkPolesPDB = opt->get(key+".check").as< string >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".list") ) {
src/libctp/calculators/qmultipole.h:            _listSegIds = opt->get(key+".list").as< vector<int> >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".calcESP") ) {
src/libctp/calculators/qmultipole.h:            int calcESP = opt->get(key+".calcESP").as< int >();
src/libctp/calculators/qmultipole.h:            _espCubeFile = opt->get(key+".cube").as< string >();
src/libctp/calculators/qmultipole.h:            _espOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/qmultipole.h:            if (opt->exists(key+".doSystem")) {
src/libctp/calculators/qmultipole.h:                int doSystem = opt->get(key+".doSystem").as< int >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".calcESF") ) {
src/libctp/calculators/qmultipole.h:            int calcESF = opt->get(key+".calcESF").as< int >();
src/libctp/calculators/qmultipole.h:            _esfGridFile = opt->get(key+".grid").as< string >();
src/libctp/calculators/qmultipole.h:            _esfOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".calcAlpha") ) {
src/libctp/calculators/qmultipole.h:            int calcAlpha = opt->get(key+".calcAlpha").as< int >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".doSystem") ) {
src/libctp/calculators/qmultipole.h:            int doSystem = opt->get(key+".doSystem").as< int >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/qmultipole.h:            string alphaOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".cutoff") ) {
src/libctp/calculators/qmultipole.h:            _cutoff = opt->get(key+".cutoff").as< double >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".cutoff2") ) {
src/libctp/calculators/qmultipole.h:            _cutoff2 = opt->get(key+".cutoff2").as< double >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".expdamp") ) {
src/libctp/calculators/qmultipole.h:            _aDamp = opt->get(key+".expdamp").as< double >();
src/libctp/calculators/qmultipole.h:         if ( opt->exists(key+".scaling") ) {
src/libctp/calculators/qmultipole.h:            _scale1 = opt->get(key+".scaling").as< vector<double> >();
src/libctp/calculators/qmultipole.h:                cout << endl << "... ... WARNING: 1-N SCALING SWITCHED OFF"; }
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".wSOR_N") ) {
src/libctp/calculators/qmultipole.h:            _wSOR_N = opt->get(key+".wSOR_N").as< float >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".wSOR_C") ) {
src/libctp/calculators/qmultipole.h:            _wSOR_C = opt->get(key+".wSOR_C").as< float >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".maxiter") ) {
src/libctp/calculators/qmultipole.h:            _maxIter = opt->get(key+".maxiter").as< int >();
src/libctp/calculators/qmultipole.h:        if ( opt->exists(key+".tolerance") ) {
src/libctp/calculators/qmultipole.h:            _epsTol = opt->get(key+".tolerance").as< double >();
src/libctp/calculators/qmultipole.h:    if (!top->isEStatified()) { this->EStatify(top, opt); }
src/libctp/calculators/qmultipole.h:    if (_calcESP && (!_ESPdoSystem))      { this->CalculateESPInput(top); }
src/libctp/calculators/qmultipole.h:    if (this->_calcESF)                   { this->CalculateESF(top); }
src/libctp/calculators/qmultipole.h:    if (this->_calcAlphaMol)              { this->CalculateAlphaInput(top); }
src/libctp/calculators/qmultipole.h: * Creates polar-site templates using mapping file
src/libctp/calculators/qmultipole.h: * ... Calls GDMA punch-file parser to load multipoles and polarizabilities
src/libctp/calculators/qmultipole.h:    string allocFile = options->get(key+".multipoles").as<string> ();
src/libctp/calculators/qmultipole.h:    // Load polar-site indices from XML //
src/libctp/calculators/qmultipole.h:    Property allocation; // <- Which polar sites are part of which fragment?
src/libctp/calculators/qmultipole.h:    /* --- MULTIPOLES.XML Structure ---
src/libctp/calculators/qmultipole.h:        string molName = (*molit)->get("name").as<string> ();
src/libctp/calculators/qmultipole.h:        list<Property *> segs = (*molit)->Select(key);
src/libctp/calculators/qmultipole.h:            string segName = (*segit)->get("name").as<string> ();
src/libctp/calculators/qmultipole.h:            string mpoleFile_n = (*segit)->get("multipoles_n").as<string> ();
src/libctp/calculators/qmultipole.h:            if ( (*segit)->exists("multipoles_e")) {
src/libctp/calculators/qmultipole.h:                string mpoleFile_e = (*segit)->get("multipoles_e").as<string>();
src/libctp/calculators/qmultipole.h:            if ( (*segit)->exists("multipoles_h")) {
src/libctp/calculators/qmultipole.h:                string mpoleFile_h = (*segit)->get("multipoles_h").as<string>();
src/libctp/calculators/qmultipole.h:            if ( (*segit)->exists("map2md")) {
src/libctp/calculators/qmultipole.h:                int map2md = (*segit)->get("map2md").as<int>();
src/libctp/calculators/qmultipole.h:            list<Property *> frags = (*segit)->Select(key);
src/libctp/calculators/qmultipole.h:                string fragName = (*fragit)->get("name").as<string> ();
src/libctp/calculators/qmultipole.h:                string mpoles = (*fragit)->get("mpoles").as<string> ();
src/libctp/calculators/qmultipole.h:        string segName = strit->first;
src/libctp/calculators/qmultipole.h:        string filename = strit->second;
src/libctp/calculators/qmultipole.h:        map_seg_chrgStates[segName][0] = false; // <- negative
src/libctp/calculators/qmultipole.h:        map_seg_chrgStates[segName][1] = true;  // <- neutral
src/libctp/calculators/qmultipole.h:        map_seg_chrgStates[segName][2] = false; // <- positive
src/libctp/calculators/qmultipole.h:    state = -1;
src/libctp/calculators/qmultipole.h:            string segName = strit->first;
src/libctp/calculators/qmultipole.h:            string filename = strit->second;
src/libctp/calculators/qmultipole.h:                polesNeutral[i]->setQs( polesAnion[i]->getQs(state), state );
src/libctp/calculators/qmultipole.h:                polesNeutral[i]->setPs( polesAnion[i]->getPs(state), state );
src/libctp/calculators/qmultipole.h:            string segName = strit->first;
src/libctp/calculators/qmultipole.h:            string filename = strit->second;
src/libctp/calculators/qmultipole.h:                polesNeutral[i]->setQs( polesCation[i]->getQs(state), state );
src/libctp/calculators/qmultipole.h:                polesNeutral[i]->setPs( polesCation[i]->getPs(state), state );
src/libctp/calculators/qmultipole.h:    // Forward information on polar-site templates to topology //
src/libctp/calculators/qmultipole.h: * @return Yields polar-site template container
src/libctp/calculators/qmultipole.h:                Nx = (Nx >= 0) ? Nx : -Nx;
src/libctp/calculators/qmultipole.h:                Ny = (Ny >= 0) ? Ny : -Ny;
src/libctp/calculators/qmultipole.h:                Nz = (Nz >= 0) ? Nz : -Nz;
src/libctp/calculators/qmultipole.h:    for (sit = this->_map_seg_APolarSites.begin();
src/libctp/calculators/qmultipole.h:         sit != this->_map_seg_APolarSites.end();
src/libctp/calculators/qmultipole.h:        cout << endl << "... ... ... ESP for segment type " << sit->first
src/libctp/calculators/qmultipole.h:        vector< APolarSite* > poles = sit->second;
src/libctp/calculators/qmultipole.h:            CoM += (*pit)->getPos();
src/libctp/calculators/qmultipole.h:            vec newpos = (*pit)->getPos() - CoM;
src/libctp/calculators/qmultipole.h:            (*pit)->setPos( newpos );
src/libctp/calculators/qmultipole.h:        for (int state = -1; state < 2; ++state) {
src/libctp/calculators/qmultipole.h:            bool hasState = _map_seg_chrgStates[sit->first][state+1];
src/libctp/calculators/qmultipole.h:                (*pit)->Depolarize();
src/libctp/calculators/qmultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/qmultipole.h:            // Prepare cube file, for structure sample see cube-file parser
src/libctp/calculators/qmultipole.h:            string espOutFile =  sit->first
src/libctp/calculators/qmultipole.h:            fprintf(out, "ESP %4s CHARGE %1d \n", (sit->first).c_str(), state);
src/libctp/calculators/qmultipole.h:            this->CalculateESP(poles, out);
src/libctp/calculators/qmultipole.h:    Segment *seg = top->getSegment(segId);
src/libctp/calculators/qmultipole.h:    cout << "... ... ... Selected segment type " << seg->getName() << flush;
src/libctp/calculators/qmultipole.h:    vector< APolarSite* > poles = seg->APolarSites();
src/libctp/calculators/qmultipole.h:        CoM += (*pit)->getPos();
src/libctp/calculators/qmultipole.h:        vec newpos = (*pit)->getPos() - CoM;
src/libctp/calculators/qmultipole.h:        (*pit)->setPos( newpos );
src/libctp/calculators/qmultipole.h:    for (int state = -1; state < 2; ++state) {
src/libctp/calculators/qmultipole.h:        bool hasState = _map_seg_chrgStates[seg->getName()][state+1];
src/libctp/calculators/qmultipole.h:            (*pit)->Charge(state);
src/libctp/calculators/qmultipole.h:        string espOutFile = seg->getName()
src/libctp/calculators/qmultipole.h:                        + "_ID" + boost::lexical_cast<string>(seg->getId())
src/libctp/calculators/qmultipole.h:                      seg->getName().c_str(), seg->getId(), state);
src/libctp/calculators/qmultipole.h:        this->CalculateESP(poles, out);
src/libctp/calculators/qmultipole.h: * ... NOTE Writes output in cube-file format, two header lines should
src/libctp/calculators/qmultipole.h:        string elem = (*pit)->_name;
src/libctp/calculators/qmultipole.h:                (*pit)->getPos().getX() * NM2BOHR,
src/libctp/calculators/qmultipole.h:                (*pit)->getPos().getY() * NM2BOHR,
src/libctp/calculators/qmultipole.h:                (*pit)->getPos().getZ() * NM2BOHR);
src/libctp/calculators/qmultipole.h:    double int2V = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/qmultipole.h:    // Calculate self-energy of configuration (just out of interest)
src/libctp/calculators/qmultipole.h:    double E2eV = 1.602176487e-19 * 1e9 * 1/(4*M_PI*8.854187817e-12);
src/libctp/calculators/qmultipole.h:         << "Electrostatic self-energy of configuration: "
src/libctp/calculators/qmultipole.h:    double int2N_C = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 * 1.000e-18;
src/libctp/calculators/qmultipole.h:    intt.open(this->_esfGridFile.c_str());
src/libctp/calculators/qmultipole.h:            //  -0.3853409355   0.0004894995  -0.0003833545
src/libctp/calculators/qmultipole.h:            //  -0.0002321905   0.2401559510   0.6602334308
src/libctp/calculators/qmultipole.h:    this->_esfGrid = gridPoints;
src/libctp/calculators/qmultipole.h:    for (sit = this->_map_seg_APolarSites.begin();
src/libctp/calculators/qmultipole.h:         sit != this->_map_seg_APolarSites.end();
src/libctp/calculators/qmultipole.h:        cout << endl << "... ... ... ESF for segment " << sit->first << flush;
src/libctp/calculators/qmultipole.h:        vector< APolarSite* > poles = sit->second;
src/libctp/calculators/qmultipole.h:        for (int state = -1; state < 2; ++state) {
src/libctp/calculators/qmultipole.h:            bool hasState = _map_seg_chrgStates[sit->first][state+1];
src/libctp/calculators/qmultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/qmultipole.h:            string esfOutFile =  sit->first
src/libctp/calculators/qmultipole.h:             << sit->first << flush;
src/libctp/calculators/qmultipole.h:        string alphaOutFile = sit->first + "_" + _alphaOutFile;
src/libctp/calculators/qmultipole.h:        if (_map_seg_chrgStates[sit->first][state+1]) {
src/libctp/calculators/qmultipole.h:            for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/qmultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/qmultipole.h:            this->CalculateAlphaRigid(sit->second, out, false);
src/libctp/calculators/qmultipole.h:        if (_map_seg_chrgStates[sit->first][state+1]) {
src/libctp/calculators/qmultipole.h:            for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/qmultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/qmultipole.h:            this->CalculateAlphaRigid(sit->second, out, false);
src/libctp/calculators/qmultipole.h:        state = -1;
src/libctp/calculators/qmultipole.h:        if (_map_seg_chrgStates[sit->first][state+1]) {
src/libctp/calculators/qmultipole.h:            for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/qmultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/qmultipole.h:            this->CalculateAlphaRigid(sit->second, out, false);
src/libctp/calculators/qmultipole.h:        for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/qmultipole.h:                (*pit)->Charge(0);
src/libctp/calculators/qmultipole.h:    double ayx, ayy, ayz;             // |-> Polarizability tensor
src/libctp/calculators/qmultipole.h:    double siteU1x, siteU1y, siteU1z; // |-> Molecular ind. dipole
src/libctp/calculators/qmultipole.h:    double extFx, extFy, extFz;       // |-> External applied field
src/libctp/calculators/qmultipole.h:    // External field in x-direction //
src/libctp/calculators/qmultipole.h:        (*pit)->FPx = extFx;
src/libctp/calculators/qmultipole.h:        (*pit)->FPy = extFy;
src/libctp/calculators/qmultipole.h:        (*pit)->FPz = extFz;
src/libctp/calculators/qmultipole.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/qmultipole.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/qmultipole.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/qmultipole.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/qmultipole.h:    axx = - siteU1x / extFx;
src/libctp/calculators/qmultipole.h:    ayx = - siteU1y / extFx;
src/libctp/calculators/qmultipole.h:    azx = - siteU1z / extFx;
src/libctp/calculators/qmultipole.h:    // External field in y-direction //
src/libctp/calculators/qmultipole.h:        (*pit)->FPx = extFx;
src/libctp/calculators/qmultipole.h:        (*pit)->FPy = extFy;
src/libctp/calculators/qmultipole.h:        (*pit)->FPz = extFz;
src/libctp/calculators/qmultipole.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/qmultipole.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/qmultipole.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/qmultipole.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/qmultipole.h:    axy = - siteU1x / extFy;
src/libctp/calculators/qmultipole.h:    ayy = - siteU1y / extFy;
src/libctp/calculators/qmultipole.h:    azy = - siteU1z / extFy;
src/libctp/calculators/qmultipole.h:    // External field in z-direction //
src/libctp/calculators/qmultipole.h:        (*pit)->FPx = extFx;
src/libctp/calculators/qmultipole.h:        (*pit)->FPy = extFy;
src/libctp/calculators/qmultipole.h:        (*pit)->FPz = extFz;
src/libctp/calculators/qmultipole.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/qmultipole.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/qmultipole.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/qmultipole.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/qmultipole.h:    axz = - siteU1x / extFz;
src/libctp/calculators/qmultipole.h:    ayz = - siteU1y / extFz;
src/libctp/calculators/qmultipole.h:    azz = - siteU1z / extFz;
src/libctp/calculators/qmultipole.h:        SUM_alpha += (*pit)->getIsoP();
src/libctp/calculators/qmultipole.h: * Induces dipoles on polar sites in self-consistent manner until converged
src/libctp/calculators/qmultipole.h:    int    maxIter = this->_maxIter;
src/libctp/calculators/qmultipole.h:    double wSOR = this->_wSOR_N;
src/libctp/calculators/qmultipole.h:    double eTOL = this->_epsTol;
src/libctp/calculators/qmultipole.h:        (*pit1)->InduceDirect();
src/libctp/calculators/qmultipole.h:            (*pit1)->ResetFieldU();
src/libctp/calculators/qmultipole.h:        // Calculate higher-order induction field
src/libctp/calculators/qmultipole.h:            (*pit1)->Induce(wSOR);
src/libctp/calculators/qmultipole.h:        double maxdU = -1;
src/libctp/calculators/qmultipole.h:             double dU = (*pit1)->HistdU();
src/libctp/calculators/qmultipole.h:        else if (iter == maxIter - 1) {
src/libctp/calculators/qmultipole.h: * Equips segments with polar sites using polar-site template container
src/libctp/calculators/qmultipole.h: * ... Translates + rotates polar-site into global frame
src/libctp/calculators/qmultipole.h:    for (sit = top->Segments().begin();
src/libctp/calculators/qmultipole.h:         sit < top->Segments().end();
src/libctp/calculators/qmultipole.h:        vector<APolarSite*> poleSites = _map_seg_APolarSites.at(seg->getName());
src/libctp/calculators/qmultipole.h:        seg->setChrgStates(_map_seg_chrgStates[seg->getName()]);
src/libctp/calculators/qmultipole.h:        bool map2md = _map2md[seg->getName()];
src/libctp/calculators/qmultipole.h:        for (fit = seg->Fragments().begin();
src/libctp/calculators/qmultipole.h:             fit < seg->Fragments().end();
src/libctp/calculators/qmultipole.h:            string idkey = frag->getName() + seg->getName()
src/libctp/calculators/qmultipole.h:                         + seg->getMolecule()->getName();
src/libctp/calculators/qmultipole.h:                if (polesInFrag.size() != frag->Atoms().size()) {
src/libctp/calculators/qmultipole.h:                    cout << endl << "ERROR: Segment " << seg->getName() <<
src/libctp/calculators/qmultipole.h:                            " Fragment " << frag->getName() <<
src/libctp/calculators/qmultipole.h:                APolarSite *templ = poleSites[poleId-1];
src/libctp/calculators/qmultipole.h:                APolarSite *newSite = top->AddAPolarSite(name);
src/libctp/calculators/qmultipole.h:                newSite->ImportFrom(templ);
src/libctp/calculators/qmultipole.h:                seg->AddAPolarSite(newSite);
src/libctp/calculators/qmultipole.h:                frag->AddAPolarSite(newSite);
src/libctp/calculators/qmultipole.h:                    newSite->Translate(frag->getTransQM2MD());
src/libctp/calculators/qmultipole.h:                    newSite->Rotate(frag->getRotQM2MD(), frag->getCoMD());
src/libctp/calculators/qmultipole.h:                    vec mdpos = frag->Atoms()[i]->getPos();
src/libctp/calculators/qmultipole.h:                    newSite->setPos(mdpos);
src/libctp/calculators/qmultipole.h:                    if (newSite->getRank() > 0) {
src/libctp/calculators/qmultipole.h:                        " prevents use of higher-rank multipoles. " << endl;
src/libctp/calculators/qmultipole.h:    top->setIsEStatified(true);
src/libctp/calculators/qmultipole.h:    if (!top->isRigid()) {
src/libctp/calculators/qmultipole.h:        bool isRigid = top->Rigidify();
src/libctp/calculators/qmultipole.h:    if (top->isEStatified() == false) {
src/libctp/calculators/qmultipole.h:        this->DistributeMpoles(top);
src/libctp/calculators/qmultipole.h:        cout << endl << "... ... Created " << top->APolarSites().size()
src/libctp/calculators/qmultipole.h:        cout << endl << "... ... Writing polar-site coordinates to "
src/libctp/calculators/qmultipole.h:        for (sit = top->Segments().begin();
src/libctp/calculators/qmultipole.h:             sit < top->Segments().end();
src/libctp/calculators/qmultipole.h:            (*sit)->WritePDB(mpPDB, "Multipoles", "Charges");
src/libctp/calculators/qmultipole.h:                    4*top->getSegment(1)->APolarSites().size()
src/libctp/calculators/qmultipole.h:                   +4*top->getSegment(2)->APolarSites().size());
src/libctp/calculators/qmultipole.h:        for (pit = top->getSegment(1)->APolarSites().begin();
src/libctp/calculators/qmultipole.h:             pit < top->getSegment(1)->APolarSites().end();
src/libctp/calculators/qmultipole.h:            (*pit)->PrintTensorPDB(paXYZ, -1);
src/libctp/calculators/qmultipole.h:        for (pit = top->getSegment(2)->APolarSites().begin();
src/libctp/calculators/qmultipole.h:             pit < top->getSegment(2)->APolarSites().end();
src/libctp/calculators/qmultipole.h:            (*pit)->PrintTensorPDB(paXYZ, -1);
src/libctp/calculators/qmultipole.h:        this->CalculateESPRigid(top);
src/libctp/calculators/qmultipole.h:        if (this->_calcAlphaMol) {
src/libctp/calculators/qmultipole.h:        if (this->_calcESP) {
src/libctp/calculators/qmultipole.h:        if (this->_calcESF) {
src/libctp/calculators/qmultipole.h:                "Frame" + boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/qmultipole.h:        for (sit = top->Segments().begin();
src/libctp/calculators/qmultipole.h:             sit < top->Segments().end();
src/libctp/calculators/qmultipole.h:            vector< APolarSite* > poles = (*sit)->APolarSites();
src/libctp/calculators/qmultipole.h:            cout << "\r... ... ... Segment " << (*sit)->getId() << " " << flush;
src/libctp/calculators/qmultipole.h:            fprintf(out, "%4d %4s ", (*sit)->getId(),(*sit)->getName().c_str());
src/libctp/calculators/qmultipole.h:            if ( (*sit)->hasChrgState(state) ) {
src/libctp/calculators/qmultipole.h:                    (*pit)->Charge(state);
src/libctp/calculators/qmultipole.h:                this->CalculateAlphaRigid(poles, out, true);
src/libctp/calculators/qmultipole.h:            state = -1;
src/libctp/calculators/qmultipole.h:            if ( (*sit)->hasChrgState(state) ) {
src/libctp/calculators/qmultipole.h:                    (*pit)->Charge(state);
src/libctp/calculators/qmultipole.h:                this->CalculateAlphaRigid(poles, out, true);
src/libctp/calculators/qmultipole.h:            if ( (*sit)->hasChrgState(state) ) {
src/libctp/calculators/qmultipole.h:                    (*pit)->Charge(state);
src/libctp/calculators/qmultipole.h:                this->CalculateAlphaRigid(poles, out, true);
src/libctp/calculators/qmultipole.h:                (*pit)->Charge(0);
src/libctp/calculators/qmultipole.h:        _nextSite = top->Segments().begin();
src/libctp/calculators/qmultipole.h:        for ( ; (*_nextSite)->getId() != this->_firstSeg &&
src/libctp/calculators/qmultipole.h:                  _nextSite < top->Segments().end(); ++_nextSite) { ; }
src/libctp/calculators/qmultipole.h:            _listSegs.push_back(top->getSegment(segId));
src/libctp/calculators/qmultipole.h:        siteOps[id]->InitSlotData(top);
src/libctp/calculators/qmultipole.h:        siteOps[id]->Start();
src/libctp/calculators/qmultipole.h:        siteOps[id]->WaitDone();
src/libctp/calculators/qmultipole.h:                          + boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/qmultipole.h:            fprintf(out, "%4d ", (*sit)->getId() );
src/libctp/calculators/qmultipole.h:            fprintf(out, "%4s ", (*sit)->getName().c_str() );
src/libctp/calculators/qmultipole.h:            if ((*sit)->hasChrgState(0)) {
src/libctp/calculators/qmultipole.h:                fprintf(out, "   0 %3.8f   ", (*sit)->getEMpoles(0) );
src/libctp/calculators/qmultipole.h:            if ((*sit)->hasChrgState(-1)) {
src/libctp/calculators/qmultipole.h:                fprintf(out, "  -1 %3.8f   ", (*sit)->getEMpoles(-1) );
src/libctp/calculators/qmultipole.h:            if ((*sit)->hasChrgState(+1)) {
src/libctp/calculators/qmultipole.h:                fprintf(out, "  +1 %3.8f   ", (*sit)->getEMpoles(+1) );
src/libctp/calculators/qmultipole.h:            if ((*sit)->hasChrgState(0)) {
src/libctp/calculators/qmultipole.h:                fprintf(out, "   0 %3d   ", _log_seg_iter[(*sit)->getId()][1]);
src/libctp/calculators/qmultipole.h:            if ((*sit)->hasChrgState(-1)) {
src/libctp/calculators/qmultipole.h:                fprintf(out, "  -1 %3d   ", _log_seg_iter[(*sit)->getId()][0]);
src/libctp/calculators/qmultipole.h:            if ((*sit)->hasChrgState(+1)) {
src/libctp/calculators/qmultipole.h:                fprintf(out, "  +1 %3d   ", _log_seg_iter[(*sit)->getId()][2]);
src/libctp/calculators/qmultipole.h:                    _log_seg_sphereSize[(*sit)->getId()]);
src/libctp/calculators/qmultipole.h:                    _log_seg_com[(*sit)->getId()].getX(),
src/libctp/calculators/qmultipole.h:                    _log_seg_com[(*sit)->getId()].getY(),
src/libctp/calculators/qmultipole.h:                    _log_seg_com[(*sit)->getId()].getZ());
src/libctp/calculators/qmultipole.h:    this->PostProcess(top);
src/libctp/calculators/qmultipole.h:        if (_nextSite == top->Segments().end()) {
src/libctp/calculators/qmultipole.h:        else if ((*_nextSite)->getId() > _lastSeg && _lastSeg > 0) {
src/libctp/calculators/qmultipole.h:                 << workOnThis->getId() << flush;
src/libctp/calculators/qmultipole.h:                 << workOnThis->getId() << flush;
src/libctp/calculators/qmultipole.h:        _seg = _master->RequestNextSite(_id, _top);
src/libctp/calculators/qmultipole.h:        else { this->EvalSite(_top, _seg); }
src/libctp/calculators/qmultipole.h:    _APolarSites.resize(top->Segments().size());
src/libctp/calculators/qmultipole.h:    assert(top->Segments().size() == _APolarSites.size());
src/libctp/calculators/qmultipole.h:    for (sitRef = top->Segments().begin(), sitNew = _APolarSites.begin();
src/libctp/calculators/qmultipole.h:         sitRef < top->Segments().end();
src/libctp/calculators/qmultipole.h:        (*sitNew).resize((*sitRef)->APolarSites().size());
src/libctp/calculators/qmultipole.h:        for (pitRef = (*sitRef)->APolarSites().begin(),
src/libctp/calculators/qmultipole.h:             pitRef < (*sitRef)->APolarSites().end();
src/libctp/calculators/qmultipole.h:            (*pitNew)->ImportFrom(*pitRef, "full");
src/libctp/calculators/qmultipole.h:            (*pitNew)->Charge(0);
src/libctp/calculators/qmultipole.h: * ... Determine polarization sphere via cut-off
src/libctp/calculators/qmultipole.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/qmultipole.h:    this->_segsPolSphere.clear(); // <- Segments    within cutoff
src/libctp/calculators/qmultipole.h:    this->_segsOutSphere.clear(); // <- Segments    within cutoff1, cutoff2
src/libctp/calculators/qmultipole.h:    this->_polsPolSphere.clear(); // <- Polar sites within cutoff
src/libctp/calculators/qmultipole.h:    this->_polsOutSphere.clear(); // <- Polar sites within cutoff1, cutoff2
src/libctp/calculators/qmultipole.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/qmultipole.h:        double r12 = abs(_top->PbShortestConnect((*sit)->getPos(),
src/libctp/calculators/qmultipole.h:                                                    seg->getPos()));
src/libctp/calculators/qmultipole.h:        if      ( r12 > _master->_cutoff2) { continue; }
src/libctp/calculators/qmultipole.h:        else if ( r12 > _master->_cutoff ) {
src/libctp/calculators/qmultipole.h:            _polsOutSphere.push_back( _APolarSites[(*sit)->getId() - 1] );
src/libctp/calculators/qmultipole.h:            _polsPolSphere.push_back( _APolarSites[(*sit)->getId() - 1] );
src/libctp/calculators/qmultipole.h://        (*sit)->WritePDB(out, "Multipoles", "");
src/libctp/calculators/qmultipole.h:    if (_master->_maverick) {
src/libctp/calculators/qmultipole.h:    this->Depolarize();
src/libctp/calculators/qmultipole.h:            (*pit)->Depolarize();
src/libctp/calculators/qmultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/qmultipole.h:        if (_master->_maverick) {
src/libctp/calculators/qmultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/qmultipole.h:        this->Charge(state);
src/libctp/calculators/qmultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/qmultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/qmultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/qmultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/qmultipole.h://        string toFile = boost::lexical_cast<string>(_seg->getId())
src/libctp/calculators/qmultipole.h://        vec CoM = _seg->getPos();
src/libctp/calculators/qmultipole.h://                vec r  = _top->PbShortestConnect((*pit)->getPos(), CoM);
src/libctp/calculators/qmultipole.h://                int segId = (*pit)->getSegment()->getId();
src/libctp/calculators/qmultipole.h://                vec u = vec( (*pit)->U1x, (*pit)->U1y, (*pit)->U1z );
src/libctp/calculators/qmultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/qmultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/qmultipole.h:        // this->Depolarize(); // OVERRIDE
src/libctp/calculators/qmultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/qmultipole.h:                (*pit1)->ResetFieldP();
src/libctp/calculators/qmultipole.h:                (*pit1)->ResetU1Hist();
src/libctp/calculators/qmultipole.h:    state = -1;
src/libctp/calculators/qmultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/qmultipole.h:        if (_master->_maverick) {
src/libctp/calculators/qmultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/qmultipole.h:        this->Charge(state);
src/libctp/calculators/qmultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/qmultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/qmultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/qmultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/qmultipole.h:            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/qmultipole.h:        // this->Depolarize(); // OVERRIDE
src/libctp/calculators/qmultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/qmultipole.h:                (*pit1)->ResetFieldP();
src/libctp/calculators/qmultipole.h:                (*pit1)->ResetU1Hist();
src/libctp/calculators/qmultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/qmultipole.h:        if (_master->_maverick) {
src/libctp/calculators/qmultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/qmultipole.h:        this->Charge(state);
src/libctp/calculators/qmultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/qmultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/qmultipole.h:        else                  EState = this->EnergyStatic(state);
src/libctp/calculators/qmultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/qmultipole.h://        string toFile = boost::lexical_cast<string>(_seg->getId())
src/libctp/calculators/qmultipole.h://        vec CoM = _seg->getPos();
src/libctp/calculators/qmultipole.h://                vec r  = _top->PbShortestConnect((*pit)->getPos(), CoM);
src/libctp/calculators/qmultipole.h://                int segId = (*pit)->getSegment()->getId();
src/libctp/calculators/qmultipole.h://                vec u = vec( (*pit)->U1x, (*pit)->U1y, (*pit)->U1z );
src/libctp/calculators/qmultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/qmultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/qmultipole.h:        this->Depolarize();
src/libctp/calculators/qmultipole.h:    this->_master->_logMutex.Lock();
src/libctp/calculators/qmultipole.h:    _master->_log_seg_iter[_seg->getId()] = iters;
src/libctp/calculators/qmultipole.h:    _master->_log_seg_sphereSize[_seg->getId()] = _polsPolSphere.size();
src/libctp/calculators/qmultipole.h:    _master->_log_seg_com[_seg->getId()] = _seg->getPos();
src/libctp/calculators/qmultipole.h:    _master->_log_evaluated_segs.push_back(_seg);
src/libctp/calculators/qmultipole.h:    this->_master->_logMutex.Unlock();
src/libctp/calculators/qmultipole.h:    this->Charge(0);
src/libctp/calculators/qmultipole.h:    for (pit = _APolarSites[_seg->getId()-1].begin();
src/libctp/calculators/qmultipole.h:         pit < _APolarSites[_seg->getId()-1].end();
src/libctp/calculators/qmultipole.h:        (*pit)->Charge(state);
src/libctp/calculators/qmultipole.h:    double wSOR = (state == 0) ? _master->_wSOR_N : _master->_wSOR_C;
src/libctp/calculators/qmultipole.h:    double eTOL = this->_master->_epsTol;
src/libctp/calculators/qmultipole.h:    int    maxI = this->_master->_maxIter;
src/libctp/calculators/qmultipole.h:    // Inter-site fields (arising from perm. m'poles) //
src/libctp/calculators/qmultipole.h://    cout << endl << "... ... ... 0th-order field" << flush;
src/libctp/calculators/qmultipole.h:    // 1st-order induction //
src/libctp/calculators/qmultipole.h:                 (*pit1)->InduceDirect();
src/libctp/calculators/qmultipole.h:    // Higher-order induction //
src/libctp/calculators/qmultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/qmultipole.h:        // Intra-site contribution to induction field
src/libctp/calculators/qmultipole.h://        cout << " | Intra-Site (" << iter << ")" << flush;
src/libctp/calculators/qmultipole.h:        // Inter-site contribution to induction field
src/libctp/calculators/qmultipole.h://        cout << " | Inter-Site (" << iter << ")" << flush;
src/libctp/calculators/qmultipole.h:                 (*pit1)->Induce(wSOR);
src/libctp/calculators/qmultipole.h:        double maxdU = -1;
src/libctp/calculators/qmultipole.h:                 double dU = (*pit1)->HistdU();
src/libctp/calculators/qmultipole.h:        else if (iter == maxI - 1) {
src/libctp/calculators/qmultipole.h:            this->_master->LockCout();
src/libctp/calculators/qmultipole.h:                 << _seg->getId() << " - state " << state
src/libctp/calculators/qmultipole.h:            this->_master->UnlockCout();
src/libctp/calculators/qmultipole.h://         << " - wSOR " << wSOR
src/libctp/calculators/qmultipole.h://         << " - Iterations " << iter << flush;
src/libctp/calculators/qmultipole.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/qmultipole.h:    vector< APolarSite* > central = _APolarSites[ _seg->getId() - 1 ];
src/libctp/calculators/qmultipole.h:        int id = (*seg1)->getId();
src/libctp/calculators/qmultipole.h:        if (id == _seg->getId()) {
src/libctp/calculators/qmultipole.h:        for (pit1 = _APolarSites[id-1].begin();
src/libctp/calculators/qmultipole.h:             pit1 < _APolarSites[id-1].end();
src/libctp/calculators/qmultipole.h:    if (_master->_maverick) {
src/libctp/calculators/qmultipole.h: * Calculates electrostatic + induction energy of segment up to Q2-Q2
src/libctp/calculators/qmultipole.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/qmultipole.h:    // Inter-site energy //
src/libctp/calculators/qmultipole.h:    // Intra-site energy //
src/libctp/calculators/qmultipole.h:    // Outer-Shell energy //
src/libctp/calculators/qmultipole.h:    vector< APolarSite* > central = _APolarSites[ _seg->getId() - 1 ];
src/libctp/calculators/qmultipole.h:    if (_master->_maverick) {
src/libctp/calculators/qmultipole.h:    if (_master->_maverick) {
src/libctp/calculators/qmultipole.h:            (*pit)->Depolarize();
src/libctp/calculators/qmultipole.h:    e12  = pol.getPos() - r;
src/libctp/calculators/qmultipole.h:    rbx = - pol._locX * e12;
src/libctp/calculators/qmultipole.h:    rby = - pol._locY * e12;
src/libctp/calculators/qmultipole.h:    rbz = - pol._locZ * e12;
src/libctp/calculators/qmultipole.h:    e12  = pol.getPos() - r;
src/libctp/calculators/qmultipole.h:        rbx = - rax;
src/libctp/calculators/qmultipole.h:        rby = - ray;
src/libctp/calculators/qmultipole.h:        rbz = - raz;
src/libctp/calculators/qmultipole.h:    // Field generated by rank-0 m'pole
src/libctp/calculators/qmultipole.h:    // Field generated by rank-1 m'pole
src/libctp/calculators/qmultipole.h:    // Field generated by rank-2 m'pole
src/libctp/calculators/qmultipole.h: * Used in molecular-polarizability calculator (initialize stage)
src/libctp/calculators/qmultipole.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/qmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/qmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/qmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/qmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/qmultipole.h:        rbx = - rax;
src/libctp/calculators/qmultipole.h:        rby = - ray;
src/libctp/calculators/qmultipole.h:        rbz = - raz;
src/libctp/calculators/qmultipole.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/qmultipole.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/qmultipole.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/qmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/qmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/qmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/qmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/qmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/qmultipole.h:        rbx = - rax;
src/libctp/calculators/qmultipole.h:        rby = - ray;
src/libctp/calculators/qmultipole.h:        rbz = - raz;
src/libctp/calculators/qmultipole.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/qmultipole.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/qmultipole.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/qmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/qmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/qmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/qmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/qmultipole.h:        rbx = - rax;
src/libctp/calculators/qmultipole.h:        rby = - ray;
src/libctp/calculators/qmultipole.h:        rbz = - raz;
src/libctp/calculators/qmultipole.h:    // Fields generated by rank-0 m'poles
src/libctp/calculators/qmultipole.h:    // Fields generated by rank-1 m'poles
src/libctp/calculators/qmultipole.h:    // Fields generated by rank-2 m'poles
src/libctp/calculators/qmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/qmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/qmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/qmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/qmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/qmultipole.h:        rbx = - rax;
src/libctp/calculators/qmultipole.h:        rby = - ray;
src/libctp/calculators/qmultipole.h:        rbz = - raz;
src/libctp/calculators/qmultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/qmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/qmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/qmultipole.h:    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
src/libctp/calculators/qmultipole.h:    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
src/libctp/calculators/qmultipole.h:    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
src/libctp/calculators/qmultipole.h:    //cout << "seg2  " << pol2.getSegment()->getId() << endl;
src/libctp/calculators/qmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/qmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/qmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/qmultipole.h:        rbx = - rax;
src/libctp/calculators/qmultipole.h:        rby = - ray;
src/libctp/calculators/qmultipole.h:        rbz = - raz;
src/libctp/calculators/qmultipole.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/qmultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/qmultipole.h:        //cout << "E up to q <-> q " << E << endl;
src/libctp/calculators/qmultipole.h:        //cout << "E up to q <-> d " << E << endl;
src/libctp/calculators/qmultipole.h:        //cout << "E up to q <-> Q " << E << endl;
src/libctp/calculators/qmultipole.h:        //cout << "E up to d <-> d " << E << endl;
src/libctp/calculators/qmultipole.h:        //cout << "E up to d <-> Q " << E << endl;
src/libctp/calculators/qmultipole.h:        //cout << "E up to Q <-> Q " << E << endl;
src/libctp/calculators/qmultipole.h: * Designed for use in ESP calculator (init. stage). Only for error-checking.
src/libctp/calculators/qmultipole.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/qmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/qmultipole.h:        rbx = - rax;
src/libctp/calculators/qmultipole.h:        rby = - ray;
src/libctp/calculators/qmultipole.h:        rbz = - raz;
src/libctp/calculators/qmultipole.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/qmultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/qmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/qmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/qmultipole.h:    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
src/libctp/calculators/qmultipole.h:    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
src/libctp/calculators/qmultipole.h:    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
src/libctp/calculators/qmultipole.h:    //cout << "seg2  " << pol2.getSegment()->getId() << endl;
src/libctp/calculators/qmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/qmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/qmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/qmultipole.h:        rbx = - rax;
src/libctp/calculators/qmultipole.h:        rby = - ray;
src/libctp/calculators/qmultipole.h:        rbz = - raz;
src/libctp/calculators/qmultipole.h:    double epp = 0.0; // <- Interaction perm. <> perm.
src/libctp/calculators/qmultipole.h:    double epu = 0.0; // <- Interaction perm. <> induced
src/libctp/calculators/qmultipole.h:    double euu = 0.0; // <- Interaction induced <> induced>
src/libctp/calculators/qmultipole.h:        //cout << "E up to q <-> q " << E << endl;
src/libctp/calculators/qmultipole.h:        //cout << "E up to q <-> d " << E << endl;
src/libctp/calculators/qmultipole.h:        //cout << "E up to q <-> Q " << E << endl;
src/libctp/calculators/qmultipole.h:        //cout << "E up to d <-> d " << E << endl;
src/libctp/calculators/qmultipole.h:        //cout << "E up to d <-> Q " << E << endl;
src/libctp/calculators/qmultipole.h:        //cout << "E up to Q <-> Q " << E << endl;      
src/libctp/calculators/qmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/qmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/qmultipole.h:    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
src/libctp/calculators/qmultipole.h:    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
src/libctp/calculators/qmultipole.h:    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
src/libctp/calculators/qmultipole.h:    //cout << "seg2  " << pol2.getSegment()->getId() << endl;
src/libctp/calculators/qmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/qmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/qmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/qmultipole.h:        rbx = - rax;
src/libctp/calculators/qmultipole.h:        rby = - ray;
src/libctp/calculators/qmultipole.h:        rbz = - raz;
src/libctp/calculators/qmultipole.h:    double epp = 0.0; // <- Interaction perm. <> perm.
src/libctp/calculators/qmultipole.h:    double epu = 0.0; // <- Interaction perm. <> induced
src/libctp/calculators/qmultipole.h:    double euu = 0.0; // <- Interaction induced <> induced>
src/libctp/calculators/qmultipole.h:    euu *= -0.5;
src/libctp/calculators/qmultipole.h:    epp *= -0.5;
src/libctp/calculators/qmultipole.h:    epu *= -0.5;
src/libctp/calculators/rates.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/rates.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/rates.h:    /* ---- OPTIONS.XML Structure -----
src/libctp/calculators/rates.h:    double T = options->get(key+".temperature").as<double> ();
src/libctp/calculators/rates.h:    _kT = 8.6173324e-5 * T;
src/libctp/calculators/rates.h:    vec F = options->get(key+".field").as<vec>();
src/libctp/calculators/rates.h:    if (options->exists(key+".method")) {
src/libctp/calculators/rates.h:        _rateType = options->get(key+".method").as<string> ();
src/libctp/calculators/rates.h:    if (options->exists(key+".nmaxvib")) {
src/libctp/calculators/rates.h:            _nMaxVib = options->get(key+".nmaxvib").as<double> ();
src/libctp/calculators/rates.h:            cout << endl << "... ... WARNING: No cut-off number for QM vibrations "
src/libctp/calculators/rates.h:        if (options->exists(key+".omegavib")) {
src/libctp/calculators/rates.h:            _omegaVib = options->get(key+".omegavib").as<double> ();
src/libctp/calculators/rates.h:    // this->ParseEnergiesXML(top, options);
src/libctp/calculators/rates.h:    string energiesXML = opt->get(key+".energiesXML").as<string> ();
src/libctp/calculators/rates.h:    /* --- ENERGIES.XML Structure ---
src/libctp/calculators/rates.h:     *              <!-- U_sG_sG, s->state, G->geometry !-->
src/libctp/calculators/rates.h:        list<Property*> segs = (*molit)->Select(key);
src/libctp/calculators/rates.h:            string segName = (*segit)->get("name").as<string> ();
src/libctp/calculators/rates.h:            if ( (*segit)->exists("U_cC_nN_e") &&
src/libctp/calculators/rates.h:                 (*segit)->exists("U_nC_nN_e") &&
src/libctp/calculators/rates.h:                 (*segit)->exists("U_cN_cC_e")    ) {
src/libctp/calculators/rates.h:                U_cC_nN_e = (*segit)->get("U_cC_nN_e").as< double > ();
src/libctp/calculators/rates.h:                U_nC_nN_e = (*segit)->get("U_nC_nN_e").as< double > ();
src/libctp/calculators/rates.h:                U_cN_cC_e = (*segit)->get("U_cN_cC_e").as< double > ();
src/libctp/calculators/rates.h:            if ( (*segit)->exists("U_cC_nN_h") &&
src/libctp/calculators/rates.h:                 (*segit)->exists("U_nC_nN_h") &&
src/libctp/calculators/rates.h:                 (*segit)->exists("U_cN_cC_h")    ) {
src/libctp/calculators/rates.h:                U_cC_nN_h = (*segit)->get("U_cC_nN_h").as< double > ();
src/libctp/calculators/rates.h:                U_nC_nN_h = (*segit)->get("U_nC_nN_h").as< double > ();
src/libctp/calculators/rates.h:                U_cN_cC_h = (*segit)->get("U_cN_cC_h").as< double > ();
src/libctp/calculators/rates.h:    cout << "\r... ... Evaluating pair " << qmpair->getId()+1 << ". " << flush;
src/libctp/calculators/rates.h:    string segName1 = qmpair->first->getName();
src/libctp/calculators/rates.h:    string segName2 = qmpair->second->getName();
src/libctp/calculators/rates.h:    pair_has_e = qmpair->isPathCarrier(-1);
src/libctp/calculators/rates.h:    pair_has_h = qmpair->isPathCarrier(+1);
src/libctp/calculators/rates.h:        this->CalculateRate(top, qmpair, -1);
src/libctp/calculators/rates.h:        this->CalculateRate(top, qmpair, +1);
src/libctp/calculators/rates.h:    const double NM2M    = 1.e-9;
src/libctp/calculators/rates.h:    const double hbar_eV = 6.58211899e-16;
src/libctp/calculators/rates.h:    Segment *seg1 = qmpair->first;
src/libctp/calculators/rates.h:    Segment *seg2 = qmpair->second;
src/libctp/calculators/rates.h:    double rate12 = 0.;                                       // 1->2
src/libctp/calculators/rates.h:    double rate21 = 0.;                                       // 2->1
src/libctp/calculators/rates.h:    double reorg12  = seg1->getU_nC_nN(state)                 // 1->2
src/libctp/calculators/rates.h:                    + seg2->getU_cN_cC(state);
src/libctp/calculators/rates.h:    double reorg21  = seg1->getU_cN_cC(state)                 // 2->1
src/libctp/calculators/rates.h:                    + seg2->getU_nC_nN(state);
src/libctp/calculators/rates.h:    double lOut     = qmpair->getLambdaO(state);              // 1->2 == + 2->1
src/libctp/calculators/rates.h:    double dG_Site  = seg2->getU_cC_nN(state)                 // 1->2 == - 2->1
src/libctp/calculators/rates.h:                    + seg2->getEMpoles(state)
src/libctp/calculators/rates.h:                    - seg1->getU_cC_nN(state)
src/libctp/calculators/rates.h:                    - seg1->getEMpoles(state);
src/libctp/calculators/rates.h:    double dG_Field = - state * _F * qmpair->R() * NM2M;      // 1->2 == - 2->1
src/libctp/calculators/rates.h:    double J2 = qmpair->getJeff2(state);                      // 1->2 == + 2->1
src/libctp/calculators/rates.h:    if (state == -1) {
src/libctp/calculators/rates.h:        // Charge hops Seg1 -> Seg2
src/libctp/calculators/rates.h:        reorg12 = _seg_U_nC_nN_e[seg1->getName()]
src/libctp/calculators/rates.h:                + _seg_U_cN_cC_e[seg2->getName()];
src/libctp/calculators/rates.h:        // Charge hops Seg2 -> Seg1
src/libctp/calculators/rates.h:        reorg21 = _seg_U_nC_nN_e[seg2->getName()]
src/libctp/calculators/rates.h:                + _seg_U_cN_cC_e[seg1->getName()];
src/libctp/calculators/rates.h:        // dG Seg1 -> Seg2
src/libctp/calculators/rates.h:        dG_Site = _seg_U_cC_nN_e[seg2->getName()] + seg2->getEMpoles(state)
src/libctp/calculators/rates.h:                - _seg_U_cC_nN_e[seg1->getName()] - seg1->getEMpoles(state);
src/libctp/calculators/rates.h:        // Charge hops Seg1 -> Seg2
src/libctp/calculators/rates.h:        reorg12 = _seg_U_nC_nN_h[seg1->getName()]
src/libctp/calculators/rates.h:                + _seg_U_cN_cC_h[seg2->getName()];
src/libctp/calculators/rates.h:        // Charge hops Seg2 -> Seg1
src/libctp/calculators/rates.h:        reorg21 = _seg_U_nC_nN_h[seg2->getName()]
src/libctp/calculators/rates.h:                + _seg_U_cN_cC_h[seg1->getName()];
src/libctp/calculators/rates.h:        // dG Seg1 -> Seg2
src/libctp/calculators/rates.h:        dG_Site = _seg_U_cC_nN_h[seg2->getName()] + seg2->getEMpoles(state)
src/libctp/calculators/rates.h:                - _seg_U_cC_nN_h[seg1->getName()] - seg1->getEMpoles(state);
src/libctp/calculators/rates.h:             << "... ... ERROR: Pair " << qmpair->getId() << " has negative "
src/libctp/calculators/rates.h:                "outer-sphere reorganization energy. Cannot calculate Jortner "
src/libctp/calculators/rates.h:             << "... ... WARNING: Pair " << qmpair->getId() << " has small "
src/libctp/calculators/rates.h:                "outer-sphere reorganization energy (" << lOut << "eV). Could "
src/libctp/calculators/rates.h:                "lead to over-estimated Jortner rates."
src/libctp/calculators/rates.h:            // Hopping from Seg1 -> Seg2
src/libctp/calculators/rates.h:                    * J2 * exp(-huang_rhys12) * pow(huang_rhys12, nvib) /
src/libctp/calculators/rates.h:                    * exp( -pow( (dG + nvib*_omegaVib + lOut) , 2 ) /
src/libctp/calculators/rates.h:            // Hopping from Seg2 -> Seg1
src/libctp/calculators/rates.h:                    * J2 * exp(-huang_rhys21) * pow(huang_rhys21, nvib) /
src/libctp/calculators/rates.h:                    * exp( -pow( (-dG + nvib*_omegaVib + lOut) , 2 ) /
src/libctp/calculators/rates.h:                * exp( - (+dG + reorg12)*(+dG + reorg12) / (4*_kT*reorg12) );
src/libctp/calculators/rates.h:                * exp( - (-dG + reorg21)*(-dG + reorg21) / (4*_kT*reorg21) );
src/libctp/calculators/rates.h:    qmpair->setRate12(rate12, state);
src/libctp/calculators/rates.h:    qmpair->setRate21(rate21, state);
src/libctp/calculators/rates.h:    qmpair->setIsPathCarrier(true, state);
src/libctp/calculators/sandbox.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/sandbox.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/sandbox.h:    this->LockCout();
src/libctp/calculators/sandbox.h:    cout << "\r... ... Overloading pair " << qmpair->getId() << ". " << flush;
src/libctp/calculators/sandbox.h:    this->UnlockCout();
src/libctp/calculators/sandbox.h:    for (sit = top->Segments().begin(); sit != top->Segments().end(); sit++) {
src/libctp/calculators/sandbox.h:        for (ait= top->Atoms().begin(); ait != top->Atoms().end(); ait++) {
src/libctp/calculators/sandbox.h:            int id = atm->getId();
src/libctp/calculators/sandbox.h:        Atom *atm = seg->Atoms()[1];
src/libctp/calculators/sandbox.h:        atm = seg->Atoms()[2];
src/libctp/calculators/sandbox.h:        atm = seg->Atoms()[10000];
src/libctp/calculators/sandbox.h:        atm = seg->Atoms()[14300];
src/libctp/calculators/stateserver.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/stateserver.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/stateserver.h:    if ( opt->exists(tag+".out") ) {
src/libctp/calculators/stateserver.h:        _outfile = opt->get(tag+".out").as< string > ();
src/libctp/calculators/stateserver.h:    if ( opt->exists(tag+".pdb") ) {
src/libctp/calculators/stateserver.h:        _pdbfile = opt->get(tag+".pdb").as< string > ();
src/libctp/calculators/stateserver.h:    if ( opt->exists(tag+".keys") ) {
src/libctp/calculators/stateserver.h:        keys = opt->get(tag+".keys").as< string > ();
src/libctp/calculators/stateserver.h:    // Topology - Sites - Pairs //
src/libctp/calculators/stateserver.h:    string outfile = boost::lexical_cast<string>(top->getDatabaseId())+ "_"
src/libctp/calculators/stateserver.h:        string pdbfile = boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/stateserver.h:        top->WritePDB(out);
src/libctp/calculators/stateserver.h:        pdbfile = boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/stateserver.h:        for (segIt = top->Segments().begin();
src/libctp/calculators/stateserver.h:             segIt < top->Segments().end();
src/libctp/calculators/stateserver.h:            seg->WritePDB(out);
src/libctp/calculators/stateserver.h:    fprintf(out, "Topology Database ID %3d \n", top->getDatabaseId());
src/libctp/calculators/stateserver.h:            top->getBox().get(0,0),
src/libctp/calculators/stateserver.h:            top->getBox().get(0,1),
src/libctp/calculators/stateserver.h:            top->getBox().get(0,2),
src/libctp/calculators/stateserver.h:            top->getBox().get(1,0),
src/libctp/calculators/stateserver.h:            top->getBox().get(1,1),
src/libctp/calculators/stateserver.h:            top->getBox().get(1,2),
src/libctp/calculators/stateserver.h:            top->getBox().get(2,0),
src/libctp/calculators/stateserver.h:            top->getBox().get(2,1),
src/libctp/calculators/stateserver.h:            top->getBox().get(2,2) );
src/libctp/calculators/stateserver.h:    fprintf(out, "  Step number %7d \n", top->getStep());
src/libctp/calculators/stateserver.h:    fprintf(out, "  Time          %2.3f \n", top->getTime());
src/libctp/calculators/stateserver.h:    int N_mol = top->Molecules().size();
src/libctp/calculators/stateserver.h:    int N_seg = top->Segments().size();
src/libctp/calculators/stateserver.h:    int N_atm = top->Atoms().size();
src/libctp/calculators/stateserver.h:    int N_nbs = top->NBList().size();
src/libctp/calculators/stateserver.h:    for (segit = top->Segments().begin();
src/libctp/calculators/stateserver.h:            segit < top->Segments().end();
src/libctp/calculators/stateserver.h:                seg->getId(),
src/libctp/calculators/stateserver.h:                seg->getName().c_str(),
src/libctp/calculators/stateserver.h:                seg->getPos().getX(),
src/libctp/calculators/stateserver.h:                seg->getPos().getY(),
src/libctp/calculators/stateserver.h:                seg->getPos().getZ(),
src/libctp/calculators/stateserver.h:                seg->getU_cC_nN(1),
src/libctp/calculators/stateserver.h:                seg->getU_cC_nN(-1),
src/libctp/calculators/stateserver.h:                seg->getU_nC_nN(1),
src/libctp/calculators/stateserver.h:                seg->getU_cN_cC(1),
src/libctp/calculators/stateserver.h:                seg->getU_nC_nN(-1),
src/libctp/calculators/stateserver.h:                seg->getU_cN_cC(-1),
src/libctp/calculators/stateserver.h:                seg->getEMpoles(1),
src/libctp/calculators/stateserver.h:                seg->getEMpoles(0),
src/libctp/calculators/stateserver.h:                seg->getEMpoles(-1) );
src/libctp/calculators/stateserver.h:    for (nit = top->NBList().begin();
src/libctp/calculators/stateserver.h:         nit != top->NBList().end();
src/libctp/calculators/stateserver.h:        int ghost = (pair->HasGhost()) ? 1 : 0;
src/libctp/calculators/stateserver.h:                     "dE(-1) %4.7f dE(+1) %4.7f "
src/libctp/calculators/stateserver.h:                     "L(-1) %1.4f L(+1) %1.4f J2(-1) %1.8e J2(+1) %1.8e "
src/libctp/calculators/stateserver.h:                     "R12(-1) %2.4e R12(+1) %2.4e R21(-1) %2.4e R21(-1) %2.4e\n",
src/libctp/calculators/stateserver.h:                pair->getId(),
src/libctp/calculators/stateserver.h:                pair->first->getId(),
src/libctp/calculators/stateserver.h:                pair->first->getName().c_str(),
src/libctp/calculators/stateserver.h:                pair->second->getId(),
src/libctp/calculators/stateserver.h:                pair->second->getName().c_str(),
src/libctp/calculators/stateserver.h:                pair->Dist(),
src/libctp/calculators/stateserver.h:                pair->getdE12(-1),
src/libctp/calculators/stateserver.h:                pair->getdE12(+1),
src/libctp/calculators/stateserver.h:                pair->getLambdaO(-1),
src/libctp/calculators/stateserver.h:                pair->getLambdaO(+1),
src/libctp/calculators/stateserver.h:                pair->getJeff2(-1),
src/libctp/calculators/stateserver.h:                pair->getJeff2(+1),
src/libctp/calculators/stateserver.h:                pair->getRate12(-1),
src/libctp/calculators/stateserver.h:                pair->getRate12(+1),
src/libctp/calculators/stateserver.h:                pair->getRate21(-1),
src/libctp/calculators/stateserver.h:                pair->getRate21(+1) );
src/libctp/calculators/stateserver.h:    for (nit = top->NBList().begin();
src/libctp/calculators/stateserver.h:         nit != top->NBList().end();
src/libctp/calculators/stateserver.h:        pair->getId(), 
src/libctp/calculators/stateserver.h:        pair->Seg1()->getId(),
src/libctp/calculators/stateserver.h:        pair->Seg2()->getId(),
src/libctp/calculators/stateserver.h:        pair->getJeff2(-1),
src/libctp/calculators/stateserver.h:        pair->getJeff2(+1),
src/libctp/calculators/stateserver.h:        pair->Dist(),
src/libctp/calculators/stateserver.h:        (pair->HasGhost()) ? 1 : 0);
src/libctp/calculators/stateserver.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {        
src/libctp/calculators/stateserver.h:        fprintf(out, "%4d %5s %-30s %-30s %-30s \n",
src/libctp/calculators/stateserver.h:                     (*sit)->getId(),
src/libctp/calculators/stateserver.h:                     (*sit)->getName().c_str(),
src/libctp/calculators/stateserver.h:                     ((*sit)->getName()+"_n.mps").c_str(),
src/libctp/calculators/stateserver.h:                     ((*sit)->getName()+"_e.mps").c_str(),
src/libctp/calculators/stateserver.h:                     ((*sit)->getName()+"_h.mps").c_str());
src/libctp/calculators/stateserver.h://    for (nit = top->NBList().begin();
src/libctp/calculators/stateserver.h://         nit != top->NBList().end();
src/libctp/calculators/stateserver.h://       string prefix = "pair_"+boost::lexical_cast<string>(qmpair->getId())
src/libctp/calculators/stateserver.h://                   +"_"+boost::lexical_cast<string>(qmpair->Seg1()->getId())
src/libctp/calculators/stateserver.h://                   +"_"+boost::lexical_cast<string>(qmpair->Seg2()->getId());
src/libctp/calculators/stateserver.h://        fprintf(out, "%5d %5s   %5d    %4d %5s %-30s   %4d %5s %-30s \n",
src/libctp/calculators/stateserver.h://                     qmpair->getId(),
src/libctp/calculators/stateserver.h://                     qmpair->getId(),
src/libctp/calculators/stateserver.h://                     qmpair->first->getId(),
src/libctp/calculators/stateserver.h://                     qmpair->first->getName().c_str(),
src/libctp/calculators/stateserver.h://                     qmpair->second->getId(),
src/libctp/calculators/stateserver.h://                     qmpair->second->getName().c_str(),
src/libctp/calculators/stateserver.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/stateserver.h:        int segId = seg->getId();
src/libctp/calculators/stateserver.h:        string segName = seg->getName();
src/libctp/calculators/stateserver.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/stateserver.h:        fprintf(out_ulm, "%4d %+4.5f %+4.5f %+4.5f %+4.5f %-1s \n",
src/libctp/calculators/stateserver.h:                (*sit)->getId(),
src/libctp/calculators/stateserver.h:                (*sit)->getPos().getX(),
src/libctp/calculators/stateserver.h:                (*sit)->getPos().getY(),
src/libctp/calculators/stateserver.h:                (*sit)->getPos().getZ(),
src/libctp/calculators/stateserver.h:                (*sit)->getSiteEnergy(-1),
src/libctp/calculators/stateserver.h:                (*sit)->getName().c_str());
src/libctp/calculators/stateserver.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/stateserver.h:        fprintf(out_ulm, "%4d %+4.5f %+4.5f %+4.5f %+4.5f %-1s \n",
src/libctp/calculators/stateserver.h:                (*sit)->getId(),
src/libctp/calculators/stateserver.h:                (*sit)->getPos().getX(),
src/libctp/calculators/stateserver.h:                (*sit)->getPos().getY(),
src/libctp/calculators/stateserver.h:                (*sit)->getPos().getZ(),
src/libctp/calculators/stateserver.h:                (*sit)->getSiteEnergy(+1),
src/libctp/calculators/stateserver.h:                (*sit)->getName().c_str());
src/libctp/calculators/stateserver.h:    for (nit = top->NBList().begin();
src/libctp/calculators/stateserver.h:         nit != top->NBList().end();
src/libctp/calculators/stateserver.h:                     qmpair->Seg1()->getId(),
src/libctp/calculators/stateserver.h:                     qmpair->Seg2()->getId(),
src/libctp/calculators/stateserver.h:                     qmpair->getJeff2(-1),
src/libctp/calculators/stateserver.h:                     qmpair->getRate12(-1),
src/libctp/calculators/stateserver.h:                     qmpair->getRate21(-1),
src/libctp/calculators/stateserver.h:                     qmpair->R().getX(),
src/libctp/calculators/stateserver.h:                     qmpair->R().getY(),
src/libctp/calculators/stateserver.h:                     qmpair->R().getZ());
src/libctp/calculators/stateserver.h:    for (nit = top->NBList().begin();
src/libctp/calculators/stateserver.h:         nit != top->NBList().end();
src/libctp/calculators/stateserver.h:                     qmpair->Seg1()->getId(),
src/libctp/calculators/stateserver.h:                     qmpair->Seg2()->getId(),
src/libctp/calculators/stateserver.h:                     qmpair->getJeff2(+1),
src/libctp/calculators/stateserver.h:                     qmpair->getRate12(+1),
src/libctp/calculators/stateserver.h:                     qmpair->getRate21(+1),
src/libctp/calculators/stateserver.h:                     qmpair->R().getX(),
src/libctp/calculators/stateserver.h:                     qmpair->R().getY(),
src/libctp/calculators/stateserver.h:                     qmpair->R().getZ());
src/libctp/calculators/tdump.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/tdump.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/tdump.h:    if (options->exists(key+".md") && options->exists(key+".qm")) {
src/libctp/calculators/tdump.h:        _outPDBmd = options->get(key+".md").as<string>();
src/libctp/calculators/tdump.h:        _outPDBqm = options->get(key+".qm").as<string>();
src/libctp/calculators/tdump.h:    if (options->exists(key+".frames")) {
src/libctp/calculators/tdump.h:        _framesToWrite = options->get(key+".frames").as<int>();
src/libctp/calculators/tdump.h:    bool isRigid = top->Rigidify();
src/libctp/calculators/tdump.h:    for (sit = top->Segments().begin();
src/libctp/calculators/tdump.h:         sit < top->Segments().end();
src/libctp/calculators/tdump.h:        (*sit)->WritePDB(outPDBmd, "Atoms", "MD");
src/libctp/calculators/tdump.h:        (*sit)->WritePDB(outPDBqm, "Atoms", "QM");
src/libctp/calculators/velocity.h:    _states             = opt->get(key+".states").as< vector<int> >();
src/libctp/calculators/velocity.h:    _includeSegsFile    = opt->get(key+".include_sites").as< string >();
src/libctp/calculators/velocity.h:    _useCanonical       = (opt->get(key+".use_boltz_occ").as< int >() == 1)
src/libctp/calculators/velocity.h:    double T            = opt->get(key+".temperature").as< double >();
src/libctp/calculators/velocity.h:    _kT = 8.6173324e-5 * T;
src/libctp/calculators/velocity.h:            _sites.push_back(top->getSegment(segId));
src/libctp/calculators/velocity.h:            Z += exp( - (*sit)->getSiteEnergy(state) / _kT );
src/libctp/calculators/velocity.h:            double p = exp( - (*sit)->getSiteEnergy(state) / _kT ) / Z;
src/libctp/calculators/velocity.h:            (*sit)->setOcc(p, state);
src/libctp/calculators/velocity.h:        QMNBList &nblist = top->NBList();
src/libctp/calculators/velocity.h:          avg_v +=   (*sit1)->getOcc(state) * qmp->getRate12(state) * qmp->R();
src/libctp/calculators/velocity.h:          avg_v += - (*sit2)->getOcc(state) * qmp->getRate21(state) * qmp->R();
src/libctp/calculators/velocity.h:        avg_v *= 1e-9;
src/libctp/calculators/xmultipole.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/xmultipole.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/xmultipole.h:        double EP;       //   <- Interaction permanent multipoles (inter-site)
src/libctp/calculators/xmultipole.h:        double EU_INTRA; //   <- Interaction induction multipoles (intra-site)
src/libctp/calculators/xmultipole.h:        double EU_INTER; //   <- Interaction induction multipoles (inter-site)
src/libctp/calculators/xmultipole.h:        double u3;      //  |-> NOTE: Only needed when using Thole model
src/libctp/calculators/xmultipole.h:        double R3;      //  |-> NOTE: reciprocal, i.e. e.g. R3 = 1/(R*R*R)
src/libctp/calculators/xmultipole.h:        inline double lambda3() { return 1 - exp( -a*u3); }
src/libctp/calculators/xmultipole.h:        inline double lambda5() { return 1 - (1 + a*u3) * exp( -a*u3); }
src/libctp/calculators/xmultipole.h:        inline double lambda7() { return 1 - (1 + a*u3 + 0.6*a*a*u3*u3) * exp( -a*u3); }
src/libctp/calculators/xmultipole.h:        inline double lambda9() { return 1 - (1 + a*u3 + (18*a*a*u3*u3 + 9*a*a*a*u3*u3*u3)/35) * exp( -a*u3); }
src/libctp/calculators/xmultipole.h:        inline double T20_00()  { return R3 * 0.5 * (3 * raz*raz - 1); }
src/libctp/calculators/xmultipole.h:        inline double T22c_00() { return R3 * 0.5 * sqrt(3) * (rax*rax - ray*ray); }
src/libctp/calculators/xmultipole.h:        inline double T00_20()  { return R3 * 0.5 * (3 * rbz*rbz - 1); }
src/libctp/calculators/xmultipole.h:        inline double T00_22c() { return R3 * 0.5 * sqrt(3) * (rbx*rbx - rby*rby); }
src/libctp/calculators/xmultipole.h:        inline double T20_1x()  { return R4 * 0.5 * (15*raz*raz*rbx + 6*raz*czx - 3*rbx); }
src/libctp/calculators/xmultipole.h:        inline double T20_1y()  { return R4 * 0.5 * (15*raz*raz*rby + 6*raz*czy - 3*rby); }
src/libctp/calculators/xmultipole.h:        inline double T20_1z()  { return R4 * 0.5 * (15*raz*raz*rbz + 6*raz*czz - 3*rbz); }
src/libctp/calculators/xmultipole.h:        inline double T22c_1x() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbx + 2*rax*cxx - 2*ray*cyx); }
src/libctp/calculators/xmultipole.h:        inline double T22c_1y() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rby + 2*rax*cxy - 2*ray*cyy); }
src/libctp/calculators/xmultipole.h:        inline double T22c_1z() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbz + 2*rax*cxz - 2*ray*cyz); }
src/libctp/calculators/xmultipole.h:        inline double T1x_20()  { return R4 * 0.5 * (15*rbz*rbz*rax + 6*rbz*cxz - 3*rax); }
src/libctp/calculators/xmultipole.h:        inline double T1y_20()  { return R4 * 0.5 * (15*rbz*rbz*ray + 6*rbz*cyz - 3*ray); }
src/libctp/calculators/xmultipole.h:        inline double T1z_20()  { return R4 * 0.5 * (15*rbz*rbz*raz + 6*rbz*czz - 3*raz); }
src/libctp/calculators/xmultipole.h:        inline double T1x_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*rax + 2*rbx*cxx - 2*rby*cxy); }
src/libctp/calculators/xmultipole.h:        inline double T1y_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*ray + 2*rbx*cyx - 2*rby*cyy); }
src/libctp/calculators/xmultipole.h:        inline double T1z_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*raz + 2*rbx*czx - 2*rby*czy); }
src/libctp/calculators/xmultipole.h:        inline double TU20_1x()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbx + lambda5()*(6*raz*czx - 3*rbx)); }
src/libctp/calculators/xmultipole.h:        inline double TU20_1y()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rby + lambda5()*(6*raz*czy - 3*rby)); }
src/libctp/calculators/xmultipole.h:        inline double TU20_1z()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbz + lambda5()*(6*raz*czz - 3*rbz)); }
src/libctp/calculators/xmultipole.h:        inline double TU22c_1x() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbx + lambda5()*(2*rax*cxx - 2*ray*cyx)); }
src/libctp/calculators/xmultipole.h:        inline double TU22c_1y() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rby + lambda5()*(2*rax*cxy - 2*ray*cyy)); }
src/libctp/calculators/xmultipole.h:        inline double TU22c_1z() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbz + lambda5()*(2*rax*cxz - 2*ray*cyz)); }
src/libctp/calculators/xmultipole.h:        inline double TU1x_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*rax + lambda5()*(6*rbz*cxz - 3*rax)); }
src/libctp/calculators/xmultipole.h:        inline double TU1y_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*ray + lambda5()*(6*rbz*cyz - 3*ray)); }
src/libctp/calculators/xmultipole.h:        inline double TU1z_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*raz + lambda5()*(6*rbz*czz - 3*raz)); }
src/libctp/calculators/xmultipole.h:        inline double TU1x_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*rax + lambda5()*(2*rbx*cxx - 2*rby*cxy)); }
src/libctp/calculators/xmultipole.h:        inline double TU1y_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*ray + lambda5()*(2*rbx*cyx - 2*rby*cyy)); }
src/libctp/calculators/xmultipole.h:        inline double TU1z_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*raz + lambda5()*(2*rbx*czx - 2*rby*czy)); }
src/libctp/calculators/xmultipole.h:        inline double T20_20()   { return R5 * 0.75 * (35*raz*raz*rbz*rbz - 5*raz*raz - 5*rbz*rbz + 20*raz*rbz*czz + 2*czz*czz + 1); }
src/libctp/calculators/xmultipole.h:        inline double T20_21c()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rbz - 5*rbx*rbz + 10*raz*rbx*czz + 10*raz*rbz*czx + 2*czx*czz); }
src/libctp/calculators/xmultipole.h:        inline double T20_21s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rby*rbz - 5*rby*rbz + 10*raz*rby*czz + 10*raz*rbz*czy + 2*czy*czz); }
src/libctp/calculators/xmultipole.h:        inline double T20_22c()  { return R5 * 0.25 * sqrt(3) * (35*raz*raz*rbx*rbx - 35*raz*raz*rby*rby - 5*rbx*rbx + 5*rby*rby + 20*raz*rbx*czx - 20*raz*rby*czy + 2*czx*czx - 2*czy*czy); }
src/libctp/calculators/xmultipole.h:        inline double T20_22s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rby - 5*rbx*rby + 10*raz*rbx*czy + 10*raz*rby*czx + 2*czx*czy); }
src/libctp/calculators/xmultipole.h:        inline double T21c_22c() { return R5 * 0.5 * (35*rax*raz*rbx*rbx - 35*rax*raz*rby*rby + 10*rax*rbx*czx - 10*rax*rby*czy + 10*raz*rbx*cxx - 10*raz*rby*cxy + 2*cxx*czx - 2*cxy*czy); }
src/libctp/calculators/xmultipole.h:        inline double T21s_22c() { return R5 * 0.5 * (35*ray*raz*rbx*rbx - 35*ray*raz*rby*rby + 10*ray*rbx*czx - 10*ray*rby*czy + 10*raz*rbx*cyx - 10*raz*rby*cyy + 2*cyx*czx - 2*cyy*czy); }
src/libctp/calculators/xmultipole.h:        inline double T22c_22c() { return R5 * 0.25 * (35*rax*rax*rbx*rbx - 35*rax*rax*rby*rby - 35*ray*ray*rbx*rbx + 35*ray*ray*rby*rby + 20*rax*rbx*cxx - 20*rax*rby*cxy - 20*ray*rbx*cyx + 20*ray*rby*cyy + 2*cxx*cxx - 2*cxy*cxy - 2*cyx*cyx + 2*cyy*cyy); }
src/libctp/calculators/xmultipole.h:        inline double T22c_22s() { return R5 * 0.5 * (35*rax*rax*rbx*rby - 35*ray*ray*rbx*rby + 10*rax*rbx*cxy + 10*rax*rby*cxx - 10*ray*rbx*cyy - 10*ray*rby*cyx + 2*cxx*cxy - 2*cyx*cyy); }
src/libctp/calculators/xmultipole.h:        inline double T21c_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*raz - 5*rax*raz + 10*rbz*rax*czz + 10*rbz*raz*cxz + 2*cxz*czz); }
src/libctp/calculators/xmultipole.h:        inline double T21s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*ray*raz - 5*ray*raz + 10*rbz*ray*czz + 10*rbz*raz*cyz + 2*cyz*czz); }
src/libctp/calculators/xmultipole.h:        inline double T22c_20()  { return R5 * 0.25 * sqrt(3) * (35*rbz*rbz*rax*rax - 35*rbz*rbz*ray*ray - 5*rax*rax + 5*ray*ray + 20*rbz*rax*cxz - 20*rbz*ray*cyz + 2*cxz*cxz - 2*cyz*cyz); }
src/libctp/calculators/xmultipole.h:        inline double T22s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*ray - 5*rax*ray + 10*rbz*rax*cyz + 10*rbz*ray*cxz + 2*cxz*cyz); }
src/libctp/calculators/xmultipole.h:        inline double T22c_21c() { return R5 * 0.5 * (35*rbx*rbz*rax*rax - 35*rbx*rbz*ray*ray + 10*rbx*rax*cxz - 10*rbx*ray*cyz + 10*rbz*rax*cxx - 10*rbz*ray*cyx + 2*cxx*cxz - 2*cyx*cyz); }
src/libctp/calculators/xmultipole.h:        inline double T22c_21s() { return R5 * 0.5 * (35*rby*rbz*rax*rax - 35*rby*rbz*ray*ray + 10*rby*rax*cxz - 10*rby*ray*cyz + 10*rbz*rax*cxy - 10*rbz*ray*cyy + 2*cxy*cxz - 2*cyy*cyz); }
src/libctp/calculators/xmultipole.h:        inline double T22s_22c() { return R5 * 0.5 * (35*rbx*rbx*rax*ray - 35*rby*rby*rax*ray + 10*rbx*rax*cyx + 10*rbx*ray*cxx - 10*rby*rax*cyy - 10*rby*ray*cxy + 2*cxx*cyx - 2*cxy*cyy); }
src/libctp/calculators/xmultipole.h:        vector< Segment* >           _segsPolSphere; // Segments    in c/o 0-1
src/libctp/calculators/xmultipole.h:        vector< Segment* >           _segsOutSphere; // Segments    in c/0 1-2
src/libctp/calculators/xmultipole.h:        vector< vector<PolarSite*> > _polsPolSphere; // Polar sites in c/o 0-1
src/libctp/calculators/xmultipole.h:        vector< vector<PolarSite*> > _polsOutSphere; // Polar sites in c/o 1-2
src/libctp/calculators/xmultipole.h:    /* ---- OPTIONS.XML Structure ----
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key) ) {
src/libctp/calculators/xmultipole.h:            xmlfile = opt->get(key).as< string >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".induce") ) {
src/libctp/calculators/xmultipole.h:            int induce = opt->get(key+".induce").as< int >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".first") ) {
src/libctp/calculators/xmultipole.h:            _firstSeg = opt->get(key+".first").as< int >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".last") ) {
src/libctp/calculators/xmultipole.h:            _lastSeg = opt->get(key+".last").as< int >();
src/libctp/calculators/xmultipole.h:        else { _lastSeg = -1; }
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/xmultipole.h:            _outFile = opt->get(key+".output").as< string >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".check") ) {
src/libctp/calculators/xmultipole.h:            _checkPolesPDB = opt->get(key+".check").as< string >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".calcESP") ) {
src/libctp/calculators/xmultipole.h:            int calcESP = opt->get(key+".calcESP").as< int >();
src/libctp/calculators/xmultipole.h:            _espCubeFile = opt->get(key+".cube").as< string >();
src/libctp/calculators/xmultipole.h:            _espOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/xmultipole.h:            if (opt->exists(key+".doSystem")) {
src/libctp/calculators/xmultipole.h:                int doSystem = opt->get(key+".doSystem").as< int >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".calcESF") ) {
src/libctp/calculators/xmultipole.h:            int calcESF = opt->get(key+".calcESF").as< int >();
src/libctp/calculators/xmultipole.h:            _esfGridFile = opt->get(key+".grid").as< string >();
src/libctp/calculators/xmultipole.h:            _esfOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".calcAlpha") ) {
src/libctp/calculators/xmultipole.h:            int calcAlpha = opt->get(key+".calcAlpha").as< int >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".doSystem") ) {
src/libctp/calculators/xmultipole.h:            int doSystem = opt->get(key+".doSystem").as< int >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/xmultipole.h:            string alphaOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".cutoff") ) {
src/libctp/calculators/xmultipole.h:            _cutoff = opt->get(key+".cutoff").as< double >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".cutoff2") ) {
src/libctp/calculators/xmultipole.h:            _cutoff2 = opt->get(key+".cutoff2").as< double >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".expdamp") ) {
src/libctp/calculators/xmultipole.h:            _aDamp = opt->get(key+".expdamp").as< double >();
src/libctp/calculators/xmultipole.h:         if ( opt->exists(key+".scaling") ) {
src/libctp/calculators/xmultipole.h:            _scale1 = opt->get(key+".scaling").as< vector<double> >();
src/libctp/calculators/xmultipole.h:                cout << endl << "... ... WARNING: 1-N SCALING SWITCHED OFF"; }
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".wSOR_N") ) {
src/libctp/calculators/xmultipole.h:            _wSOR_N = opt->get(key+".wSOR_N").as< float >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".wSOR_C") ) {
src/libctp/calculators/xmultipole.h:            _wSOR_C = opt->get(key+".wSOR_C").as< float >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".maxiter") ) {
src/libctp/calculators/xmultipole.h:            _maxIter = opt->get(key+".maxiter").as< int >();
src/libctp/calculators/xmultipole.h:        if ( opt->exists(key+".tolerance") ) {
src/libctp/calculators/xmultipole.h:            _epsTol = opt->get(key+".tolerance").as< double >();
src/libctp/calculators/xmultipole.h:    if (!top->isEStatified()) { this->EStatify(top, opt); }
src/libctp/calculators/xmultipole.h:    if (_calcESP && (!_ESPdoSystem))      { this->CalculateESPInput(top); }
src/libctp/calculators/xmultipole.h:    if (this->_calcESF)                   { this->CalculateESF(top); }
src/libctp/calculators/xmultipole.h:    if (this->_calcAlphaMol)              { this->CalculateAlphaInput(top); }
src/libctp/calculators/xmultipole.h: * Creates polar-site templates using mapping file
src/libctp/calculators/xmultipole.h: * ... Calls GDMA punch-file parser to load multipoles and polarizabilities
src/libctp/calculators/xmultipole.h:    string allocFile = options->get(key+".multipoles").as<string> ();
src/libctp/calculators/xmultipole.h:    // Load polar-site indices from XML //
src/libctp/calculators/xmultipole.h:    Property allocation; // <- Which polar sites are part of which fragment?
src/libctp/calculators/xmultipole.h:    /* --- MULTIPOLES.XML Structure ---
src/libctp/calculators/xmultipole.h:        string molName = (*molit)->get("name").as<string> ();
src/libctp/calculators/xmultipole.h:        list<Property *> segs = (*molit)->Select(key);
src/libctp/calculators/xmultipole.h:            string segName = (*segit)->get("name").as<string> ();
src/libctp/calculators/xmultipole.h:            string mpoleFile_n = (*segit)->get("multipoles_n").as<string> ();
src/libctp/calculators/xmultipole.h:            if ( (*segit)->exists("multipoles_e")) {
src/libctp/calculators/xmultipole.h:                string mpoleFile_e = (*segit)->get("multipoles_e").as<string>();
src/libctp/calculators/xmultipole.h:            if ( (*segit)->exists("multipoles_h")) {
src/libctp/calculators/xmultipole.h:                string mpoleFile_h = (*segit)->get("multipoles_h").as<string>();
src/libctp/calculators/xmultipole.h:            if ( (*segit)->exists("map2md")) {
src/libctp/calculators/xmultipole.h:                int map2md = (*segit)->get("map2md").as<int>();
src/libctp/calculators/xmultipole.h:            list<Property *> frags = (*segit)->Select(key);
src/libctp/calculators/xmultipole.h:                string fragName = (*fragit)->get("name").as<string> ();
src/libctp/calculators/xmultipole.h:                string mpoles = (*fragit)->get("mpoles").as<string> ();
src/libctp/calculators/xmultipole.h:        string segName = strit->first;
src/libctp/calculators/xmultipole.h:        string filename = strit->second;
src/libctp/calculators/xmultipole.h:        map_seg_chrgStates[segName][0] = false; // <- negative
src/libctp/calculators/xmultipole.h:        map_seg_chrgStates[segName][1] = true;  // <- neutral
src/libctp/calculators/xmultipole.h:        map_seg_chrgStates[segName][2] = false; // <- positive
src/libctp/calculators/xmultipole.h:    state = -1;
src/libctp/calculators/xmultipole.h:            string segName = strit->first;
src/libctp/calculators/xmultipole.h:            string filename = strit->second;
src/libctp/calculators/xmultipole.h:                polesNeutral[i]->setQs( polesAnion[i]->getQs(state), state );
src/libctp/calculators/xmultipole.h:                polesNeutral[i]->setPs( polesAnion[i]->getPs(state), state );
src/libctp/calculators/xmultipole.h:            string segName = strit->first;
src/libctp/calculators/xmultipole.h:            string filename = strit->second;
src/libctp/calculators/xmultipole.h:                polesNeutral[i]->setQs( polesCation[i]->getQs(state), state );
src/libctp/calculators/xmultipole.h:                polesNeutral[i]->setPs( polesCation[i]->getPs(state), state );
src/libctp/calculators/xmultipole.h:    // Forward information on polar-site templates to topology //
src/libctp/calculators/xmultipole.h: * @return Yields polar-site template container
src/libctp/calculators/xmultipole.h:    vector<double> Qs; // <- multipole moments
src/libctp/calculators/xmultipole.h:    double         P1; // <- dipole polarizability
src/libctp/calculators/xmultipole.h:    // ! SP        RB3LYP          6-311+G(d,p)
src/libctp/calculators/xmultipole.h:    // C          -4.2414603400   -3.8124751600    0.0017575736    Rank  2
src/libctp/calculators/xmultipole.h:    //  -0.3853409355
src/libctp/calculators/xmultipole.h:    //  -0.0002321905   0.2401559510   0.6602334308
src/libctp/calculators/xmultipole.h:    //  -0.7220625314   0.0004894995  -0.0003833545   0.4526409813  -0.50937399
src/libctp/calculators/xmultipole.h:                P1 = -1.;
src/libctp/calculators/xmultipole.h:                int id = poleCount++;  // <- starts from 1
src/libctp/calculators/xmultipole.h:                newPole->setRank(rank);
src/libctp/calculators/xmultipole.h:                newPole->setPos(pos);
src/libctp/calculators/xmultipole.h:                P1 = 1e-3 * boost::lexical_cast<double>(split[1]);
src/libctp/calculators/xmultipole.h:                thisPole->setPs(P1, state);
src/libctp/calculators/xmultipole.h:                int lineRank = int( sqrt(thisPole->getQs(state).size()) + 0.5 );
src/libctp/calculators/xmultipole.h:                thisPole->setQs(Qs, state);
src/libctp/calculators/xmultipole.h:            string elem = (*pol)->getName();
src/libctp/calculators/xmultipole.h:            if      (elem == "C") { alpha = 1.75e-3;  } // <- conversion from
src/libctp/calculators/xmultipole.h:            else if (elem == "H") { alpha = 0.696e-3; } //    A³ to nm³ = 10⁻³
src/libctp/calculators/xmultipole.h:            else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/calculators/xmultipole.h:            else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/calculators/xmultipole.h:            else if (elem == "S") { alpha = 2.926e-3; }
src/libctp/calculators/xmultipole.h:            //if      (elem == "C") { alpha = 1.334e-3; } // <- conversion from
src/libctp/calculators/xmultipole.h:            //else if (elem == "H") { alpha = 0.496e-3; } //    A³ to nm³ = 10⁻³
src/libctp/calculators/xmultipole.h:            //else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/calculators/xmultipole.h:            //else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/calculators/xmultipole.h:            //else if (elem == "S") { alpha = 3.300e-3; }
src/libctp/calculators/xmultipole.h:            (*pol)->setPs(alpha, state);
src/libctp/calculators/xmultipole.h: * Equips segments with polar sites using polar-site template container
src/libctp/calculators/xmultipole.h: * ... Translates + rotates polar-site into global frame
src/libctp/calculators/xmultipole.h:    for (sit = top->Segments().begin();
src/libctp/calculators/xmultipole.h:         sit < top->Segments().end();
src/libctp/calculators/xmultipole.h:        vector<PolarSite*> poleSites = _map_seg_polarSites.at(seg->getName());
src/libctp/calculators/xmultipole.h:        seg->setChrgStates(_map_seg_chrgStates[seg->getName()]);
src/libctp/calculators/xmultipole.h:        bool map2md = _map2md[seg->getName()];
src/libctp/calculators/xmultipole.h:        for (fit = seg->Fragments().begin();
src/libctp/calculators/xmultipole.h:             fit < seg->Fragments().end();
src/libctp/calculators/xmultipole.h:            string idkey = frag->getName() + seg->getName()
src/libctp/calculators/xmultipole.h:                         + seg->getMolecule()->getName();
src/libctp/calculators/xmultipole.h:                if (polesInFrag.size() != frag->Atoms().size()) {
src/libctp/calculators/xmultipole.h:                    cout << endl << "ERROR: Segment " << seg->getName() <<
src/libctp/calculators/xmultipole.h:                            " Fragment " << frag->getName() <<
src/libctp/calculators/xmultipole.h:                PolarSite *templ = poleSites[poleId-1];
src/libctp/calculators/xmultipole.h:                PolarSite *newSite = top->AddPolarSite(name);
src/libctp/calculators/xmultipole.h:                newSite->ImportFrom(templ);
src/libctp/calculators/xmultipole.h:                seg->AddPolarSite(newSite);
src/libctp/calculators/xmultipole.h:                frag->AddPolarSite(newSite);
src/libctp/calculators/xmultipole.h:                    newSite->Translate(frag->getTransQM2MD());
src/libctp/calculators/xmultipole.h:                    newSite->Rotate(frag->getRotQM2MD(), frag->getCoMD());
src/libctp/calculators/xmultipole.h:                    vec mdpos = frag->Atoms()[i]->getPos();
src/libctp/calculators/xmultipole.h:                    newSite->setPos(mdpos);
src/libctp/calculators/xmultipole.h:                    if (newSite->getRank() > 0) {
src/libctp/calculators/xmultipole.h:                        " prevents use of higher-rank multipoles. " << endl;
src/libctp/calculators/xmultipole.h:    top->setIsEStatified(true);
src/libctp/calculators/xmultipole.h:    if (!top->isRigid()) {
src/libctp/calculators/xmultipole.h:        bool isRigid = top->Rigidify();
src/libctp/calculators/xmultipole.h:    if (top->isEStatified() == false) {
src/libctp/calculators/xmultipole.h:        this->DistributeMpoles(top);
src/libctp/calculators/xmultipole.h:        cout << endl << "... ... Created " << top->PolarSites().size()
src/libctp/calculators/xmultipole.h:        cout << endl << "... ... Writing polar-site coordinates to "
src/libctp/calculators/xmultipole.h:        for (sit = top->Segments().begin();
src/libctp/calculators/xmultipole.h:             sit < top->Segments().end();
src/libctp/calculators/xmultipole.h:            (*sit)->WritePDB(mpPDB, "Multipoles", "MD");
src/libctp/calculators/xmultipole.h:    _nextSite = top->Segments().begin();
src/libctp/calculators/xmultipole.h:    for ( ; (*_nextSite)->getId() != this->_firstSeg &&
src/libctp/calculators/xmultipole.h:              _nextSite < top->Segments().end(); ++_nextSite) { ; }
src/libctp/calculators/xmultipole.h:        siteOps[id]->InitSlotData(top);
src/libctp/calculators/xmultipole.h:        siteOps[id]->Start();
src/libctp/calculators/xmultipole.h:        siteOps[id]->WaitDone();
src/libctp/calculators/xmultipole.h:                          + boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/xmultipole.h:        for (sit = top->Segments().begin();
src/libctp/calculators/xmultipole.h:             sit < top->Segments().end();
src/libctp/calculators/xmultipole.h:            if ((*sit)->getId() < _firstSeg ) { continue; }
src/libctp/calculators/xmultipole.h:            fprintf(out, "%4d ", (*sit)->getId() );
src/libctp/calculators/xmultipole.h:            fprintf(out, "%4s ", (*sit)->getName().c_str() );
src/libctp/calculators/xmultipole.h:            if ((*sit)->hasChrgState(0)) {
src/libctp/calculators/xmultipole.h:                fprintf(out, "   0 %3.8f   ", (*sit)->getEMpoles(0) );
src/libctp/calculators/xmultipole.h:            if ((*sit)->hasChrgState(-1)) {
src/libctp/calculators/xmultipole.h:                fprintf(out, "  -1 %3.8f   ", (*sit)->getEMpoles(-1) );
src/libctp/calculators/xmultipole.h:            if ((*sit)->hasChrgState(+1)) {
src/libctp/calculators/xmultipole.h:                fprintf(out, "  +1 %3.8f   ", (*sit)->getEMpoles(+1) );
src/libctp/calculators/xmultipole.h:            if ((*sit)->hasChrgState(0)) {
src/libctp/calculators/xmultipole.h:                fprintf(out, "   0 %3d   ", _log_seg_iter[(*sit)->getId()][1]);
src/libctp/calculators/xmultipole.h:            if ((*sit)->hasChrgState(-1)) {
src/libctp/calculators/xmultipole.h:                fprintf(out, "  -1 %3d   ", _log_seg_iter[(*sit)->getId()][0]);
src/libctp/calculators/xmultipole.h:            if ((*sit)->hasChrgState(+1)) {
src/libctp/calculators/xmultipole.h:                fprintf(out, "  +1 %3d   ", _log_seg_iter[(*sit)->getId()][2]);
src/libctp/calculators/xmultipole.h:                    _log_seg_sphereSize[(*sit)->getId()]);
src/libctp/calculators/xmultipole.h:                    _log_seg_com[(*sit)->getId()].getX(),
src/libctp/calculators/xmultipole.h:                    _log_seg_com[(*sit)->getId()].getY(),
src/libctp/calculators/xmultipole.h:                    _log_seg_com[(*sit)->getId()].getZ());
src/libctp/calculators/xmultipole.h:            if ( (*sit)->getId() == _lastSeg ) { break; }
src/libctp/calculators/xmultipole.h:    if (_nextSite == top->Segments().end()) {
src/libctp/calculators/xmultipole.h:    else if ((*_nextSite)->getId() > _lastSeg && _lastSeg > 0) {
src/libctp/calculators/xmultipole.h:             << workOnThis->getId() << flush;
src/libctp/calculators/xmultipole.h:        _seg = _master->RequestNextSite(_id, _top);
src/libctp/calculators/xmultipole.h:        else { this->EvalSite(_top, _seg); }
src/libctp/calculators/xmultipole.h:    _polarSites.resize(top->Segments().size());
src/libctp/calculators/xmultipole.h:    assert(top->Segments().size() == _polarSites.size());
src/libctp/calculators/xmultipole.h:    for (sitRef = top->Segments().begin(), sitNew = _polarSites.begin();
src/libctp/calculators/xmultipole.h:         sitRef < top->Segments().end();
src/libctp/calculators/xmultipole.h:        (*sitNew).resize((*sitRef)->PolarSites().size());
src/libctp/calculators/xmultipole.h:        for (pitRef = (*sitRef)->PolarSites().begin(),
src/libctp/calculators/xmultipole.h:             pitRef < (*sitRef)->PolarSites().end();
src/libctp/calculators/xmultipole.h:            (*pitNew)->ImportFrom(*pitRef, "full");
src/libctp/calculators/xmultipole.h:            (*pitNew)->Charge(0);
src/libctp/calculators/xmultipole.h: * ... Determine polarization sphere via cut-off
src/libctp/calculators/xmultipole.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/xmultipole.h:    this->_segsPolSphere.clear(); // <- Segments    within cutoff
src/libctp/calculators/xmultipole.h:    this->_segsOutSphere.clear(); // <- Segments    within cutoff1, cutoff2
src/libctp/calculators/xmultipole.h:    this->_polsPolSphere.clear(); // <- Polar sites within cutoff
src/libctp/calculators/xmultipole.h:    this->_polsOutSphere.clear(); // <- Polar sites within cutoff1, cutoff2
src/libctp/calculators/xmultipole.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/xmultipole.h:        double r12 = abs(_top->PbShortestConnect((*sit)->getPos(),
src/libctp/calculators/xmultipole.h:                                                    seg->getPos()));
src/libctp/calculators/xmultipole.h:        if      ( r12 > _master->_cutoff2) { continue; }
src/libctp/calculators/xmultipole.h:        else if ( r12 > _master->_cutoff ) {
src/libctp/calculators/xmultipole.h:            _polsOutSphere.push_back( _polarSites[(*sit)->getId() - 1] );
src/libctp/calculators/xmultipole.h:            _polsPolSphere.push_back( _polarSites[(*sit)->getId() - 1] );
src/libctp/calculators/xmultipole.h://        (*sit)->WritePDB(out, "Multipoles", "");
src/libctp/calculators/xmultipole.h:    if (_master->_maverick) {
src/libctp/calculators/xmultipole.h:    this->Depolarize();
src/libctp/calculators/xmultipole.h:            (*pit)->Depolarize();
src/libctp/calculators/xmultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/xmultipole.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/xmultipole.h:        this->Charge(state);
src/libctp/calculators/xmultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/xmultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/xmultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/xmultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/xmultipole.h://        string toFile = boost::lexical_cast<string>(_seg->getId())
src/libctp/calculators/xmultipole.h://        vec CoM = _seg->getPos();
src/libctp/calculators/xmultipole.h://                vec r  = _top->PbShortestConnect((*pit)->getPos(), CoM);
src/libctp/calculators/xmultipole.h://                int segId = (*pit)->getSegment()->getId();
src/libctp/calculators/xmultipole.h://                vec u = vec( (*pit)->U1x, (*pit)->U1y, (*pit)->U1z );
src/libctp/calculators/xmultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/xmultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/xmultipole.h:        // this->Depolarize(); // OVERRIDE
src/libctp/calculators/xmultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/xmultipole.h:                (*pit1)->ResetFieldP();
src/libctp/calculators/xmultipole.h:                (*pit1)->ResetU1Hist();
src/libctp/calculators/xmultipole.h:    state = -1;
src/libctp/calculators/xmultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/xmultipole.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/xmultipole.h:        this->Charge(state);
src/libctp/calculators/xmultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/xmultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/xmultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/xmultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/xmultipole.h:            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/xmultipole.h:        // this->Depolarize(); // OVERRIDE
src/libctp/calculators/xmultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/xmultipole.h:                (*pit1)->ResetFieldP();
src/libctp/calculators/xmultipole.h:                (*pit1)->ResetU1Hist();
src/libctp/calculators/xmultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/xmultipole.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/xmultipole.h:        this->Charge(state);
src/libctp/calculators/xmultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/xmultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/xmultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/xmultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/xmultipole.h://        string toFile = boost::lexical_cast<string>(_seg->getId())
src/libctp/calculators/xmultipole.h://        vec CoM = _seg->getPos();
src/libctp/calculators/xmultipole.h://                vec r  = _top->PbShortestConnect((*pit)->getPos(), CoM);
src/libctp/calculators/xmultipole.h://                int segId = (*pit)->getSegment()->getId();
src/libctp/calculators/xmultipole.h://                vec u = vec( (*pit)->U1x, (*pit)->U1y, (*pit)->U1z );
src/libctp/calculators/xmultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/xmultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/xmultipole.h:        this->Depolarize();
src/libctp/calculators/xmultipole.h:    this->_master->_logMutex.Lock();
src/libctp/calculators/xmultipole.h:    _master->_log_seg_iter[_seg->getId()] = iters;
src/libctp/calculators/xmultipole.h:    _master->_log_seg_sphereSize[_seg->getId()] = _polsPolSphere.size();
src/libctp/calculators/xmultipole.h:    _master->_log_seg_com[_seg->getId()] = _seg->getPos();
src/libctp/calculators/xmultipole.h:    this->_master->_logMutex.Unlock();
src/libctp/calculators/xmultipole.h:    this->Charge(0);
src/libctp/calculators/xmultipole.h:    for (pit = _polarSites[_seg->getId()-1].begin();
src/libctp/calculators/xmultipole.h:         pit < _polarSites[_seg->getId()-1].end();
src/libctp/calculators/xmultipole.h:        (*pit)->Charge(state);
src/libctp/calculators/xmultipole.h:    double wSOR = (state == 0) ? _master->_wSOR_N : _master->_wSOR_C;
src/libctp/calculators/xmultipole.h:    double eTOL = this->_master->_epsTol;
src/libctp/calculators/xmultipole.h:    int    maxI = this->_master->_maxIter;
src/libctp/calculators/xmultipole.h:    // Inter-site fields (arising from perm. m'poles) //
src/libctp/calculators/xmultipole.h://    cout << endl << "... ... ... 0th-order field" << flush;
src/libctp/calculators/xmultipole.h:    // 1st-order induction //
src/libctp/calculators/xmultipole.h:                 (*pit1)->InduceDirect();
src/libctp/calculators/xmultipole.h:    // Higher-order induction //
src/libctp/calculators/xmultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/xmultipole.h:        // Intra-site contribution to induction field
src/libctp/calculators/xmultipole.h://        cout << " | Intra-Site (" << iter << ")" << flush;
src/libctp/calculators/xmultipole.h:        // Inter-site contribution to induction field
src/libctp/calculators/xmultipole.h://        cout << " | Inter-Site (" << iter << ")" << flush;
src/libctp/calculators/xmultipole.h:                 (*pit1)->Induce(wSOR);
src/libctp/calculators/xmultipole.h:        double maxdU = -1;
src/libctp/calculators/xmultipole.h:                 double dU = (*pit1)->HistdU();
src/libctp/calculators/xmultipole.h:        else if (iter == maxI - 1) {
src/libctp/calculators/xmultipole.h:            this->_master->LockCout();
src/libctp/calculators/xmultipole.h:                 << _seg->getId() << " - state " << state
src/libctp/calculators/xmultipole.h:            this->_master->UnlockCout();
src/libctp/calculators/xmultipole.h://         << " - wSOR " << wSOR
src/libctp/calculators/xmultipole.h://         << " - Iterations " << iter << flush;
src/libctp/calculators/xmultipole.h:    vector< PolarSite* > central = _polarSites[ _seg->getId() - 1 ];
src/libctp/calculators/xmultipole.h:        int id = (*seg1)->getId();
src/libctp/calculators/xmultipole.h:        if (id == _seg->getId()) {
src/libctp/calculators/xmultipole.h:        for (pit1 = _polarSites[id-1].begin();
src/libctp/calculators/xmultipole.h:             pit1 < _polarSites[id-1].end();
src/libctp/calculators/xmultipole.h:    if (_master->_maverick) {
src/libctp/calculators/xmultipole.h: * Calculates electrostatic + induction energy of segment up to Q2-Q2
src/libctp/calculators/xmultipole.h:    // Inter-site energy //
src/libctp/calculators/xmultipole.h:        //if ( abs(_top->PbShortestConnect((*seg1)->getPos(),_seg->getPos()))
src/libctp/calculators/xmultipole.h:        //        > _master->_cutoff) { throw runtime_error("Not this."); }
src/libctp/calculators/xmultipole.h:        //     << (*seg1)->getId() << "|" << (*seg2)->getId() << "   " << flush;
src/libctp/calculators/xmultipole.h:            //(*pit1)->PrintInfo(cout);
src/libctp/calculators/xmultipole.h:            //(*pit2)->PrintInfo(cout);
src/libctp/calculators/xmultipole.h:    // Intra-site energy //
src/libctp/calculators/xmultipole.h:    // Outer-Shell energy //
src/libctp/calculators/xmultipole.h:    vector< PolarSite* > central = _polarSites[ _seg->getId() - 1 ];
src/libctp/calculators/xmultipole.h:    if (_master->_maverick) {
src/libctp/calculators/xmultipole.h:            (*pit)->Depolarize();
src/libctp/calculators/xmultipole.h:    e12  = pol.getPos() - r;
src/libctp/calculators/xmultipole.h:    rbx = - pol._locX * e12;
src/libctp/calculators/xmultipole.h:    rby = - pol._locY * e12;
src/libctp/calculators/xmultipole.h:    rbz = - pol._locZ * e12;
src/libctp/calculators/xmultipole.h:    e12  = pol.getPos() - r;
src/libctp/calculators/xmultipole.h:        rbx = - rax;
src/libctp/calculators/xmultipole.h:        rby = - ray;
src/libctp/calculators/xmultipole.h:        rbz = - raz;
src/libctp/calculators/xmultipole.h:    // Field generated by rank-0 m'pole
src/libctp/calculators/xmultipole.h:    // Field generated by rank-1 m'pole
src/libctp/calculators/xmultipole.h:    // Field generated by rank-2 m'pole
src/libctp/calculators/xmultipole.h: * Used in molecular-polarizability calculator (initialize stage)
src/libctp/calculators/xmultipole.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/xmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/xmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/xmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/xmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/xmultipole.h:        rbx = - rax;
src/libctp/calculators/xmultipole.h:        rby = - ray;
src/libctp/calculators/xmultipole.h:        rbz = - raz;
src/libctp/calculators/xmultipole.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/xmultipole.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/xmultipole.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/xmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/xmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/xmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/xmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/xmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/xmultipole.h:        rbx = - rax;
src/libctp/calculators/xmultipole.h:        rby = - ray;
src/libctp/calculators/xmultipole.h:        rbz = - raz;
src/libctp/calculators/xmultipole.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/xmultipole.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/xmultipole.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/xmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/xmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/xmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/xmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/xmultipole.h:        rbx = - rax;
src/libctp/calculators/xmultipole.h:        rby = - ray;
src/libctp/calculators/xmultipole.h:        rbz = - raz;
src/libctp/calculators/xmultipole.h:    // Fields generated by rank-0 m'poles
src/libctp/calculators/xmultipole.h:    // Fields generated by rank-1 m'poles
src/libctp/calculators/xmultipole.h:    // Fields generated by rank-2 m'poles
src/libctp/calculators/xmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/xmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/xmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/xmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/xmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/xmultipole.h:        rbx = - rax;
src/libctp/calculators/xmultipole.h:        rby = - ray;
src/libctp/calculators/xmultipole.h:        rbz = - raz;
src/libctp/calculators/xmultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/xmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/xmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/xmultipole.h:    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
src/libctp/calculators/xmultipole.h:    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
src/libctp/calculators/xmultipole.h:    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
src/libctp/calculators/xmultipole.h:    //cout << "seg2  " << pol2.getSegment()->getId() << endl;
src/libctp/calculators/xmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/xmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/xmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/xmultipole.h:        rbx = - rax;
src/libctp/calculators/xmultipole.h:        rby = - ray;
src/libctp/calculators/xmultipole.h:        rbz = - raz;
src/libctp/calculators/xmultipole.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/xmultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/xmultipole.h:        //cout << "E up to q <-> q " << E << endl;
src/libctp/calculators/xmultipole.h:        //cout << "E up to q <-> d " << E << endl;
src/libctp/calculators/xmultipole.h:        //cout << "E up to q <-> Q " << E << endl;
src/libctp/calculators/xmultipole.h:        //cout << "E up to d <-> d " << E << endl;
src/libctp/calculators/xmultipole.h:        //cout << "E up to d <-> Q " << E << endl;
src/libctp/calculators/xmultipole.h:        //cout << "E up to Q <-> Q " << E << endl;
src/libctp/calculators/xmultipole.h: * Designed for use in ESP calculator (init. stage). Only for error-checking.
src/libctp/calculators/xmultipole.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/xmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/xmultipole.h:        rbx = - rax;
src/libctp/calculators/xmultipole.h:        rby = - ray;
src/libctp/calculators/xmultipole.h:        rbz = - raz;
src/libctp/calculators/xmultipole.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/xmultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/xmultipole2.h:        double EP;       //   <- Interaction permanent multipoles (inter-site)
src/libctp/calculators/xmultipole2.h:        double EU_INTRA; //   <- Interaction induction multipoles (intra-site)
src/libctp/calculators/xmultipole2.h:        double EU_INTER; //   <- Interaction induction multipoles (inter-site)
src/libctp/calculators/xmultipole2.h:        double u3;      //  |-> NOTE: Only needed when using Thole model
src/libctp/calculators/xmultipole2.h:        double R3;      //  |-> NOTE: reciprocal, i.e. e.g. R3 = 1/(R*R*R)
src/libctp/calculators/xmultipole2.h:        inline double lambda3() { return 1 - exp( -a*u3); }
src/libctp/calculators/xmultipole2.h:        inline double lambda5() { return 1 - (1 + a*u3) * exp( -a*u3); }
src/libctp/calculators/xmultipole2.h:        inline double lambda7() { return 1 - (1 + a*u3 + 0.6*a*a*u3*u3) * exp( -a*u3); }
src/libctp/calculators/xmultipole2.h:        inline double lambda9() { return 1 - (1 + a*u3 + (18*a*a*u3*u3 + 9*a*a*a*u3*u3*u3)/35) * exp( -a*u3); }
src/libctp/calculators/xmultipole2.h:        inline double T20_00()  { return R3 * 0.5 * (3 * raz*raz - 1); }
src/libctp/calculators/xmultipole2.h:        inline double T22c_00() { return R3 * 0.5 * sqrt(3) * (rax*rax - ray*ray); }
src/libctp/calculators/xmultipole2.h:        inline double T00_20()  { return R3 * 0.5 * (3 * rbz*rbz - 1); }
src/libctp/calculators/xmultipole2.h:        inline double T00_22c() { return R3 * 0.5 * sqrt(3) * (rbx*rbx - rby*rby); }
src/libctp/calculators/xmultipole2.h:        inline double T20_1x()  { return R4 * 0.5 * (15*raz*raz*rbx + 6*raz*czx - 3*rbx); }
src/libctp/calculators/xmultipole2.h:        inline double T20_1y()  { return R4 * 0.5 * (15*raz*raz*rby + 6*raz*czy - 3*rby); }
src/libctp/calculators/xmultipole2.h:        inline double T20_1z()  { return R4 * 0.5 * (15*raz*raz*rbz + 6*raz*czz - 3*rbz); }
src/libctp/calculators/xmultipole2.h:        inline double T22c_1x() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbx + 2*rax*cxx - 2*ray*cyx); }
src/libctp/calculators/xmultipole2.h:        inline double T22c_1y() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rby + 2*rax*cxy - 2*ray*cyy); }
src/libctp/calculators/xmultipole2.h:        inline double T22c_1z() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbz + 2*rax*cxz - 2*ray*cyz); }
src/libctp/calculators/xmultipole2.h:        inline double T1x_20()  { return R4 * 0.5 * (15*rbz*rbz*rax + 6*rbz*cxz - 3*rax); }
src/libctp/calculators/xmultipole2.h:        inline double T1y_20()  { return R4 * 0.5 * (15*rbz*rbz*ray + 6*rbz*cyz - 3*ray); }
src/libctp/calculators/xmultipole2.h:        inline double T1z_20()  { return R4 * 0.5 * (15*rbz*rbz*raz + 6*rbz*czz - 3*raz); }
src/libctp/calculators/xmultipole2.h:        inline double T1x_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*rax + 2*rbx*cxx - 2*rby*cxy); }
src/libctp/calculators/xmultipole2.h:        inline double T1y_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*ray + 2*rbx*cyx - 2*rby*cyy); }
src/libctp/calculators/xmultipole2.h:        inline double T1z_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*raz + 2*rbx*czx - 2*rby*czy); }
src/libctp/calculators/xmultipole2.h:        inline double TU20_1x()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbx + lambda5()*(6*raz*czx - 3*rbx)); }
src/libctp/calculators/xmultipole2.h:        inline double TU20_1y()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rby + lambda5()*(6*raz*czy - 3*rby)); }
src/libctp/calculators/xmultipole2.h:        inline double TU20_1z()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbz + lambda5()*(6*raz*czz - 3*rbz)); }
src/libctp/calculators/xmultipole2.h:        inline double TU22c_1x() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbx + lambda5()*(2*rax*cxx - 2*ray*cyx)); }
src/libctp/calculators/xmultipole2.h:        inline double TU22c_1y() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rby + lambda5()*(2*rax*cxy - 2*ray*cyy)); }
src/libctp/calculators/xmultipole2.h:        inline double TU22c_1z() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbz + lambda5()*(2*rax*cxz - 2*ray*cyz)); }
src/libctp/calculators/xmultipole2.h:        inline double TU1x_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*rax + lambda5()*(6*rbz*cxz - 3*rax)); }
src/libctp/calculators/xmultipole2.h:        inline double TU1y_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*ray + lambda5()*(6*rbz*cyz - 3*ray)); }
src/libctp/calculators/xmultipole2.h:        inline double TU1z_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*raz + lambda5()*(6*rbz*czz - 3*raz)); }
src/libctp/calculators/xmultipole2.h:        inline double TU1x_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*rax + lambda5()*(2*rbx*cxx - 2*rby*cxy)); }
src/libctp/calculators/xmultipole2.h:        inline double TU1y_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*ray + lambda5()*(2*rbx*cyx - 2*rby*cyy)); }
src/libctp/calculators/xmultipole2.h:        inline double TU1z_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*raz + lambda5()*(2*rbx*czx - 2*rby*czy)); }
src/libctp/calculators/xmultipole2.h:        inline double T20_20()   { return R5 * 0.75 * (35*raz*raz*rbz*rbz - 5*raz*raz - 5*rbz*rbz + 20*raz*rbz*czz + 2*czz*czz + 1); }
src/libctp/calculators/xmultipole2.h:        inline double T20_21c()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rbz - 5*rbx*rbz + 10*raz*rbx*czz + 10*raz*rbz*czx + 2*czx*czz); }
src/libctp/calculators/xmultipole2.h:        inline double T20_21s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rby*rbz - 5*rby*rbz + 10*raz*rby*czz + 10*raz*rbz*czy + 2*czy*czz); }
src/libctp/calculators/xmultipole2.h:        inline double T20_22c()  { return R5 * 0.25 * sqrt(3) * (35*raz*raz*rbx*rbx - 35*raz*raz*rby*rby - 5*rbx*rbx + 5*rby*rby + 20*raz*rbx*czx - 20*raz*rby*czy + 2*czx*czx - 2*czy*czy); }
src/libctp/calculators/xmultipole2.h:        inline double T20_22s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rby - 5*rbx*rby + 10*raz*rbx*czy + 10*raz*rby*czx + 2*czx*czy); }
src/libctp/calculators/xmultipole2.h:        inline double T21c_22c() { return R5 * 0.5 * (35*rax*raz*rbx*rbx - 35*rax*raz*rby*rby + 10*rax*rbx*czx - 10*rax*rby*czy + 10*raz*rbx*cxx - 10*raz*rby*cxy + 2*cxx*czx - 2*cxy*czy); }
src/libctp/calculators/xmultipole2.h:        inline double T21s_22c() { return R5 * 0.5 * (35*ray*raz*rbx*rbx - 35*ray*raz*rby*rby + 10*ray*rbx*czx - 10*ray*rby*czy + 10*raz*rbx*cyx - 10*raz*rby*cyy + 2*cyx*czx - 2*cyy*czy); }
src/libctp/calculators/xmultipole2.h:        inline double T22c_22c() { return R5 * 0.25 * (35*rax*rax*rbx*rbx - 35*rax*rax*rby*rby - 35*ray*ray*rbx*rbx + 35*ray*ray*rby*rby + 20*rax*rbx*cxx - 20*rax*rby*cxy - 20*ray*rbx*cyx + 20*ray*rby*cyy + 2*cxx*cxx - 2*cxy*cxy - 2*cyx*cyx + 2*cyy*cyy); }
src/libctp/calculators/xmultipole2.h:        inline double T22c_22s() { return R5 * 0.5 * (35*rax*rax*rbx*rby - 35*ray*ray*rbx*rby + 10*rax*rbx*cxy + 10*rax*rby*cxx - 10*ray*rbx*cyy - 10*ray*rby*cyx + 2*cxx*cxy - 2*cyx*cyy); }
src/libctp/calculators/xmultipole2.h:        inline double T21c_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*raz - 5*rax*raz + 10*rbz*rax*czz + 10*rbz*raz*cxz + 2*cxz*czz); }
src/libctp/calculators/xmultipole2.h:        inline double T21s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*ray*raz - 5*ray*raz + 10*rbz*ray*czz + 10*rbz*raz*cyz + 2*cyz*czz); }
src/libctp/calculators/xmultipole2.h:        inline double T22c_20()  { return R5 * 0.25 * sqrt(3) * (35*rbz*rbz*rax*rax - 35*rbz*rbz*ray*ray - 5*rax*rax + 5*ray*ray + 20*rbz*rax*cxz - 20*rbz*ray*cyz + 2*cxz*cxz - 2*cyz*cyz); }
src/libctp/calculators/xmultipole2.h:        inline double T22s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*ray - 5*rax*ray + 10*rbz*rax*cyz + 10*rbz*ray*cxz + 2*cxz*cyz); }
src/libctp/calculators/xmultipole2.h:        inline double T22c_21c() { return R5 * 0.5 * (35*rbx*rbz*rax*rax - 35*rbx*rbz*ray*ray + 10*rbx*rax*cxz - 10*rbx*ray*cyz + 10*rbz*rax*cxx - 10*rbz*ray*cyx + 2*cxx*cxz - 2*cyx*cyz); }
src/libctp/calculators/xmultipole2.h:        inline double T22c_21s() { return R5 * 0.5 * (35*rby*rbz*rax*rax - 35*rby*rbz*ray*ray + 10*rby*rax*cxz - 10*rby*ray*cyz + 10*rbz*rax*cxy - 10*rbz*ray*cyy + 2*cxy*cxz - 2*cyy*cyz); }
src/libctp/calculators/xmultipole2.h:        inline double T22s_22c() { return R5 * 0.5 * (35*rbx*rbx*rax*ray - 35*rby*rby*rax*ray + 10*rbx*rax*cyx + 10*rbx*ray*cxx - 10*rby*rax*cyy - 10*rby*ray*cxy + 2*cxx*cyx - 2*cxy*cyy); }
src/libctp/calculators/xmultipole2.h:             _seg1 = top->getSegment(seg1Id);
src/libctp/calculators/xmultipole2.h:             _seg2 = top->getSegment(seg2Id);      
src/libctp/calculators/xmultipole2.h:                 // Watch out for periodic-boundary correction
src/libctp/calculators/xmultipole2.h:                 _pair = top->NBList().FindPair(_seg1,_seg2);
src/libctp/calculators/xmultipole2.h:                 assert ( pairId == _pair->getId() );                           // Inconsistency in job input w.r.t. top
src/libctp/calculators/xmultipole2.h:                 _center = ( _pair->Seg1PbCopy()->Atoms().size()
src/libctp/calculators/xmultipole2.h:                           * _pair->Seg1PbCopy()->getPos()
src/libctp/calculators/xmultipole2.h:                           + _pair->Seg2PbCopy()->Atoms().size()
src/libctp/calculators/xmultipole2.h:                           * _pair->Seg2PbCopy()->getPos() )
src/libctp/calculators/xmultipole2.h:                           / (_pair->Seg1PbCopy()->Atoms().size()
src/libctp/calculators/xmultipole2.h:                           +  _pair->Seg2PbCopy()->Atoms().size() );
src/libctp/calculators/xmultipole2.h:                 if      (_site_id == seg1Id) { _center = _seg1->getPos();
src/libctp/calculators/xmultipole2.h:                 else if (_site_id == seg2Id) { _center = _seg2->getPos();
src/libctp/calculators/xmultipole2.h:           fprintf(out, "%5d %-20s  E_TOT %+4.7f E_PAIR_PAIR %+4.7f"
src/libctp/calculators/xmultipole2.h:           fprintf(out, "%5d %-20s  E_TOT %+4.7f E_SITE_SITE %+4.7f"
src/libctp/calculators/xmultipole2.h:                while (_forker->NextChunkTodo(_id,1)) {
src/libctp/calculators/xmultipole2.h:                    this->InterInduce();
src/libctp/calculators/xmultipole2.h:                    _forker->OpenChunks(_chunk1, _chunk2);
src/libctp/calculators/xmultipole2.h:                while (_forker->NextChunkTodo(_id,0)) {
src/libctp/calculators/xmultipole2.h:                    this->InterEnergy();
src/libctp/calculators/xmultipole2.h:                    _forker->OpenChunks(_chunk1, _chunk2);
src/libctp/calculators/xmultipole2.h:                // Site-non-site interaction
src/libctp/calculators/xmultipole2.h:                if (this->_forker->_job->getSiteId() == (*_vsegs_cut1)[i]->getId()
src/libctp/calculators/xmultipole2.h:                 || this->_forker->_job->getSiteId() == (*_vsegs_cut1)[j]->getId()) {
src/libctp/calculators/xmultipole2.h:                // Non-site-non-site interaction
src/libctp/calculators/xmultipole2.h:            int T = this->_master->_subthreads;         // Threads
src/libctp/calculators/xmultipole2.h:            int nt = (N-nr) / C;                        // Chunk size
src/libctp/calculators/xmultipole2.h:                this->_master->_coutMutex.Lock();
src/libctp/calculators/xmultipole2.h:                        printf("--------+");
src/libctp/calculators/xmultipole2.h:                    printf("--------+");
src/libctp/calculators/xmultipole2.h:                this->_master->_coutMutex.Unlock();
src/libctp/calculators/xmultipole2.h:                            _indus[indu_id]->Setc1c2(i,j);
src/libctp/calculators/xmultipole2.h:                            _indus[indu_id]->Setnx12ny12(_nx1[i][j],
src/libctp/calculators/xmultipole2.h:        vector< Segment* >           _segsPolSphere;  // Segments    in c/o 0-1
src/libctp/calculators/xmultipole2.h:        vector< Segment* >           _segsOutSphere;  // Segments    in c/0 1-2
src/libctp/calculators/xmultipole2.h:        vector< vector<PolarSite*> > _polsPolSphere;  // Polar sites in c/o 0-1
src/libctp/calculators/xmultipole2.h:        vector< vector<PolarSite*> > _polsOutSphere;  // Polar sites in c/o 1-2
src/libctp/calculators/xmultipole2.h:    // Allocate .mps files to segments (n 0, e -1, h +1)
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key) ) {
src/libctp/calculators/xmultipole2.h:            _xml_file = opt->get(key).as< string >();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".job_file")) {
src/libctp/calculators/xmultipole2.h:            _job_file   = opt->get(key+".job_file").as<string>();
src/libctp/calculators/xmultipole2.h:            _job_file   = opt->get(key+".job_file").as<string>();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".emp_file")) {
src/libctp/calculators/xmultipole2.h:            _emp_file   = opt->get(key+".emp_file").as<string>();
src/libctp/calculators/xmultipole2.h:            _emp_file   = opt->get(key+".emp_file").as<string>();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/xmultipole2.h:            _outFile = opt->get(key+".output").as< string >();
src/libctp/calculators/xmultipole2.h:        if (opt->exists(key+".pdb_check")) {
src/libctp/calculators/xmultipole2.h:            _pdb_check = opt->get(key+".pdb_check").as<string>();
src/libctp/calculators/xmultipole2.h:        if (opt->exists(key+".write_chk")) {
src/libctp/calculators/xmultipole2.h:            _write_chk_suffix = opt->get(key+".write_chk").as<string>();
src/libctp/calculators/xmultipole2.h:        if (opt->exists(key+".format_chk")) {
src/libctp/calculators/xmultipole2.h:            _chk_format = opt->get(key+".format_chk").as<string>();
src/libctp/calculators/xmultipole2.h:        if (opt->exists(key+".split_dpl")) {
src/libctp/calculators/xmultipole2.h:            _chk_split_dpl = (opt->get(key+".split_dpl").as<int>() == 1) ?
src/libctp/calculators/xmultipole2.h:        if (opt->exists(key+".dpl_spacing")) {
src/libctp/calculators/xmultipole2.h:            _chk_dpl_spacing = opt->get(key+".dpl_spacing").as<double>();
src/libctp/calculators/xmultipole2.h:            _chk_dpl_spacing = 1.0e-6;
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".induce") ) {
src/libctp/calculators/xmultipole2.h:            int induce = opt->get(key+".induce").as< int >();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".induce_intra_pair") ) {
src/libctp/calculators/xmultipole2.h:            int induce = opt->get(key+".induce_intra_pair").as< int >();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".cutoff1") ) {
src/libctp/calculators/xmultipole2.h:            _cutoff = opt->get(key+".cutoff1").as< double >();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".cutoff2") ) {
src/libctp/calculators/xmultipole2.h:            _cutoff2 = opt->get(key+".cutoff2").as< double >();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".subthreads") ) {
src/libctp/calculators/xmultipole2.h:            _subthreads = opt->get(key+".subthreads").as< double >();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".exp_damp") ) {
src/libctp/calculators/xmultipole2.h:            _aDamp = opt->get(key+".exp_damp").as< double >();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".scaling") ) {
src/libctp/calculators/xmultipole2.h:            _scale1 = opt->get(key+".scaling").as< vector<double> >();
src/libctp/calculators/xmultipole2.h:                cout << endl << "... ... WARNING: 1-N SCALING SWITCHED OFF"; }
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".wSOR_N") ) {
src/libctp/calculators/xmultipole2.h:            _wSOR_N = opt->get(key+".wSOR_N").as< float >();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".wSOR_C") ) {
src/libctp/calculators/xmultipole2.h:            _wSOR_C = opt->get(key+".wSOR_C").as< float >();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".max_iter") ) {
src/libctp/calculators/xmultipole2.h:            _maxIter = opt->get(key+".max_iter").as< int >();
src/libctp/calculators/xmultipole2.h:        if ( opt->exists(key+".tolerance") ) {
src/libctp/calculators/xmultipole2.h:            _epsTol = opt->get(key+".tolerance").as< double >();
src/libctp/calculators/xmultipole2.h:    // Load polar-site indices from XML //
src/libctp/calculators/xmultipole2.h:    Property allocation; // <- Which polar sites are part of which fragment?
src/libctp/calculators/xmultipole2.h:    /* --- MULTIPOLES.XML Structure ---
src/libctp/calculators/xmultipole2.h:        string molName = (*molit)->get("name").as<string> ();
src/libctp/calculators/xmultipole2.h:        list<Property *> segs = (*molit)->Select(key);
src/libctp/calculators/xmultipole2.h:            string segName = (*segit)->get("name").as<string> ();
src/libctp/calculators/xmultipole2.h:            if ( (*segit)->exists("map2md")) {
src/libctp/calculators/xmultipole2.h:                int map2md = (*segit)->get("map2md").as<int>();
src/libctp/calculators/xmultipole2.h:            list<Property *> frags = (*segit)->Select(key);
src/libctp/calculators/xmultipole2.h:                string fragName = (*fragit)->get("name").as<string> ();
src/libctp/calculators/xmultipole2.h:                string mpoles = (*fragit)->get("mpoles").as<string> ();
src/libctp/calculators/xmultipole2.h:                if ((*fragit)->exists("localframe_mps")) {
src/libctp/calculators/xmultipole2.h:                   trihedron_mps = (*fragit)->get("localframe_mps")
src/libctp/calculators/xmultipole2.h:                   trihedron_mps = (*fragit)->get("localframe")
src/libctp/calculators/xmultipole2.h:                if ((*fragit)->exists("weights_mps")) {
src/libctp/calculators/xmultipole2.h:                   weights_mps = (*fragit)->get("weights_mps")
src/libctp/calculators/xmultipole2.h:                   weights_mps = (*fragit)->get("weights")
src/libctp/calculators/xmultipole2.h:    QMNBList &nblist = top->NBList();
src/libctp/calculators/xmultipole2.h:            int    energy_site_id = -1;
src/libctp/calculators/xmultipole2.h:            Segment *seg1   = top->getSegment(seg1Id);
src/libctp/calculators/xmultipole2.h:            Segment *seg2   = top->getSegment(seg2Id);
src/libctp/calculators/xmultipole2.h:            _XJobs.back()->setType(job_type, energy_site_id);
src/libctp/calculators/xmultipole2.h:        if (_mpsFile_pSites.count(misit->second) > 0 ) { continue; }
src/libctp/calculators/xmultipole2.h:        else { _mpsFile_pSites[misit->second] = Parse_GDMA(misit->second, 0); }
src/libctp/calculators/xmultipole2.h:        if (_mpsFile_pSites.count(misit->second) > 0 ) { continue; }
src/libctp/calculators/xmultipole2.h:        else { _mpsFile_pSites[misit->second] = Parse_GDMA(misit->second, -1); }
src/libctp/calculators/xmultipole2.h:        if (_mpsFile_pSites.count(misit->second) > 0 ) { continue; }
src/libctp/calculators/xmultipole2.h:        else { _mpsFile_pSites[misit->second] = Parse_GDMA(misit->second, +1); }
src/libctp/calculators/xmultipole2.h:        string mpsfile1 = (*jit)->getMPS1();
src/libctp/calculators/xmultipole2.h:        string mpsfile2 = (*jit)->getMPS2();
src/libctp/calculators/xmultipole2.h://         cout << endl << "KEY_" << it->first << flush;
src/libctp/calculators/xmultipole2.h:            assert( split.size() == 5 );                                        // <- File format correct?
src/libctp/calculators/xmultipole2.h:            assert( top->getSegment(segId)->getName() == segName );             // <- Input matches topology?
src/libctp/calculators/xmultipole2.h:    assert( _segId_mpsFile_n.size() == top->Segments().size() );                // <- Input for all segments?
src/libctp/calculators/xmultipole2.h:    for (sit = top->Segments().begin();
src/libctp/calculators/xmultipole2.h:         sit < top->Segments().end();
src/libctp/calculators/xmultipole2.h:        int segId                   = seg->getId();
src/libctp/calculators/xmultipole2.h:        bool map2md                 = _map2md[seg->getName()];
src/libctp/calculators/xmultipole2.h:            pols_n[i]->setQs( pols_h[i]->getQs(+1), +1 );
src/libctp/calculators/xmultipole2.h:            pols_n[i]->setPs( pols_h[i]->getPs(+1), +1 );
src/libctp/calculators/xmultipole2.h:            pols_n[i]->setQs(pols_e[i]->getQs(-1), -1 );
src/libctp/calculators/xmultipole2.h:            pols_n[i]->setPs(pols_e[i]->getPs(-1), -1 );
src/libctp/calculators/xmultipole2.h:        for (fit = seg->Fragments().begin();
src/libctp/calculators/xmultipole2.h:             fit < seg->Fragments().end();
src/libctp/calculators/xmultipole2.h:            // Retrieve polar-site data for this fragment
src/libctp/calculators/xmultipole2.h:            string idkey                     = frag->getName() + seg->getName()
src/libctp/calculators/xmultipole2.h:                                             + seg->getMolecule()->getName();
src/libctp/calculators/xmultipole2.h:            if (map2md && polesInFrag.size() != frag->Atoms().size()) {
src/libctp/calculators/xmultipole2.h:                     << "ERROR: Segment " << seg->getName()
src/libctp/calculators/xmultipole2.h:                     << " Fragment " << frag->getName()
src/libctp/calculators/xmultipole2.h:                    trihedron_pol.push_back(pols_n[(*iit)-1]);
src/libctp/calculators/xmultipole2.h:                trihedron_ints  = frag->getTrihedron();
src/libctp/calculators/xmultipole2.h:                    for (ait = frag->Atoms().begin();
src/libctp/calculators/xmultipole2.h:                         ait < frag->Atoms().end();
src/libctp/calculators/xmultipole2.h:                        if ((*ait)->getQMId() == (*iit)) {
src/libctp/calculators/xmultipole2.h:                    vec r1MD = trihedron_atm[0]->getPos();
src/libctp/calculators/xmultipole2.h:                    vec r2MD = trihedron_atm[1]->getPos();
src/libctp/calculators/xmultipole2.h:                    vec r3MD = trihedron_atm[2]->getPos();
src/libctp/calculators/xmultipole2.h:                    vec r1QM = trihedron_pol[0]->getPos();
src/libctp/calculators/xmultipole2.h:                    vec r2QM = trihedron_pol[1]->getPos();
src/libctp/calculators/xmultipole2.h:                    vec r3QM = trihedron_pol[2]->getPos();
src/libctp/calculators/xmultipole2.h:                    xMD = r2MD - r1MD;
src/libctp/calculators/xmultipole2.h:                    yMD = r3MD - r1MD;
src/libctp/calculators/xmultipole2.h:                    xQM = r2QM - r1QM;
src/libctp/calculators/xmultipole2.h:                    yQM = r3QM - r1QM;
src/libctp/calculators/xmultipole2.h:                    vec r1MD = trihedron_atm[0]->getPos();
src/libctp/calculators/xmultipole2.h:                    vec r2MD = trihedron_atm[1]->getPos();
src/libctp/calculators/xmultipole2.h:                    vec r1QM = trihedron_pol[0]->getPos();
src/libctp/calculators/xmultipole2.h:                    vec r2QM = trihedron_pol[1]->getPos();
src/libctp/calculators/xmultipole2.h:                    xMD = r2MD - r1MD;
src/libctp/calculators/xmultipole2.h:                    xQM = r2QM - r1QM;
src/libctp/calculators/xmultipole2.h:    if      ( xMD.getX()*xMD.getX() < 1e-6 ) { yMDtmp = vec(1,0,0); }
src/libctp/calculators/xmultipole2.h:    else if ( xMD.getY()*xMD.getY() < 1e-6 ) { yMDtmp = vec(0,1,0); }
src/libctp/calculators/xmultipole2.h:    else if ( xMD.getZ()*xMD.getZ() < 1e-6 ) { yMDtmp = vec(0,0,1); }
src/libctp/calculators/xmultipole2.h:    if      ( xQM.getX()*xQM.getX() < 1e-6 ) { yQMtmp = vec(1,0,0); }
src/libctp/calculators/xmultipole2.h:    else if ( xQM.getY()*xQM.getY() < 1e-6 ) { yQMtmp = vec(0,1,0); }
src/libctp/calculators/xmultipole2.h:    else if ( xQM.getZ()*xQM.getZ() < 1e-6 ) { yQMtmp = vec(0,0,1); }
src/libctp/calculators/xmultipole2.h:       double tmp_z = 1/xMD.getZ() * (-xMD.getX()*tmp_x - xMD.getY()*tmp_y);
src/libctp/calculators/xmultipole2.h:       double tmp_z = 1/xQM.getZ() * (-xQM.getX()*tmp_x - xQM.getY()*tmp_y);
src/libctp/calculators/xmultipole2.h:                         << frag->getName() << ": This will generate artifacts "
src/libctp/calculators/xmultipole2.h:                         << "when mapping higher-rank multipoles (dipoles, ..)."
src/libctp/calculators/xmultipole2.h:                         << frag->getName();
src/libctp/calculators/xmultipole2.h:                         << frag->getName() << ": This will generate artifacts "
src/libctp/calculators/xmultipole2.h:                         << "when mapping higher-rank multipoles (dipoles, ..)."
src/libctp/calculators/xmultipole2.h:                    vec pos = pols_n[polesInFrag[i]-1]->getPos();
src/libctp/calculators/xmultipole2.h:                translateMP2MD = frag->getCoMD() - CoMP;
src/libctp/calculators/xmultipole2.h:                PolarSite *templ        = pols_n[poleId-1];
src/libctp/calculators/xmultipole2.h:                PolarSite *newSite      = top->AddPolarSite(name);
src/libctp/calculators/xmultipole2.h:                newSite->ImportFrom(templ);
src/libctp/calculators/xmultipole2.h:                seg->AddPolarSite(newSite);
src/libctp/calculators/xmultipole2.h:                frag->AddPolarSite(newSite);
src/libctp/calculators/xmultipole2.h:                    newSite->Translate(translateMP2MD);
src/libctp/calculators/xmultipole2.h:                    newSite->Rotate(rotateMP2MD, frag->getCoMD());
src/libctp/calculators/xmultipole2.h:                    vec mdpos = frag->Atoms()[i]->getPos();
src/libctp/calculators/xmultipole2.h:                    newSite->setPos(mdpos);
src/libctp/calculators/xmultipole2.h:                    if (newSite->getRank() > 0) {
src/libctp/calculators/xmultipole2.h:             << "WARNING: MAP2MD = TRUE while using higher-rank multipoles can "
src/libctp/calculators/xmultipole2.h:             << "frame. If you know what you are doing - proceed ... "
src/libctp/calculators/xmultipole2.h:    top->setIsEStatified(true);
src/libctp/calculators/xmultipole2.h:    int segId                   = seg->getId();
src/libctp/calculators/xmultipole2.h:    bool map2md                 = _map2md[seg->getName()];
src/libctp/calculators/xmultipole2.h:    for (fit = seg->Fragments().begin();
src/libctp/calculators/xmultipole2.h:         fit < seg->Fragments().end();
src/libctp/calculators/xmultipole2.h:        // Retrieve polar-site data for this fragment
src/libctp/calculators/xmultipole2.h:        string idkey                = frag->getName() + seg->getName()
src/libctp/calculators/xmultipole2.h:                                    + seg->getMolecule()->getName();
src/libctp/calculators/xmultipole2.h:        if (map2md && polesInFrag.size() != frag->Atoms().size()) {
src/libctp/calculators/xmultipole2.h:                 << "ERROR: Segment " << seg->getName()
src/libctp/calculators/xmultipole2.h:                 << " Fragment " << frag->getName()
src/libctp/calculators/xmultipole2.h:                trihedron_pol.push_back(pols_n[(*iit)-1]);
src/libctp/calculators/xmultipole2.h:            trihedron_ints  = frag->getTrihedron();
src/libctp/calculators/xmultipole2.h:                for (ait = frag->Atoms().begin();
src/libctp/calculators/xmultipole2.h:                     ait < frag->Atoms().end();
src/libctp/calculators/xmultipole2.h:                    if ((*ait)->getQMId() == (*iit)) {
src/libctp/calculators/xmultipole2.h:                vec r1MD = trihedron_atm[0]->getPos();
src/libctp/calculators/xmultipole2.h:                vec r2MD = trihedron_atm[1]->getPos();
src/libctp/calculators/xmultipole2.h:                vec r3MD = trihedron_atm[2]->getPos();
src/libctp/calculators/xmultipole2.h:                vec r1QM = trihedron_pol[0]->getPos();
src/libctp/calculators/xmultipole2.h:                vec r2QM = trihedron_pol[1]->getPos();
src/libctp/calculators/xmultipole2.h:                vec r3QM = trihedron_pol[2]->getPos();
src/libctp/calculators/xmultipole2.h:                xMD = r2MD - r1MD;
src/libctp/calculators/xmultipole2.h:                yMD = r3MD - r1MD;
src/libctp/calculators/xmultipole2.h:                xQM = r2QM - r1QM;
src/libctp/calculators/xmultipole2.h:                yQM = r3QM - r1QM;
src/libctp/calculators/xmultipole2.h:                vec r1MD = trihedron_atm[0]->getPos();
src/libctp/calculators/xmultipole2.h:                vec r2MD = trihedron_atm[1]->getPos();
src/libctp/calculators/xmultipole2.h:                vec r1QM = trihedron_pol[0]->getPos();
src/libctp/calculators/xmultipole2.h:                vec r2QM = trihedron_pol[1]->getPos();
src/libctp/calculators/xmultipole2.h:                xMD = r2MD - r1MD;
src/libctp/calculators/xmultipole2.h:                xQM = r2QM - r1QM;
src/libctp/calculators/xmultipole2.h:    if      ( xMD.getX()*xMD.getX() < 1e-6 ) { yMDtmp = vec(1,0,0); }
src/libctp/calculators/xmultipole2.h:    else if ( xMD.getY()*xMD.getY() < 1e-6 ) { yMDtmp = vec(0,1,0); }
src/libctp/calculators/xmultipole2.h:    else if ( xMD.getZ()*xMD.getZ() < 1e-6 ) { yMDtmp = vec(0,0,1); }
src/libctp/calculators/xmultipole2.h:    if      ( xQM.getX()*xQM.getX() < 1e-6 ) { yQMtmp = vec(1,0,0); }
src/libctp/calculators/xmultipole2.h:    else if ( xQM.getY()*xQM.getY() < 1e-6 ) { yQMtmp = vec(0,1,0); }
src/libctp/calculators/xmultipole2.h:    else if ( xQM.getZ()*xQM.getZ() < 1e-6 ) { yQMtmp = vec(0,0,1); }
src/libctp/calculators/xmultipole2.h:    double tmp_z = 1/xMD.getZ() * (-xMD.getX()*tmp_x - xMD.getY()*tmp_y);
src/libctp/calculators/xmultipole2.h:    double tmp_z = 1/xQM.getZ() * (-xQM.getX()*tmp_x - xQM.getY()*tmp_y);
src/libctp/calculators/xmultipole2.h:                //     << frag->getName() << ": This will generate artifacts "
src/libctp/calculators/xmultipole2.h:                //     << "when mapping higher-rank multipoles (dipoles, ..)."
src/libctp/calculators/xmultipole2.h:                     << frag->getName();
src/libctp/calculators/xmultipole2.h:                     << frag->getName() << ": This will generate artifacts "
src/libctp/calculators/xmultipole2.h:                     << "when mapping higher-rank multipoles (dipoles, ..)."
src/libctp/calculators/xmultipole2.h:                vec pos = pols_n[polesInFrag[i]-1]->getPos();
src/libctp/calculators/xmultipole2.h:            translateMP2MD = frag->getCoMD() - CoMP;
src/libctp/calculators/xmultipole2.h:            PolarSite *templ        = pols_n[poleId-1];
src/libctp/calculators/xmultipole2.h:            PolarSite *newSite      = new PolarSite(-1, name);
src/libctp/calculators/xmultipole2.h:            newSite->ImportFrom(templ);
src/libctp/calculators/xmultipole2.h:                newSite->Translate(translateMP2MD);
src/libctp/calculators/xmultipole2.h:                newSite->Rotate(rotateMP2MD, frag->getCoMD());
src/libctp/calculators/xmultipole2.h:                vec mdpos = frag->Atoms()[i]->getPos();
src/libctp/calculators/xmultipole2.h:                newSite->setPos(mdpos);
src/libctp/calculators/xmultipole2.h:                if (newSite->getRank() > 0) {
src/libctp/calculators/xmultipole2.h:            newSite->Charge(0);
src/libctp/calculators/xmultipole2.h:             << "WARNING: MAP2MD = TRUE while using higher-rank multipoles can "
src/libctp/calculators/xmultipole2.h:             << "frame. If you know what you are doing - proceed ... "
src/libctp/calculators/xmultipole2.h:    vector<double> Qs; // <- multipole moments
src/libctp/calculators/xmultipole2.h:    double         P1; // <- dipole polarizability
src/libctp/calculators/xmultipole2.h:    // ! SP        RB3LYP          6-311+G(d,p)
src/libctp/calculators/xmultipole2.h:    // C          -4.2414603400   -3.8124751600    0.0017575736    Rank  2
src/libctp/calculators/xmultipole2.h:    //  -0.3853409355
src/libctp/calculators/xmultipole2.h:    //  -0.0002321905   0.2401559510   0.6602334308
src/libctp/calculators/xmultipole2.h:    //  -0.7220625314   0.0004894995  -0.0003833545   0.4526409813  -0.50937399
src/libctp/calculators/xmultipole2.h:                P1 = -1.;
src/libctp/calculators/xmultipole2.h:                int id = poleCount++;  // <- starts from 1
src/libctp/calculators/xmultipole2.h:                newPole->setRank(rank);
src/libctp/calculators/xmultipole2.h:                newPole->setPos(pos);
src/libctp/calculators/xmultipole2.h:                P1 = 1e-3 * boost::lexical_cast<double>(split[1]);
src/libctp/calculators/xmultipole2.h:                thisPole->setPs(P1, state);
src/libctp/calculators/xmultipole2.h:                int lineRank = int( sqrt(thisPole->getQs(state).size()) + 0.5 );
src/libctp/calculators/xmultipole2.h:                thisPole->setQs(Qs, state);
src/libctp/calculators/xmultipole2.h:    printf("\n... ... ... Reading %-25s -> Q0(Sum) = %+1.3f ",
src/libctp/calculators/xmultipole2.h:            string elem = (*pol)->getName();
src/libctp/calculators/xmultipole2.h:            if      (elem == "C") { alpha = 1.75e-3;  } // <- conversion from
src/libctp/calculators/xmultipole2.h:            else if (elem == "H") { alpha = 0.696e-3; } //    A³ to nm³ = 10⁻³
src/libctp/calculators/xmultipole2.h:            else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/calculators/xmultipole2.h:            else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/calculators/xmultipole2.h:            else if (elem == "S") { alpha = 2.926e-3; }
src/libctp/calculators/xmultipole2.h:            //if      (elem == "C") { alpha = 1.334e-3; } // <- conversion from
src/libctp/calculators/xmultipole2.h:            //else if (elem == "H") { alpha = 0.496e-3; } //    A³ to nm³ = 10⁻³
src/libctp/calculators/xmultipole2.h:            //else if (elem == "N") { alpha = 1.073e-3; }
src/libctp/calculators/xmultipole2.h:            //else if (elem == "O") { alpha = 0.837e-3; }
src/libctp/calculators/xmultipole2.h:            //else if (elem == "S") { alpha = 3.300e-3; }
src/libctp/calculators/xmultipole2.h:            (*pol)->setPs(alpha, state);
src/libctp/calculators/xmultipole2.h:    Collect_XML(_xml_file, top); // <- Allocate polar sites to fragments    
src/libctp/calculators/xmultipole2.h:    Collect_EMP(_emp_file, top); // <- Collect segs .mps => Background .mps
src/libctp/calculators/xmultipole2.h:    Collect_JOB(_job_file, top); // <- Collect jobs .mps => Foreground .mps
src/libctp/calculators/xmultipole2.h:    Collect_MPS(top);            // <- Parse all .mps files (fore-, background)
src/libctp/calculators/xmultipole2.h:    if (!top->isRigid()) {
src/libctp/calculators/xmultipole2.h:        bool isRigid = top->Rigidify();
src/libctp/calculators/xmultipole2.h:    if (top->isEStatified() == false) {
src/libctp/calculators/xmultipole2.h:        this->Create_MPOLS(top);
src/libctp/calculators/xmultipole2.h:             << "... ... Created " << top->PolarSites().size()
src/libctp/calculators/xmultipole2.h:             << "... ... Writing polar-site coordinates to "
src/libctp/calculators/xmultipole2.h:        for (sit = top->Segments().begin();
src/libctp/calculators/xmultipole2.h:             sit < top->Segments().end();
src/libctp/calculators/xmultipole2.h:            (*sit)->WritePDB(mpPDB, "Multipoles", "MD");
src/libctp/calculators/xmultipole2.h:        _subthreads = (_nThreads - _XJobs.size()) / _XJobs.size() + 1;
src/libctp/calculators/xmultipole2.h:        jobOps[id]->InitSlotData(top);
src/libctp/calculators/xmultipole2.h:        jobOps[id]->Start();
src/libctp/calculators/xmultipole2.h:        jobOps[id]->WaitDone();
src/libctp/calculators/xmultipole2.h:    out = fopen(this->_outFile.c_str(), "w");
src/libctp/calculators/xmultipole2.h:        (*jit)->WriteInfoLine(out);
src/libctp/calculators/xmultipole2.h:    _polarSites.resize(top->Segments().size());
src/libctp/calculators/xmultipole2.h:    assert(top->Segments().size() == _polarSites.size());
src/libctp/calculators/xmultipole2.h:    for (sitRef = top->Segments().begin(), sitNew = _polarSites.begin();
src/libctp/calculators/xmultipole2.h:         sitRef < top->Segments().end();
src/libctp/calculators/xmultipole2.h:        (*sitNew).resize((*sitRef)->PolarSites().size());
src/libctp/calculators/xmultipole2.h:        for (pitRef = (*sitRef)->PolarSites().begin(),
src/libctp/calculators/xmultipole2.h:             pitRef < (*sitRef)->PolarSites().end();
src/libctp/calculators/xmultipole2.h:            (*pitNew)->ImportFrom(*pitRef, "full");
src/libctp/calculators/xmultipole2.h:            (*pitNew)->Charge(0);
src/libctp/calculators/xmultipole2.h:        _job = _master->RequestNextJob(_id, _top);
src/libctp/calculators/xmultipole2.h:        else { this->EvalJob(_top, _job); }
src/libctp/calculators/xmultipole2.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/xmultipole2.h:    int subs_here1 = job->getSeg1Id();
src/libctp/calculators/xmultipole2.h:    int subs_here2 = job->getSeg2Id();
src/libctp/calculators/xmultipole2.h:    vector<PolarSite*> subs1_raw = _master->_mpsFile_pSites_job[job->getMPS1()];
src/libctp/calculators/xmultipole2.h:    vector<PolarSite*> subs2_raw = _master->_mpsFile_pSites_job[job->getMPS2()];
src/libctp/calculators/xmultipole2.h:    vector<PolarSite*> subs1 = _master->Map_MPols_To_Seg(subs1_raw,job->Seg1());
src/libctp/calculators/xmultipole2.h:    vector<PolarSite*> subs2 = _master->Map_MPols_To_Seg(subs2_raw,job->Seg2());
src/libctp/calculators/xmultipole2.h:    _polarSites_job[subs_here1-1] = subs1;
src/libctp/calculators/xmultipole2.h:    _polarSites_job[subs_here2-1] = subs2;
src/libctp/calculators/xmultipole2.h:    vec center = job->Center();
src/libctp/calculators/xmultipole2.h:    // vec center = job->Seg1()->getPos(); // UNCOMMENT TO COMPARE TO EMULTIPOLE
src/libctp/calculators/xmultipole2.h:    this->_segsPolSphere.clear(); // <- Segments    within cutoff
src/libctp/calculators/xmultipole2.h:    this->_segsOutSphere.clear(); // <- Segments    within cutoff1, cutoff2
src/libctp/calculators/xmultipole2.h:    this->_polsPolSphere.clear(); // <- Polar sites within cutoff
src/libctp/calculators/xmultipole2.h:    this->_polsOutSphere.clear(); // <- Polar sites within cutoff1, cutoff2
src/libctp/calculators/xmultipole2.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/xmultipole2.h:        double r12 = abs(_top->PbShortestConnect((*sit)->getPos(), center));
src/libctp/calculators/xmultipole2.h:        // Always add pair-job segments to polSphere, even for cut-off = 0.0
src/libctp/calculators/xmultipole2.h:        if ( (*sit)->getId() == job->getSeg1Id()
src/libctp/calculators/xmultipole2.h:          || (*sit)->getId() == job->getSeg2Id()) {
src/libctp/calculators/xmultipole2.h:            if   (job->getType() == "pair") { r12 = -1; }
src/libctp/calculators/xmultipole2.h:        if      ( r12 > _master->_cutoff2) { continue; }
src/libctp/calculators/xmultipole2.h:        else if ( r12 > _master->_cutoff ) {
src/libctp/calculators/xmultipole2.h:            _polsOutSphere.push_back( _polarSites_job[(*sit)->getId() - 1] );
src/libctp/calculators/xmultipole2.h:            _polsPolSphere.push_back( _polarSites_job[(*sit)->getId() - 1] );
src/libctp/calculators/xmultipole2.h:    if (_master->_maverick) {
src/libctp/calculators/xmultipole2.h:    job->setSizePol(_polsPolSphere.size());
src/libctp/calculators/xmultipole2.h:    job->setSizeShell(_polsOutSphere.size());
src/libctp/calculators/xmultipole2.h://        (*sit)->WritePDB(out, "Multipoles", "");
src/libctp/calculators/xmultipole2.h://        (*sit)->WritePDB(out, "Multipoles", "");
src/libctp/calculators/xmultipole2.h://    job->Seg1()->WritePDB(out, "Multipoles", "");
src/libctp/calculators/xmultipole2.h://    job->Seg2()->WritePDB(out, "Multipoles", "");
src/libctp/calculators/xmultipole2.h:    // (De-)polarize, charge to N //
src/libctp/calculators/xmultipole2.h:    if (job->StartFromCPT()) {
src/libctp/calculators/xmultipole2.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole2.h:            (*pit)->Depolarize();
src/libctp/calculators/xmultipole2.h:            (*pit)->Charge(0); // <- Not necessarily neutral state
src/libctp/calculators/xmultipole2.h:            (*pit)->Depolarize();
src/libctp/calculators/xmultipole2.h:            (*pit)->Charge(0); // <- Not necessarily neutral state
src/libctp/calculators/xmultipole2.h:    for (int id = 0; id < this->_master->_subthreads; ++id) {
src/libctp/calculators/xmultipole2.h:        InduWorker *newIndu = new InduWorker(id,this->_top,this->_master,this);
src/libctp/calculators/xmultipole2.h:        newIndu->InitSpheres(&_segsPolSphere,&_segsOutSphere,
src/libctp/calculators/xmultipole2.h:        newIndu->SetSwitch(1);
src/libctp/calculators/xmultipole2.h:    this->InitChunks();
src/libctp/calculators/xmultipole2.h:    if (_master->_induce) iter      = this->Induce(state, job);
src/libctp/calculators/xmultipole2.h:    if (_master->_induce) E_state   = this->Energy(state, job);
src/libctp/calculators/xmultipole2.h:    else                  E_state   = this->EnergyStatic(state, job);
src/libctp/calculators/xmultipole2.h:    job->setIter(iter);
src/libctp/calculators/xmultipole2.h:    if (_master->_write_chk) {
src/libctp/calculators/xmultipole2.h:        if (_master->_chk_format == "gaussian") {
src/libctp/calculators/xmultipole2.h:        else if (_master->_chk_format == "xyz") {
src/libctp/calculators/xmultipole2.h:        string chk_file = job->getTag()+_master->_write_chk_suffix+dotsuffix;
src/libctp/calculators/xmultipole2.h:        if (job->getType() == "pair") {
src/libctp/calculators/xmultipole2.h:                int segId = (*sit)->getId();
src/libctp/calculators/xmultipole2.h:                if (segId == job->getSeg1Id() || segId == job->getSeg2Id()) {
src/libctp/calculators/xmultipole2.h:                    vec pb_shift = job->Center() - (*sit)->getPos()
src/libctp/calculators/xmultipole2.h:                         - top->PbShortestConnect((*sit)->getPos(), job->Center());
src/libctp/calculators/xmultipole2.h:                    for (pit = _polarSites_job[segId-1].begin();
src/libctp/calculators/xmultipole2.h:                         pit < _polarSites_job[segId-1].end();
src/libctp/calculators/xmultipole2.h:                        (*pit)->WriteXyzLine(out, pb_shift, _master->_chk_format);
src/libctp/calculators/xmultipole2.h:            if (job->getSiteId() == job->getSeg2Id()) {
src/libctp/calculators/xmultipole2.h:                for (sit = _segsPolSphere.end() - 1; sit > _segsPolSphere.begin(); --sit) {
src/libctp/calculators/xmultipole2.h:                    int segId = (*sit)->getId();
src/libctp/calculators/xmultipole2.h:                    if (segId == job->getSeg1Id() || segId == job->getSeg2Id()) {
src/libctp/calculators/xmultipole2.h:                        vec pb_shift = job->Center() - (*sit)->getPos()
src/libctp/calculators/xmultipole2.h:                             - top->PbShortestConnect((*sit)->getPos(), job->Center());
src/libctp/calculators/xmultipole2.h:                        for (pit = _polarSites_job[segId-1].begin();
src/libctp/calculators/xmultipole2.h:                             pit < _polarSites_job[segId-1].end();
src/libctp/calculators/xmultipole2.h:                            if (segId == job->getSiteId()) {
src/libctp/calculators/xmultipole2.h:                                (*pit)->WriteXyzLine(out, pb_shift, _master->_chk_format);
src/libctp/calculators/xmultipole2.h:                                (*pit)->WriteChkLine(out, pb_shift,
src/libctp/calculators/xmultipole2.h:                                               _master->_chk_split_dpl,
src/libctp/calculators/xmultipole2.h:                                               _master->_chk_format,
src/libctp/calculators/xmultipole2.h:                                               _master->_chk_dpl_spacing);
src/libctp/calculators/xmultipole2.h:            else if (job->getSiteId() == job->getSeg1Id()) {
src/libctp/calculators/xmultipole2.h:                    int segId = (*sit)->getId();
src/libctp/calculators/xmultipole2.h:                    if (segId == job->getSeg1Id() || segId == job->getSeg2Id()) {
src/libctp/calculators/xmultipole2.h:                        vec pb_shift = job->Center() - (*sit)->getPos()
src/libctp/calculators/xmultipole2.h:                             - top->PbShortestConnect((*sit)->getPos(), job->Center());
src/libctp/calculators/xmultipole2.h:                        for (pit = _polarSites_job[segId-1].begin();
src/libctp/calculators/xmultipole2.h:                             pit < _polarSites_job[segId-1].end();
src/libctp/calculators/xmultipole2.h:                            if (segId == job->getSiteId()) {
src/libctp/calculators/xmultipole2.h:                                (*pit)->WriteXyzLine(out, pb_shift, _master->_chk_format);
src/libctp/calculators/xmultipole2.h:                                (*pit)->WriteChkLine(out, pb_shift,
src/libctp/calculators/xmultipole2.h:                                               _master->_chk_split_dpl,
src/libctp/calculators/xmultipole2.h:                                               _master->_chk_format,
src/libctp/calculators/xmultipole2.h:                                               _master->_chk_dpl_spacing);
src/libctp/calculators/xmultipole2.h:                        job->getSiteId(), job->getId());
src/libctp/calculators/xmultipole2.h:        if (_master->_chk_format == "gaussian" && job->getType() == "pair") {
src/libctp/calculators/xmultipole2.h:            int segId = (*sit)->getId();
src/libctp/calculators/xmultipole2.h:            if (segId == job->getSeg1Id() || segId == job->getSeg2Id()) {
src/libctp/calculators/xmultipole2.h:            vec pb_shift = job->Center() - (*sit)->getPos()
src/libctp/calculators/xmultipole2.h:                     - top->PbShortestConnect((*sit)->getPos(), job->Center());
src/libctp/calculators/xmultipole2.h:            for (pit = _polarSites_job[segId-1].begin();
src/libctp/calculators/xmultipole2.h:                 pit < _polarSites_job[segId-1].end();
src/libctp/calculators/xmultipole2.h:                 (*pit)->WriteChkLine(out, pb_shift,
src/libctp/calculators/xmultipole2.h:                                           _master->_chk_split_dpl,
src/libctp/calculators/xmultipole2.h:                                           _master->_chk_format,
src/libctp/calculators/xmultipole2.h:                                           _master->_chk_dpl_spacing);
src/libctp/calculators/xmultipole2.h:            int segId = (*sit)->getId();
src/libctp/calculators/xmultipole2.h:            if (segId == job->getSeg1Id() || segId == job->getSeg2Id()) {
src/libctp/calculators/xmultipole2.h:                if (job->getType() == "pair") {
src/libctp/calculators/xmultipole2.h:                else if (job->getType() == "site") {
src/libctp/calculators/xmultipole2.h:                    assert(segId != job->getSiteId());                          // Central site in outer shell? No!
src/libctp/calculators/xmultipole2.h:            vec pb_shift = job->Center() - (*sit)->getPos()
src/libctp/calculators/xmultipole2.h:                     - top->PbShortestConnect((*sit)->getPos(), job->Center());
src/libctp/calculators/xmultipole2.h:            for (pit = _polarSites_job[segId-1].begin();
src/libctp/calculators/xmultipole2.h:                 pit < _polarSites_job[segId-1].end();
src/libctp/calculators/xmultipole2.h:                 (*pit)->WriteChkLine(out, pb_shift,
src/libctp/calculators/xmultipole2.h:                                           _master->_chk_format,
src/libctp/calculators/xmultipole2.h:                                           _master->_chk_dpl_spacing);
src/libctp/calculators/xmultipole2.h:    for (int id = 0; id < _master->_subthreads; ++id) {
src/libctp/calculators/xmultipole2.h:        _indus[id]->SetSwitch(1);
src/libctp/calculators/xmultipole2.h:    double wSOR = (state == 0) ? _master->_wSOR_N : _master->_wSOR_C;
src/libctp/calculators/xmultipole2.h:    double eTOL = this->_master->_epsTol;
src/libctp/calculators/xmultipole2.h:    int    maxI = this->_master->_maxIter;
src/libctp/calculators/xmultipole2.h:    // Intra-pair induction ...
src/libctp/calculators/xmultipole2.h:    bool   induce_intra_pair = this->_master->_induce_intra_pair;
src/libctp/calculators/xmultipole2.h:    if (job->getType() == "site") { induce_intra_pair = true; }
src/libctp/calculators/xmultipole2.h:    // Inter-site fields (arising from perm. m'poles) //
src/libctp/calculators/xmultipole2.h://    cout << endl << "... ... ... 0th-order field" << flush;
src/libctp/calculators/xmultipole2.h:        // Intra-pair permanent induction field?
src/libctp/calculators/xmultipole2.h:             if ( (  (*seg1)->getId() == job->getSeg1Id()
src/libctp/calculators/xmultipole2.h:                  || (*seg1)->getId() == job->getSeg2Id() )
src/libctp/calculators/xmultipole2.h:               && (  (*seg2)->getId() == job->getSeg1Id()
src/libctp/calculators/xmultipole2.h:                  || (*seg2)->getId() == job->getSeg2Id() )) {
src/libctp/calculators/xmultipole2.h:    // 1st-order induction //
src/libctp/calculators/xmultipole2.h:    if (!job->StartFromCPT()) { // OVERRIDE
src/libctp/calculators/xmultipole2.h:                 (*pit1)->InduceDirect();
src/libctp/calculators/xmultipole2.h:    // Higher-order induction //
src/libctp/calculators/xmultipole2.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/xmultipole2.h:        // Intra-site contribution to induction field
src/libctp/calculators/xmultipole2.h://        cout << " | Intra-Site (" << iter << ")" << flush;
src/libctp/calculators/xmultipole2.h:                _actor.FieldIndu(*(*pit1),*(*pit2));                            // <- Intra-pair => zero out
src/libctp/calculators/xmultipole2.h:        // Inter-site contribution to induction field
src/libctp/calculators/xmultipole2.h://        cout << " | Inter-Site (" << iter << ")" << flush;
src/libctp/calculators/xmultipole2.h://                _actor.FieldIndu(*(*pit1), *(*pit2));                           // <- Pair-environment => figure sth out
src/libctp/calculators/xmultipole2.h:        for (int id = 0; id < this->_master->_subthreads; ++id) {
src/libctp/calculators/xmultipole2.h:            _indus[id]->Start();
src/libctp/calculators/xmultipole2.h:        for (int id = 0; id < this->_master->_subthreads; ++id) {
src/libctp/calculators/xmultipole2.h:            _indus[id]->WaitDone();
src/libctp/calculators/xmultipole2.h:        this->ClearTodoTable();
src/libctp/calculators/xmultipole2.h:                 (*pit1)->Induce(wSOR);                                         // <- Okay if alpha = 0
src/libctp/calculators/xmultipole2.h:        double maxdU = -1;
src/libctp/calculators/xmultipole2.h:                 double dU = (*pit1)->HistdU();
src/libctp/calculators/xmultipole2.h:        else if (iter == maxI - 1) {
src/libctp/calculators/xmultipole2.h:            this->_master->LockCout();
src/libctp/calculators/xmultipole2.h:                 << job->getId() << " did not converge to precision: "
src/libctp/calculators/xmultipole2.h:            this->_master->UnlockCout();
src/libctp/calculators/xmultipole2.h://         << " - wSOR " << wSOR
src/libctp/calculators/xmultipole2.h://         << " - Iterations " << iter << flush;
src/libctp/calculators/xmultipole2.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/xmultipole2.h:    //       PAIR/SITE     <->     SPH1      <->       SPH2        //
src/libctp/calculators/xmultipole2.h:    double E_Pair_Pair = 0.0;   // <- Pair-Pair interaction permanent + induced
src/libctp/calculators/xmultipole2.h:    double E_Pair_Sph1 = 0.0;   // <- Pair-Sph1 interaction permanent + induced
src/libctp/calculators/xmultipole2.h:    double E_Sph1_Sph1 = 0.0;   // <- Sph1-Sph1 interaction permanent + induced
src/libctp/calculators/xmultipole2.h:    double E_Pair_Sph2 = 0.0;   // <- Pair-Sph2 interaction permanent + induced
src/libctp/calculators/xmultipole2.h:    if (job->getType() == "pair") {
src/libctp/calculators/xmultipole2.h:        // Inter-site energy //
src/libctp/calculators/xmultipole2.h:            //if ( abs(_top->PbShortestConnect((*seg1)->getPos(),_seg->getPos()))
src/libctp/calculators/xmultipole2.h:            //        > _master->_cutoff) { throw runtime_error("Not this."); }
src/libctp/calculators/xmultipole2.h:            //     << (*seg1)->getId() << "|" << (*seg2)->getId() << "   " << flush;
src/libctp/calculators/xmultipole2.h:            // Intra-pair interaction?
src/libctp/calculators/xmultipole2.h:            if ( ((*seg1)->getId() == job->getSeg1Id() || (*seg1)->getId() == job->getSeg2Id())
src/libctp/calculators/xmultipole2.h:              && ((*seg2)->getId() == job->getSeg1Id() || (*seg2)->getId() == job->getSeg2Id()) ) {
src/libctp/calculators/xmultipole2.h:                    //(*pit1)->PrintInfo(cout);
src/libctp/calculators/xmultipole2.h:                    //(*pit2)->PrintInfo(cout);
src/libctp/calculators/xmultipole2.h:            // Pair-non-pair interaction
src/libctp/calculators/xmultipole2.h:            else if ( ((*seg1)->getId() == job->getSeg1Id() || (*seg1)->getId() == job->getSeg2Id())
src/libctp/calculators/xmultipole2.h:                    ^ ((*seg2)->getId() == job->getSeg1Id() || (*seg2)->getId() == job->getSeg2Id()) ) {
src/libctp/calculators/xmultipole2.h:                    //(*pit1)->PrintInfo(cout);
src/libctp/calculators/xmultipole2.h:                    //(*pit2)->PrintInfo(cout);
src/libctp/calculators/xmultipole2.h:            // Non-pair-non-pair interaction?
src/libctp/calculators/xmultipole2.h:                    //(*pit1)->PrintInfo(cout);
src/libctp/calculators/xmultipole2.h:                    //(*pit2)->PrintInfo(cout);
src/libctp/calculators/xmultipole2.h:        // Outer-Shell energy //
src/libctp/calculators/xmultipole2.h:        vector< PolarSite* > central1 = _polarSites_job[ job->getSeg1Id() - 1 ];
src/libctp/calculators/xmultipole2.h:        vector< PolarSite* > central2 = _polarSites_job[ job->getSeg2Id() - 1 ];
src/libctp/calculators/xmultipole2.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole2.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole2.h:        job->setEnergy(E_Tot*int2eV,           E_Pair_Pair*int2eV,
src/libctp/calculators/xmultipole2.h:    else if (job->getType() == "site") {
src/libctp/calculators/xmultipole2.h:        for (int id = 0; id < _master->_subthreads; ++id) {
src/libctp/calculators/xmultipole2.h:            _indus[id]->SetSwitch(0);
src/libctp/calculators/xmultipole2.h:        // Inter-site energy //
src/libctp/calculators/xmultipole2.h://            // Intra-site interaction?
src/libctp/calculators/xmultipole2.h://            // Site-non-site interaction
src/libctp/calculators/xmultipole2.h://            if ( job->getSiteId() == (*seg1)->getId()
src/libctp/calculators/xmultipole2.h://              || job->getSiteId() == (*seg2)->getId() ) {
src/libctp/calculators/xmultipole2.h://                    //(*pit1)->PrintInfo(cout);
src/libctp/calculators/xmultipole2.h://                    //(*pit2)->PrintInfo(cout);
src/libctp/calculators/xmultipole2.h://            // Non-pair-non-pair interaction?
src/libctp/calculators/xmultipole2.h://                    //(*pit1)->PrintInfo(cout);
src/libctp/calculators/xmultipole2.h://                    //(*pit2)->PrintInfo(cout);
src/libctp/calculators/xmultipole2.h:        for (int id = 0; id < this->_master->_subthreads; ++id) {
src/libctp/calculators/xmultipole2.h:            _indus[id]->Start();
src/libctp/calculators/xmultipole2.h:        for (int id = 0; id < this->_master->_subthreads; ++id) {
src/libctp/calculators/xmultipole2.h:            _indus[id]->WaitDone();
src/libctp/calculators/xmultipole2.h:        for (int id = 0; id < this->_master->_subthreads; ++id) {
src/libctp/calculators/xmultipole2.h:            E_Pair_Pair += _indus[id]->GetEPairPair();
src/libctp/calculators/xmultipole2.h:            E_Pair_Sph1 += _indus[id]->GetEPairSph1();
src/libctp/calculators/xmultipole2.h:            E_Sph1_Sph1 += _indus[id]->GetESph1Sph1();
src/libctp/calculators/xmultipole2.h:            eu_inter += _indus[id]->GetActor().getEU_INTER();
src/libctp/calculators/xmultipole2.h:            eu_intra += _indus[id]->GetActor().getEU_INTRA();
src/libctp/calculators/xmultipole2.h:            e_perm   += _indus[id]->GetActor().getEP();
src/libctp/calculators/xmultipole2.h:        this->ClearTodoTable();
src/libctp/calculators/xmultipole2.h:        // Outer-Shell energy //
src/libctp/calculators/xmultipole2.h:        vector< PolarSite* > central1 = _polarSites_job[ job->getSeg1Id() - 1 ];
src/libctp/calculators/xmultipole2.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole2.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole2.h:        job->setEnergy(E_Tot*int2eV,           E_Pair_Pair*int2eV,
src/libctp/calculators/xmultipole2.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/xmultipole2.h:    if (job->getType() == "pair") {
src/libctp/calculators/xmultipole2.h:        // Interaction pair <-> inner cut-off, without intra-pair interaction //
src/libctp/calculators/xmultipole2.h:        vector< PolarSite* > central1 = _polarSites_job[ job->getSeg1Id() - 1 ];
src/libctp/calculators/xmultipole2.h:        vector< PolarSite* > central2 = _polarSites_job[ job->getSeg2Id() - 1 ];
src/libctp/calculators/xmultipole2.h:            int id = (*seg1)->getId();
src/libctp/calculators/xmultipole2.h:            if (id == job->getSeg1Id() || id == job->getSeg2Id() ) {
src/libctp/calculators/xmultipole2.h:            for (pit1 = _polarSites_job[id-1].begin();
src/libctp/calculators/xmultipole2.h:                 pit1 < _polarSites_job[id-1].end();
src/libctp/calculators/xmultipole2.h:        // Interaction pair <-> outer cut-off                                 //
src/libctp/calculators/xmultipole2.h:            int id = (*seg1)->getId();
src/libctp/calculators/xmultipole2.h:            if (id == job->getSeg1Id() || id == job->getSeg2Id() ) {
src/libctp/calculators/xmultipole2.h:            for (pit1 = _polarSites_job[id-1].begin();
src/libctp/calculators/xmultipole2.h:                 pit1 < _polarSites_job[id-1].end();
src/libctp/calculators/xmultipole2.h:        // Intra-pair interaction                                             //
src/libctp/calculators/xmultipole2.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole2.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole2.h:        job->setEnergy(E_Tot*int2eV,           E_Pair_Pair*int2eV,
src/libctp/calculators/xmultipole2.h:    else if (job->getType() == "site") {
src/libctp/calculators/xmultipole2.h:        // Interaction site <-> inner cut-off, without intra-pair interaction //
src/libctp/calculators/xmultipole2.h:        vector< PolarSite* > central1 = _polarSites_job[ job->getSiteId() - 1 ];
src/libctp/calculators/xmultipole2.h:            int id = (*seg1)->getId();
src/libctp/calculators/xmultipole2.h:            if (id == job->getSiteId()) {
src/libctp/calculators/xmultipole2.h:            for (pit1 = _polarSites_job[id-1].begin();
src/libctp/calculators/xmultipole2.h:                 pit1 < _polarSites_job[id-1].end();
src/libctp/calculators/xmultipole2.h:        // Interaction site <-> outer cut-off                                 //
src/libctp/calculators/xmultipole2.h:            int id = (*seg1)->getId();
src/libctp/calculators/xmultipole2.h:            if (id == job->getSiteId()) {
src/libctp/calculators/xmultipole2.h:            for (pit1 = _polarSites_job[id-1].begin();
src/libctp/calculators/xmultipole2.h:                 pit1 < _polarSites_job[id-1].end();
src/libctp/calculators/xmultipole2.h:        // Intra-site interaction                                             //
src/libctp/calculators/xmultipole2.h:        // Intra-site energy ...
src/libctp/calculators/xmultipole2.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole2.h:        if (_master->_maverick) {
src/libctp/calculators/xmultipole2.h:        job->setEnergy(E_Tot*int2eV,           E_Pair_Pair*int2eV,
src/libctp/calculators/xmultipole2.h:             << workOnThis->getId() << " " << workOnThis->getTag()
src/libctp/calculators/xmultipole2.h:    e12  = pol.getPos() - r;
src/libctp/calculators/xmultipole2.h:    rbx = - e12.getX();
src/libctp/calculators/xmultipole2.h:    rby = - e12.getX();
src/libctp/calculators/xmultipole2.h:    rbz = - e12.getX();
src/libctp/calculators/xmultipole2.h:    e12  = pol.getPos() - r;
src/libctp/calculators/xmultipole2.h:        rbx = - rax;
src/libctp/calculators/xmultipole2.h:        rby = - ray;
src/libctp/calculators/xmultipole2.h:        rbz = - raz;
src/libctp/calculators/xmultipole2.h:    // Field generated by rank-0 m'pole
src/libctp/calculators/xmultipole2.h:    // Field generated by rank-1 m'pole
src/libctp/calculators/xmultipole2.h:    // Field generated by rank-2 m'pole
src/libctp/calculators/xmultipole2.h: * Used in molecular-polarizability calculator (initialize stage)
src/libctp/calculators/xmultipole2.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/xmultipole2.h:    a    = _xm->_aDamp;
src/libctp/calculators/xmultipole2.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/xmultipole2.h://        rby = - pol2._locY * e12;
src/libctp/calculators/xmultipole2.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/xmultipole2.h:        rbx = - rax;
src/libctp/calculators/xmultipole2.h:        rby = - ray;
src/libctp/calculators/xmultipole2.h:        rbz = - raz;
src/libctp/calculators/xmultipole2.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/xmultipole2.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/xmultipole2.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/xmultipole2.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/xmultipole2.h:    a    = _xm->_aDamp;
src/libctp/calculators/xmultipole2.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/xmultipole2.h://        rby = - pol2._locY * e12;
src/libctp/calculators/xmultipole2.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/xmultipole2.h:        rbx = - rax;
src/libctp/calculators/xmultipole2.h:        rby = - ray;
src/libctp/calculators/xmultipole2.h:        rbz = - raz;
src/libctp/calculators/xmultipole2.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/xmultipole2.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/xmultipole2.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/xmultipole2.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/xmultipole2.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/xmultipole2.h://        rby = - pol2._locY * e12;
src/libctp/calculators/xmultipole2.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/xmultipole2.h:        rbx = - rax;
src/libctp/calculators/xmultipole2.h:        rby = - ray;
src/libctp/calculators/xmultipole2.h:        rbz = - raz;
src/libctp/calculators/xmultipole2.h:    // Fields generated by rank-0 m'poles
src/libctp/calculators/xmultipole2.h:    // Fields generated by rank-1 m'poles
src/libctp/calculators/xmultipole2.h:    // Fields generated by rank-2 m'poles
src/libctp/calculators/xmultipole2.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/xmultipole2.h:    a    = _xm->_aDamp;
src/libctp/calculators/xmultipole2.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/xmultipole2.h://        rby = - pol2._locY * e12;
src/libctp/calculators/xmultipole2.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/xmultipole2.h:        rbx = - rax;
src/libctp/calculators/xmultipole2.h:        rby = - ray;
src/libctp/calculators/xmultipole2.h:        rbz = - raz;
src/libctp/calculators/xmultipole2.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/xmultipole2.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/xmultipole2.h:    a    = _xm->_aDamp;
src/libctp/calculators/xmultipole2.h:    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
src/libctp/calculators/xmultipole2.h:    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
src/libctp/calculators/xmultipole2.h:    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
src/libctp/calculators/xmultipole2.h:    //cout << "seg2  " << pol2.getSegment()->getId() << endl;    
src/libctp/calculators/xmultipole2.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/xmultipole2.h://        rby = - pol2._locY * e12;
src/libctp/calculators/xmultipole2.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/xmultipole2.h:        rbx = - rax;
src/libctp/calculators/xmultipole2.h:        rby = - ray;
src/libctp/calculators/xmultipole2.h:        rbz = - raz;
src/libctp/calculators/xmultipole2.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/xmultipole2.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/xmultipole2.h:        //cout << "E up to q <-> q " << E << endl;
src/libctp/calculators/xmultipole2.h:        //cout << "E up to q <-> d " << E << endl;
src/libctp/calculators/xmultipole2.h:        //cout << "E up to q <-> Q " << E << endl;
src/libctp/calculators/xmultipole2.h:        //cout << "E up to d <-> d " << E << endl;
src/libctp/calculators/xmultipole2.h:        //cout << "E up to d <-> Q " << E << endl;
src/libctp/calculators/xmultipole2.h:        //cout << "E up to Q <-> Q " << E << endl;
src/libctp/calculators/xmultipole2.h: * Designed for use in ESP calculator (init. stage). Only for error-checking.
src/libctp/calculators/xmultipole2.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/xmultipole2.h:    a    = _xm->_aDamp;
src/libctp/calculators/xmultipole2.h:        rbx = - rax;
src/libctp/calculators/xmultipole2.h:        rby = - ray;
src/libctp/calculators/xmultipole2.h:        rbz = - raz;
src/libctp/calculators/xmultipole2.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/xmultipole2.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/xqmultipole.h:    // Polar-site mapping
src/libctp/calculators/xqmultipole.h:    // Control over induction-state output
src/libctp/calculators/xqmultipole.h:    // Induction, subthreading (-> base class)
src/libctp/calculators/xqmultipole.h:        if ( opt->exists(key) ) {
src/libctp/calculators/xqmultipole.h:            _xml_file = opt->get(key).as< string >();
src/libctp/calculators/xqmultipole.h:        if ( opt->exists(key+".job_file")) {
src/libctp/calculators/xqmultipole.h:            _xjobfile = opt->get(key+".job_file").as<string>();
src/libctp/calculators/xqmultipole.h:            throw std::runtime_error("XJob-file not set. Abort.");
src/libctp/calculators/xqmultipole.h:        if ( opt->exists(key+".emp_file")) {
src/libctp/calculators/xqmultipole.h:            _emp_file   = opt->get(key+".emp_file").as<string>();
src/libctp/calculators/xqmultipole.h:            _emp_file   = opt->get(key+".emp_file").as<string>();
src/libctp/calculators/xqmultipole.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/xqmultipole.h:            _outFile = opt->get(key+".output").as< string >();
src/libctp/calculators/xqmultipole.h:        if (opt->exists(key+".pdb_check")) {
src/libctp/calculators/xqmultipole.h:            _pdb_check = opt->get(key+".pdb_check").as<string>();
src/libctp/calculators/xqmultipole.h:        if (opt->exists(key+".write_chk")) {
src/libctp/calculators/xqmultipole.h:            _write_chk_suffix = opt->get(key+".write_chk").as<string>();
src/libctp/calculators/xqmultipole.h:        if (opt->exists(key+".format_chk")) {
src/libctp/calculators/xqmultipole.h:            _chk_format = opt->get(key+".format_chk").as<string>();
src/libctp/calculators/xqmultipole.h:        if (opt->exists(key+".split_dpl")) {
src/libctp/calculators/xqmultipole.h:            _chk_split_dpl = (opt->get(key+".split_dpl").as<int>() == 1) ?
src/libctp/calculators/xqmultipole.h:        if (opt->exists(key+".dpl_spacing")) {
src/libctp/calculators/xqmultipole.h:            _chk_dpl_spacing = opt->get(key+".dpl_spacing").as<double>();
src/libctp/calculators/xqmultipole.h:            _chk_dpl_spacing = 1.0e-6;
src/libctp/calculators/xqmultipole.h:        if ( opt->exists(key+".method") ) {
src/libctp/calculators/xqmultipole.h:            _method = opt->get(key+".method").as< string >();
src/libctp/calculators/xqmultipole.h:            if (_method != "cut-off" && _method != "cutoff") {
src/libctp/calculators/xqmultipole.h:            _method = "cut-off";
src/libctp/calculators/xqmultipole.h:        if ( opt->exists(key+".cutoff1") ) {
src/libctp/calculators/xqmultipole.h:            _cutoff1 = opt->get(key+".cutoff1").as< double >();
src/libctp/calculators/xqmultipole.h:        if ( opt->exists(key+".cutoff2") ) {
src/libctp/calculators/xqmultipole.h:            _cutoff2 = opt->get(key+".cutoff2").as< double >();
src/libctp/calculators/xqmultipole.h:        if ( opt->exists(key+".subthreads") ) {
src/libctp/calculators/xqmultipole.h:            _subthreads = opt->get(key+".subthreads").as< double >();
src/libctp/calculators/xqmultipole.h:    // INITIALIZE MPS-MAPPER (=> POLAR TOP PREP)
src/libctp/calculators/xqmultipole.h:    cout << endl << "... ... Initialize MPS-mapper: " << flush;
src/libctp/calculators/xqmultipole.h:    out = fopen(this->_outFile.c_str(), "w");
src/libctp/calculators/xqmultipole.h:        (*jit)->WriteInfoLine(out);
src/libctp/calculators/xqmultipole.h:    Logger* log = thread->getLogger();
src/libctp/calculators/xqmultipole.h:    log->setReportLevel(logDEBUG);
src/libctp/calculators/xqmultipole.h:    log->setMultithreading(_maverick);
src/libctp/calculators/xqmultipole.h:    log->setPreface(logINFO,    (format("\nT%1$02d ... ...") % thread->getId()).str());
src/libctp/calculators/xqmultipole.h:    log->setPreface(logERROR,   (format("\nT%1$02d ERR ...") % thread->getId()).str());
src/libctp/calculators/xqmultipole.h:    log->setPreface(logWARNING, (format("\nT%1$02d WAR ...") % thread->getId()).str());
src/libctp/calculators/xqmultipole.h:    log->setPreface(logDEBUG,   (format("\nT%1$02d DBG ...") % thread->getId()).str());        
src/libctp/calculators/xqmultipole.h:    Logger *log = thread->getLogger();
src/libctp/calculators/xqmultipole.h:         << job->getPolarTop()->ShellInfoStr() << flush;
src/libctp/calculators/xqmultipole.h:    job->getPolarTop()->PrintPDB(job->getTag()+"_QM0_MM1_MM2.pdb");
src/libctp/calculators/xqmultipole.h:    inductor.setLog(thread->getLogger());
src/libctp/calculators/xqmultipole.h:        string outstr    = job->getTag()+_write_chk_suffix+dotsuffix;
src/libctp/calculators/xqmultipole.h:        job->getPolarTop()->PrintInduState(outstr, format, split, space);
src/libctp/calculators/xqmultipole.h:    job->setInfoLine(true,false);
src/libctp/calculators/xqmultipole.h:    job->getPolarTop()->~PolarTop();
src/libctp/calculators/zmultipole.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/zmultipole.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/zmultipole.h:    string   Identify() { return "ZMultipole - Anisotropic Polarizabilities"; }
src/libctp/calculators/zmultipole.h:    // Sub-Calculators ESP, ESF, MolPol //
src/libctp/calculators/zmultipole.h:        double EP;       //   <- Interaction permanent multipoles (inter-site)
src/libctp/calculators/zmultipole.h:        double EU_INTRA; //   <- Interaction induction multipoles (intra-site)
src/libctp/calculators/zmultipole.h:        double EU_INTER; //   <- Interaction induction multipoles (inter-site)
src/libctp/calculators/zmultipole.h:        double u3;      //  |-> NOTE: Only needed when using Thole model
src/libctp/calculators/zmultipole.h:        double R3;      //  |-> NOTE: reciprocal, i.e. e.g. R3 = 1/(R*R*R)
src/libctp/calculators/zmultipole.h:        inline double lambda3() { return 1 - exp( -a*u3); }
src/libctp/calculators/zmultipole.h:        inline double lambda5() { return 1 - (1 + a*u3) * exp( -a*u3); }
src/libctp/calculators/zmultipole.h:        inline double lambda7() { return 1 - (1 + a*u3 + 0.6*a*a*u3*u3) * exp( -a*u3); }
src/libctp/calculators/zmultipole.h:        inline double lambda9() { return 1 - (1 + a*u3 + (18*a*a*u3*u3 + 9*a*a*a*u3*u3*u3)/35) * exp( -a*u3); }
src/libctp/calculators/zmultipole.h:        inline double T20_00()  { return R3 * 0.5 * (3 * raz*raz - 1); }
src/libctp/calculators/zmultipole.h:        inline double T22c_00() { return R3 * 0.5 * sqrt(3) * (rax*rax - ray*ray); }
src/libctp/calculators/zmultipole.h:        inline double T00_20()  { return R3 * 0.5 * (3 * rbz*rbz - 1); }
src/libctp/calculators/zmultipole.h:        inline double T00_22c() { return R3 * 0.5 * sqrt(3) * (rbx*rbx - rby*rby); }
src/libctp/calculators/zmultipole.h:        inline double T20_1x()  { return R4 * 0.5 * (15*raz*raz*rbx + 6*raz*czx - 3*rbx); }
src/libctp/calculators/zmultipole.h:        inline double T20_1y()  { return R4 * 0.5 * (15*raz*raz*rby + 6*raz*czy - 3*rby); }
src/libctp/calculators/zmultipole.h:        inline double T20_1z()  { return R4 * 0.5 * (15*raz*raz*rbz + 6*raz*czz - 3*rbz); }
src/libctp/calculators/zmultipole.h:        inline double T22c_1x() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbx + 2*rax*cxx - 2*ray*cyx); }
src/libctp/calculators/zmultipole.h:        inline double T22c_1y() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rby + 2*rax*cxy - 2*ray*cyy); }
src/libctp/calculators/zmultipole.h:        inline double T22c_1z() { return R4 * 0.5 * sqrt(3) * ( 5*(rax*rax-ray*ray)*rbz + 2*rax*cxz - 2*ray*cyz); }
src/libctp/calculators/zmultipole.h:        inline double T1x_20()  { return R4 * 0.5 * (15*rbz*rbz*rax + 6*rbz*cxz - 3*rax); }
src/libctp/calculators/zmultipole.h:        inline double T1y_20()  { return R4 * 0.5 * (15*rbz*rbz*ray + 6*rbz*cyz - 3*ray); }
src/libctp/calculators/zmultipole.h:        inline double T1z_20()  { return R4 * 0.5 * (15*rbz*rbz*raz + 6*rbz*czz - 3*raz); }
src/libctp/calculators/zmultipole.h:        inline double T1x_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*rax + 2*rbx*cxx - 2*rby*cxy); }
src/libctp/calculators/zmultipole.h:        inline double T1y_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*ray + 2*rbx*cyx - 2*rby*cyy); }
src/libctp/calculators/zmultipole.h:        inline double T1z_22c() { return R4 * 0.5 * sqrt(3) * ( 5*(rbx*rbx-rby*rby)*raz + 2*rbx*czx - 2*rby*czy); }
src/libctp/calculators/zmultipole.h:        inline double TU20_1x()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbx + lambda5()*(6*raz*czx - 3*rbx)); }
src/libctp/calculators/zmultipole.h:        inline double TU20_1y()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rby + lambda5()*(6*raz*czy - 3*rby)); }
src/libctp/calculators/zmultipole.h:        inline double TU20_1z()  { return R4 * 0.5 * (lambda7()*15*raz*raz*rbz + lambda5()*(6*raz*czz - 3*rbz)); }
src/libctp/calculators/zmultipole.h:        inline double TU22c_1x() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbx + lambda5()*(2*rax*cxx - 2*ray*cyx)); }
src/libctp/calculators/zmultipole.h:        inline double TU22c_1y() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rby + lambda5()*(2*rax*cxy - 2*ray*cyy)); }
src/libctp/calculators/zmultipole.h:        inline double TU22c_1z() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rax*rax-ray*ray)*rbz + lambda5()*(2*rax*cxz - 2*ray*cyz)); }
src/libctp/calculators/zmultipole.h:        inline double TU1x_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*rax + lambda5()*(6*rbz*cxz - 3*rax)); }
src/libctp/calculators/zmultipole.h:        inline double TU1y_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*ray + lambda5()*(6*rbz*cyz - 3*ray)); }
src/libctp/calculators/zmultipole.h:        inline double TU1z_20()  { return R4 * 0.5 * (lambda7()*15*rbz*rbz*raz + lambda5()*(6*rbz*czz - 3*raz)); }
src/libctp/calculators/zmultipole.h:        inline double TU1x_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*rax + lambda5()*(2*rbx*cxx - 2*rby*cxy)); }
src/libctp/calculators/zmultipole.h:        inline double TU1y_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*ray + lambda5()*(2*rbx*cyx - 2*rby*cyy)); }
src/libctp/calculators/zmultipole.h:        inline double TU1z_22c() { return R4 * 0.5 * sqrt(3) * (lambda7()*5*(rbx*rbx-rby*rby)*raz + lambda5()*(2*rbx*czx - 2*rby*czy)); }
src/libctp/calculators/zmultipole.h:        inline double T20_20()   { return R5 * 0.75 * (35*raz*raz*rbz*rbz - 5*raz*raz - 5*rbz*rbz + 20*raz*rbz*czz + 2*czz*czz + 1); }
src/libctp/calculators/zmultipole.h:        inline double T20_21c()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rbz - 5*rbx*rbz + 10*raz*rbx*czz + 10*raz*rbz*czx + 2*czx*czz); }
src/libctp/calculators/zmultipole.h:        inline double T20_21s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rby*rbz - 5*rby*rbz + 10*raz*rby*czz + 10*raz*rbz*czy + 2*czy*czz); }
src/libctp/calculators/zmultipole.h:        inline double T20_22c()  { return R5 * 0.25 * sqrt(3) * (35*raz*raz*rbx*rbx - 35*raz*raz*rby*rby - 5*rbx*rbx + 5*rby*rby + 20*raz*rbx*czx - 20*raz*rby*czy + 2*czx*czx - 2*czy*czy); }
src/libctp/calculators/zmultipole.h:        inline double T20_22s()  { return R5 * 0.5 * sqrt(3) * (35*raz*raz*rbx*rby - 5*rbx*rby + 10*raz*rbx*czy + 10*raz*rby*czx + 2*czx*czy); }
src/libctp/calculators/zmultipole.h:        inline double T21c_22c() { return R5 * 0.5 * (35*rax*raz*rbx*rbx - 35*rax*raz*rby*rby + 10*rax*rbx*czx - 10*rax*rby*czy + 10*raz*rbx*cxx - 10*raz*rby*cxy + 2*cxx*czx - 2*cxy*czy); }
src/libctp/calculators/zmultipole.h:        inline double T21s_22c() { return R5 * 0.5 * (35*ray*raz*rbx*rbx - 35*ray*raz*rby*rby + 10*ray*rbx*czx - 10*ray*rby*czy + 10*raz*rbx*cyx - 10*raz*rby*cyy + 2*cyx*czx - 2*cyy*czy); }
src/libctp/calculators/zmultipole.h:        inline double T22c_22c() { return R5 * 0.25 * (35*rax*rax*rbx*rbx - 35*rax*rax*rby*rby - 35*ray*ray*rbx*rbx + 35*ray*ray*rby*rby + 20*rax*rbx*cxx - 20*rax*rby*cxy - 20*ray*rbx*cyx + 20*ray*rby*cyy + 2*cxx*cxx - 2*cxy*cxy - 2*cyx*cyx + 2*cyy*cyy); }
src/libctp/calculators/zmultipole.h:        inline double T22c_22s() { return R5 * 0.5 * (35*rax*rax*rbx*rby - 35*ray*ray*rbx*rby + 10*rax*rbx*cxy + 10*rax*rby*cxx - 10*ray*rbx*cyy - 10*ray*rby*cyx + 2*cxx*cxy - 2*cyx*cyy); }
src/libctp/calculators/zmultipole.h:        inline double T21c_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*raz - 5*rax*raz + 10*rbz*rax*czz + 10*rbz*raz*cxz + 2*cxz*czz); }
src/libctp/calculators/zmultipole.h:        inline double T21s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*ray*raz - 5*ray*raz + 10*rbz*ray*czz + 10*rbz*raz*cyz + 2*cyz*czz); }
src/libctp/calculators/zmultipole.h:        inline double T22c_20()  { return R5 * 0.25 * sqrt(3) * (35*rbz*rbz*rax*rax - 35*rbz*rbz*ray*ray - 5*rax*rax + 5*ray*ray + 20*rbz*rax*cxz - 20*rbz*ray*cyz + 2*cxz*cxz - 2*cyz*cyz); }
src/libctp/calculators/zmultipole.h:        inline double T22s_20()  { return R5 * 0.5 * sqrt(3) * (35*rbz*rbz*rax*ray - 5*rax*ray + 10*rbz*rax*cyz + 10*rbz*ray*cxz + 2*cxz*cyz); }
src/libctp/calculators/zmultipole.h:        inline double T22c_21c() { return R5 * 0.5 * (35*rbx*rbz*rax*rax - 35*rbx*rbz*ray*ray + 10*rbx*rax*cxz - 10*rbx*ray*cyz + 10*rbz*rax*cxx - 10*rbz*ray*cyx + 2*cxx*cxz - 2*cyx*cyz); }
src/libctp/calculators/zmultipole.h:        inline double T22c_21s() { return R5 * 0.5 * (35*rby*rbz*rax*rax - 35*rby*rbz*ray*ray + 10*rby*rax*cxz - 10*rby*ray*cyz + 10*rbz*rax*cxy - 10*rbz*ray*cyy + 2*cxy*cxz - 2*cyy*cyz); }
src/libctp/calculators/zmultipole.h:        inline double T22s_22c() { return R5 * 0.5 * (35*rbx*rbx*rax*ray - 35*rby*rby*rax*ray + 10*rbx*rax*cyx + 10*rbx*ray*cxx - 10*rby*rax*cyy - 10*rby*ray*cxy + 2*cxx*cyx - 2*cxy*cyy); }
src/libctp/calculators/zmultipole.h:        vector< Segment* >           _segsPolSphere; // Segments    in c/o 0-1
src/libctp/calculators/zmultipole.h:        vector< Segment* >           _segsOutSphere; // Segments    in c/0 1-2
src/libctp/calculators/zmultipole.h:        vector< vector<APolarSite*> > _polsPolSphere; // Polar sites in c/o 0-1
src/libctp/calculators/zmultipole.h:        vector< vector<APolarSite*> > _polsOutSphere; // Polar sites in c/o 1-2
src/libctp/calculators/zmultipole.h:    /* ---- OPTIONS.XML Structure ----
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key) ) {
src/libctp/calculators/zmultipole.h:            xmlfile = opt->get(key).as< string >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".induce") ) {
src/libctp/calculators/zmultipole.h:            int induce = opt->get(key+".induce").as< int >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".first") ) {
src/libctp/calculators/zmultipole.h:            _firstSeg = opt->get(key+".first").as< int >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".last") ) {
src/libctp/calculators/zmultipole.h:            _lastSeg = opt->get(key+".last").as< int >();
src/libctp/calculators/zmultipole.h:        else { _lastSeg = -1; }
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/zmultipole.h:            _outFile = opt->get(key+".output").as< string >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".logbook") ) {
src/libctp/calculators/zmultipole.h:            _logFile = opt->get(key+".logbook").as< string >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".check") ) {
src/libctp/calculators/zmultipole.h:            _checkPolesPDB = opt->get(key+".check").as< string >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".list") ) {
src/libctp/calculators/zmultipole.h:            _listSegIds = opt->get(key+".list").as< vector<int> >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".calcESP") ) {
src/libctp/calculators/zmultipole.h:            int calcESP = opt->get(key+".calcESP").as< int >();
src/libctp/calculators/zmultipole.h:            _espCubeFile = opt->get(key+".cube").as< string >();
src/libctp/calculators/zmultipole.h:            _espOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/zmultipole.h:            if (opt->exists(key+".doSystem")) {
src/libctp/calculators/zmultipole.h:                int doSystem = opt->get(key+".doSystem").as< int >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".calcESF") ) {
src/libctp/calculators/zmultipole.h:            int calcESF = opt->get(key+".calcESF").as< int >();
src/libctp/calculators/zmultipole.h:            _esfGridFile = opt->get(key+".grid").as< string >();
src/libctp/calculators/zmultipole.h:            _esfOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".calcAlpha") ) {
src/libctp/calculators/zmultipole.h:            int calcAlpha = opt->get(key+".calcAlpha").as< int >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".doSystem") ) {
src/libctp/calculators/zmultipole.h:            int doSystem = opt->get(key+".doSystem").as< int >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/zmultipole.h:            string alphaOutFile = opt->get(key+".output").as< string >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".cutoff") ) {
src/libctp/calculators/zmultipole.h:            _cutoff = opt->get(key+".cutoff").as< double >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".cutoff2") ) {
src/libctp/calculators/zmultipole.h:            _cutoff2 = opt->get(key+".cutoff2").as< double >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".expdamp") ) {
src/libctp/calculators/zmultipole.h:            _aDamp = opt->get(key+".expdamp").as< double >();
src/libctp/calculators/zmultipole.h:         if ( opt->exists(key+".scaling") ) {
src/libctp/calculators/zmultipole.h:            _scale1 = opt->get(key+".scaling").as< vector<double> >();
src/libctp/calculators/zmultipole.h:                cout << endl << "... ... WARNING: 1-N SCALING SWITCHED OFF"; }
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".wSOR_N") ) {
src/libctp/calculators/zmultipole.h:            _wSOR_N = opt->get(key+".wSOR_N").as< float >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".wSOR_C") ) {
src/libctp/calculators/zmultipole.h:            _wSOR_C = opt->get(key+".wSOR_C").as< float >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".maxiter") ) {
src/libctp/calculators/zmultipole.h:            _maxIter = opt->get(key+".maxiter").as< int >();
src/libctp/calculators/zmultipole.h:        if ( opt->exists(key+".tolerance") ) {
src/libctp/calculators/zmultipole.h:            _epsTol = opt->get(key+".tolerance").as< double >();
src/libctp/calculators/zmultipole.h:    if (!top->isEStatified()) { this->EStatify(top, opt); }
src/libctp/calculators/zmultipole.h:    if (_calcESP && (!_ESPdoSystem))      { this->CalculateESPInput(top); }
src/libctp/calculators/zmultipole.h:    if (this->_calcESF)                   { this->CalculateESF(top); }
src/libctp/calculators/zmultipole.h:    if (this->_calcAlphaMol)              { this->CalculateAlphaInput(top); }
src/libctp/calculators/zmultipole.h: * Creates polar-site templates using mapping file
src/libctp/calculators/zmultipole.h: * ... Calls GDMA punch-file parser to load multipoles and polarizabilities
src/libctp/calculators/zmultipole.h:    string allocFile = options->get(key+".multipoles").as<string> ();
src/libctp/calculators/zmultipole.h:    // Load polar-site indices from XML //
src/libctp/calculators/zmultipole.h:    Property allocation; // <- Which polar sites are part of which fragment?
src/libctp/calculators/zmultipole.h:    /* --- MULTIPOLES.XML Structure ---
src/libctp/calculators/zmultipole.h:        string molName = (*molit)->get("name").as<string> ();
src/libctp/calculators/zmultipole.h:        list<Property *> segs = (*molit)->Select(key);
src/libctp/calculators/zmultipole.h:            string segName = (*segit)->get("name").as<string> ();
src/libctp/calculators/zmultipole.h:            string mpoleFile_n = (*segit)->get("multipoles_n").as<string> ();
src/libctp/calculators/zmultipole.h:            if ( (*segit)->exists("multipoles_e")) {
src/libctp/calculators/zmultipole.h:                string mpoleFile_e = (*segit)->get("multipoles_e").as<string>();
src/libctp/calculators/zmultipole.h:            if ( (*segit)->exists("multipoles_h")) {
src/libctp/calculators/zmultipole.h:                string mpoleFile_h = (*segit)->get("multipoles_h").as<string>();
src/libctp/calculators/zmultipole.h:            if ( (*segit)->exists("map2md")) {
src/libctp/calculators/zmultipole.h:                int map2md = (*segit)->get("map2md").as<int>();
src/libctp/calculators/zmultipole.h:            list<Property *> frags = (*segit)->Select(key);
src/libctp/calculators/zmultipole.h:                string fragName = (*fragit)->get("name").as<string> ();
src/libctp/calculators/zmultipole.h:                string mpoles = (*fragit)->get("mpoles").as<string> ();
src/libctp/calculators/zmultipole.h:        string segName = strit->first;
src/libctp/calculators/zmultipole.h:        string filename = strit->second;
src/libctp/calculators/zmultipole.h:        map_seg_chrgStates[segName][0] = false; // <- negative
src/libctp/calculators/zmultipole.h:        map_seg_chrgStates[segName][1] = true;  // <- neutral
src/libctp/calculators/zmultipole.h:        map_seg_chrgStates[segName][2] = false; // <- positive
src/libctp/calculators/zmultipole.h:    state = -1;
src/libctp/calculators/zmultipole.h:            string segName = strit->first;
src/libctp/calculators/zmultipole.h:            string filename = strit->second;
src/libctp/calculators/zmultipole.h:                polesNeutral[i]->setQs( polesAnion[i]->getQs(state), state );
src/libctp/calculators/zmultipole.h:                polesNeutral[i]->setPs( polesAnion[i]->getPs(state), state );
src/libctp/calculators/zmultipole.h:            string segName = strit->first;
src/libctp/calculators/zmultipole.h:            string filename = strit->second;
src/libctp/calculators/zmultipole.h:                polesNeutral[i]->setQs( polesCation[i]->getQs(state), state );
src/libctp/calculators/zmultipole.h:                polesNeutral[i]->setPs( polesCation[i]->getPs(state), state );
src/libctp/calculators/zmultipole.h:    // Forward information on polar-site templates to topology //
src/libctp/calculators/zmultipole.h: * @return Yields polar-site template container
src/libctp/calculators/zmultipole.h:                Nx = (Nx >= 0) ? Nx : -Nx;
src/libctp/calculators/zmultipole.h:                Ny = (Ny >= 0) ? Ny : -Ny;
src/libctp/calculators/zmultipole.h:                Nz = (Nz >= 0) ? Nz : -Nz;
src/libctp/calculators/zmultipole.h:    for (sit = this->_map_seg_APolarSites.begin();
src/libctp/calculators/zmultipole.h:         sit != this->_map_seg_APolarSites.end();
src/libctp/calculators/zmultipole.h:        cout << endl << "... ... ... ESP for segment type " << sit->first
src/libctp/calculators/zmultipole.h:        vector< APolarSite* > poles = sit->second;
src/libctp/calculators/zmultipole.h:            CoM += (*pit)->getPos();
src/libctp/calculators/zmultipole.h:            vec newpos = (*pit)->getPos() - CoM;
src/libctp/calculators/zmultipole.h:            (*pit)->setPos( newpos );
src/libctp/calculators/zmultipole.h:        for (int state = -1; state < 2; ++state) {
src/libctp/calculators/zmultipole.h:            bool hasState = _map_seg_chrgStates[sit->first][state+1];
src/libctp/calculators/zmultipole.h:                (*pit)->Depolarize();
src/libctp/calculators/zmultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/zmultipole.h:            // Prepare cube file, for structure sample see cube-file parser
src/libctp/calculators/zmultipole.h:            string espOutFile =  sit->first
src/libctp/calculators/zmultipole.h:            fprintf(out, "ESP %4s CHARGE %1d \n", (sit->first).c_str(), state);
src/libctp/calculators/zmultipole.h:            this->CalculateESP(poles, out);
src/libctp/calculators/zmultipole.h:    Segment *seg = top->getSegment(segId);
src/libctp/calculators/zmultipole.h:    cout << "... ... ... Selected segment type " << seg->getName() << flush;
src/libctp/calculators/zmultipole.h:    vector< APolarSite* > poles = seg->APolarSites();
src/libctp/calculators/zmultipole.h:        CoM += (*pit)->getPos();
src/libctp/calculators/zmultipole.h:        vec newpos = (*pit)->getPos() - CoM;
src/libctp/calculators/zmultipole.h:        (*pit)->setPos( newpos );
src/libctp/calculators/zmultipole.h:    for (int state = -1; state < 2; ++state) {
src/libctp/calculators/zmultipole.h:        bool hasState = _map_seg_chrgStates[seg->getName()][state+1];
src/libctp/calculators/zmultipole.h:            (*pit)->Charge(state);
src/libctp/calculators/zmultipole.h:        string espOutFile = seg->getName()
src/libctp/calculators/zmultipole.h:                        + "_ID" + boost::lexical_cast<string>(seg->getId())
src/libctp/calculators/zmultipole.h:                      seg->getName().c_str(), seg->getId(), state);
src/libctp/calculators/zmultipole.h:        this->CalculateESP(poles, out);
src/libctp/calculators/zmultipole.h: * ... NOTE Writes output in cube-file format, two header lines should
src/libctp/calculators/zmultipole.h:        string elem = (*pit)->_name;
src/libctp/calculators/zmultipole.h:                (*pit)->getPos().getX() * NM2BOHR,
src/libctp/calculators/zmultipole.h:                (*pit)->getPos().getY() * NM2BOHR,
src/libctp/calculators/zmultipole.h:                (*pit)->getPos().getZ() * NM2BOHR);
src/libctp/calculators/zmultipole.h:    double int2V = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/zmultipole.h:    // Calculate self-energy of configuration (just out of interest)
src/libctp/calculators/zmultipole.h:    double E2eV = 1.602176487e-19 * 1e9 * 1/(4*M_PI*8.854187817e-12);
src/libctp/calculators/zmultipole.h:         << "Electrostatic self-energy of configuration: "
src/libctp/calculators/zmultipole.h:    double int2N_C = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 * 1.000e-18;
src/libctp/calculators/zmultipole.h:    intt.open(this->_esfGridFile.c_str());
src/libctp/calculators/zmultipole.h:            //  -0.3853409355   0.0004894995  -0.0003833545
src/libctp/calculators/zmultipole.h:            //  -0.0002321905   0.2401559510   0.6602334308
src/libctp/calculators/zmultipole.h:    this->_esfGrid = gridPoints;
src/libctp/calculators/zmultipole.h:    for (sit = this->_map_seg_APolarSites.begin();
src/libctp/calculators/zmultipole.h:         sit != this->_map_seg_APolarSites.end();
src/libctp/calculators/zmultipole.h:        cout << endl << "... ... ... ESF for segment " << sit->first << flush;
src/libctp/calculators/zmultipole.h:        vector< APolarSite* > poles = sit->second;
src/libctp/calculators/zmultipole.h:        for (int state = -1; state < 2; ++state) {
src/libctp/calculators/zmultipole.h:            bool hasState = _map_seg_chrgStates[sit->first][state+1];
src/libctp/calculators/zmultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/zmultipole.h:            string esfOutFile =  sit->first
src/libctp/calculators/zmultipole.h:             << sit->first << flush;
src/libctp/calculators/zmultipole.h:        string alphaOutFile = sit->first + "_" + _alphaOutFile;
src/libctp/calculators/zmultipole.h:        if (_map_seg_chrgStates[sit->first][state+1]) {
src/libctp/calculators/zmultipole.h:            for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/zmultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/zmultipole.h:            this->CalculateAlphaRigid(sit->second, out, false);
src/libctp/calculators/zmultipole.h:        if (_map_seg_chrgStates[sit->first][state+1]) {
src/libctp/calculators/zmultipole.h:            for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/zmultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/zmultipole.h:            this->CalculateAlphaRigid(sit->second, out, false);
src/libctp/calculators/zmultipole.h:        state = -1;
src/libctp/calculators/zmultipole.h:        if (_map_seg_chrgStates[sit->first][state+1]) {
src/libctp/calculators/zmultipole.h:            for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/zmultipole.h:                (*pit)->Charge(state);
src/libctp/calculators/zmultipole.h:            this->CalculateAlphaRigid(sit->second, out, false);
src/libctp/calculators/zmultipole.h:        for (pit = sit->second.begin(); pit < sit->second.end(); ++pit) {
src/libctp/calculators/zmultipole.h:                (*pit)->Charge(0);
src/libctp/calculators/zmultipole.h:    double ayx, ayy, ayz;             // |-> Polarizability tensor
src/libctp/calculators/zmultipole.h:    double siteU1x, siteU1y, siteU1z; // |-> Molecular ind. dipole
src/libctp/calculators/zmultipole.h:    double extFx, extFy, extFz;       // |-> External applied field
src/libctp/calculators/zmultipole.h:    // External field in x-direction //
src/libctp/calculators/zmultipole.h:        (*pit)->FPx = extFx;
src/libctp/calculators/zmultipole.h:        (*pit)->FPy = extFy;
src/libctp/calculators/zmultipole.h:        (*pit)->FPz = extFz;
src/libctp/calculators/zmultipole.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/zmultipole.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/zmultipole.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/zmultipole.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/zmultipole.h:    axx = - siteU1x / extFx;
src/libctp/calculators/zmultipole.h:    ayx = - siteU1y / extFx;
src/libctp/calculators/zmultipole.h:    azx = - siteU1z / extFx;
src/libctp/calculators/zmultipole.h:    // External field in y-direction //
src/libctp/calculators/zmultipole.h:        (*pit)->FPx = extFx;
src/libctp/calculators/zmultipole.h:        (*pit)->FPy = extFy;
src/libctp/calculators/zmultipole.h:        (*pit)->FPz = extFz;
src/libctp/calculators/zmultipole.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/zmultipole.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/zmultipole.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/zmultipole.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/zmultipole.h:    axy = - siteU1x / extFy;
src/libctp/calculators/zmultipole.h:    ayy = - siteU1y / extFy;
src/libctp/calculators/zmultipole.h:    azy = - siteU1z / extFy;
src/libctp/calculators/zmultipole.h:    // External field in z-direction //
src/libctp/calculators/zmultipole.h:        (*pit)->FPx = extFx;
src/libctp/calculators/zmultipole.h:        (*pit)->FPy = extFy;
src/libctp/calculators/zmultipole.h:        (*pit)->FPz = extFz;
src/libctp/calculators/zmultipole.h:    this->SiteAlphaInduce(NULL, poles);
src/libctp/calculators/zmultipole.h:        siteU1x += (*pit)->U1x;
src/libctp/calculators/zmultipole.h:        siteU1y += (*pit)->U1y;
src/libctp/calculators/zmultipole.h:        siteU1z += (*pit)->U1z;
src/libctp/calculators/zmultipole.h:    axz = - siteU1x / extFz;
src/libctp/calculators/zmultipole.h:    ayz = - siteU1y / extFz;
src/libctp/calculators/zmultipole.h:    azz = - siteU1z / extFz;
src/libctp/calculators/zmultipole.h:        SUM_alpha += (*pit)->getIsoP();
src/libctp/calculators/zmultipole.h: * Induces dipoles on polar sites in self-consistent manner until converged
src/libctp/calculators/zmultipole.h:    int    maxIter = this->_maxIter;
src/libctp/calculators/zmultipole.h:    double wSOR = this->_wSOR_N;
src/libctp/calculators/zmultipole.h:    double eTOL = this->_epsTol;
src/libctp/calculators/zmultipole.h:        (*pit1)->InduceDirect();
src/libctp/calculators/zmultipole.h:            (*pit1)->ResetFieldU();
src/libctp/calculators/zmultipole.h:        // Calculate higher-order induction field
src/libctp/calculators/zmultipole.h:            (*pit1)->Induce(wSOR);
src/libctp/calculators/zmultipole.h:        double maxdU = -1;
src/libctp/calculators/zmultipole.h:             double dU = (*pit1)->HistdU();
src/libctp/calculators/zmultipole.h:        else if (iter == maxIter - 1) {
src/libctp/calculators/zmultipole.h: * Equips segments with polar sites using polar-site template container
src/libctp/calculators/zmultipole.h: * ... Translates + rotates polar-site into global frame
src/libctp/calculators/zmultipole.h:    for (sit = top->Segments().begin();
src/libctp/calculators/zmultipole.h:         sit < top->Segments().end();
src/libctp/calculators/zmultipole.h:        vector<APolarSite*> poleSites = _map_seg_APolarSites.at(seg->getName());
src/libctp/calculators/zmultipole.h:        seg->setChrgStates(_map_seg_chrgStates[seg->getName()]);
src/libctp/calculators/zmultipole.h:        bool map2md = _map2md[seg->getName()];
src/libctp/calculators/zmultipole.h:        for (fit = seg->Fragments().begin();
src/libctp/calculators/zmultipole.h:             fit < seg->Fragments().end();
src/libctp/calculators/zmultipole.h:            string idkey = frag->getName() + seg->getName()
src/libctp/calculators/zmultipole.h:                         + seg->getMolecule()->getName();
src/libctp/calculators/zmultipole.h:                if (polesInFrag.size() != frag->Atoms().size()) {
src/libctp/calculators/zmultipole.h:                    cout << endl << "ERROR: Segment " << seg->getName() <<
src/libctp/calculators/zmultipole.h:                            " Fragment " << frag->getName() <<
src/libctp/calculators/zmultipole.h:                APolarSite *templ = poleSites[poleId-1];
src/libctp/calculators/zmultipole.h:                APolarSite *newSite = top->AddAPolarSite(name);
src/libctp/calculators/zmultipole.h:                newSite->ImportFrom(templ);
src/libctp/calculators/zmultipole.h:                seg->AddAPolarSite(newSite);
src/libctp/calculators/zmultipole.h:                frag->AddAPolarSite(newSite);
src/libctp/calculators/zmultipole.h:                    newSite->Translate(frag->getTransQM2MD());
src/libctp/calculators/zmultipole.h:                    newSite->Rotate(frag->getRotQM2MD(), frag->getCoMD());
src/libctp/calculators/zmultipole.h:                    vec mdpos = frag->Atoms()[i]->getPos();
src/libctp/calculators/zmultipole.h:                    newSite->setPos(mdpos);
src/libctp/calculators/zmultipole.h:                    if (newSite->getRank() > 0) {
src/libctp/calculators/zmultipole.h:                        " prevents use of higher-rank multipoles. " << endl;
src/libctp/calculators/zmultipole.h:    top->setIsEStatified(true);
src/libctp/calculators/zmultipole.h:    if (!top->isRigid()) {
src/libctp/calculators/zmultipole.h:        bool isRigid = top->Rigidify();
src/libctp/calculators/zmultipole.h:    if (top->isEStatified() == false) {
src/libctp/calculators/zmultipole.h:        this->DistributeMpoles(top);
src/libctp/calculators/zmultipole.h:        cout << endl << "... ... Created " << top->APolarSites().size()
src/libctp/calculators/zmultipole.h:        cout << endl << "... ... Writing polar-site coordinates to "
src/libctp/calculators/zmultipole.h:        for (sit = top->Segments().begin();
src/libctp/calculators/zmultipole.h:             sit < top->Segments().end();
src/libctp/calculators/zmultipole.h:            (*sit)->WritePDB(mpPDB, "Multipoles", "Charges");
src/libctp/calculators/zmultipole.h:                    4*top->getSegment(1)->APolarSites().size()
src/libctp/calculators/zmultipole.h:                   +4*top->getSegment(2)->APolarSites().size());
src/libctp/calculators/zmultipole.h:        for (pit = top->getSegment(1)->APolarSites().begin();
src/libctp/calculators/zmultipole.h:             pit < top->getSegment(1)->APolarSites().end();
src/libctp/calculators/zmultipole.h:            (*pit)->PrintTensorPDB(paXYZ, -1);
src/libctp/calculators/zmultipole.h:        for (pit = top->getSegment(2)->APolarSites().begin();
src/libctp/calculators/zmultipole.h:             pit < top->getSegment(2)->APolarSites().end();
src/libctp/calculators/zmultipole.h:            (*pit)->PrintTensorPDB(paXYZ, -1);
src/libctp/calculators/zmultipole.h:        this->CalculateESPRigid(top);
src/libctp/calculators/zmultipole.h:        if (this->_calcAlphaMol) {
src/libctp/calculators/zmultipole.h:        if (this->_calcESP) {
src/libctp/calculators/zmultipole.h:        if (this->_calcESF) {
src/libctp/calculators/zmultipole.h:                "Frame" + boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/zmultipole.h:        for (sit = top->Segments().begin();
src/libctp/calculators/zmultipole.h:             sit < top->Segments().end();
src/libctp/calculators/zmultipole.h:            vector< APolarSite* > poles = (*sit)->APolarSites();
src/libctp/calculators/zmultipole.h:            cout << "\r... ... ... Segment " << (*sit)->getId() << " " << flush;
src/libctp/calculators/zmultipole.h:            fprintf(out, "%4d %4s ", (*sit)->getId(),(*sit)->getName().c_str());
src/libctp/calculators/zmultipole.h:            if ( (*sit)->hasChrgState(state) ) {
src/libctp/calculators/zmultipole.h:                    (*pit)->Charge(state);
src/libctp/calculators/zmultipole.h:                this->CalculateAlphaRigid(poles, out, true);
src/libctp/calculators/zmultipole.h:            state = -1;
src/libctp/calculators/zmultipole.h:            if ( (*sit)->hasChrgState(state) ) {
src/libctp/calculators/zmultipole.h:                    (*pit)->Charge(state);
src/libctp/calculators/zmultipole.h:                this->CalculateAlphaRigid(poles, out, true);
src/libctp/calculators/zmultipole.h:            if ( (*sit)->hasChrgState(state) ) {
src/libctp/calculators/zmultipole.h:                    (*pit)->Charge(state);
src/libctp/calculators/zmultipole.h:                this->CalculateAlphaRigid(poles, out, true);
src/libctp/calculators/zmultipole.h:                (*pit)->Charge(0);
src/libctp/calculators/zmultipole.h:        _nextSite = top->Segments().begin();
src/libctp/calculators/zmultipole.h:        for ( ; (*_nextSite)->getId() != this->_firstSeg &&
src/libctp/calculators/zmultipole.h:                  _nextSite < top->Segments().end(); ++_nextSite) { ; }
src/libctp/calculators/zmultipole.h:            _listSegs.push_back(top->getSegment(segId));
src/libctp/calculators/zmultipole.h:        siteOps[id]->InitSlotData(top);
src/libctp/calculators/zmultipole.h:        siteOps[id]->Start();
src/libctp/calculators/zmultipole.h:        siteOps[id]->WaitDone();
src/libctp/calculators/zmultipole.h:                          + boost::lexical_cast<string>(top->getDatabaseId())
src/libctp/calculators/zmultipole.h:            fprintf(out, "%4d ", (*sit)->getId() );
src/libctp/calculators/zmultipole.h:            fprintf(out, "%4s ", (*sit)->getName().c_str() );
src/libctp/calculators/zmultipole.h:            if ((*sit)->hasChrgState(0)) {
src/libctp/calculators/zmultipole.h:                fprintf(out, "   0 %3.8f   ", (*sit)->getEMpoles(0) );
src/libctp/calculators/zmultipole.h:            if ((*sit)->hasChrgState(-1)) {
src/libctp/calculators/zmultipole.h:                fprintf(out, "  -1 %3.8f   ", (*sit)->getEMpoles(-1) );
src/libctp/calculators/zmultipole.h:            if ((*sit)->hasChrgState(+1)) {
src/libctp/calculators/zmultipole.h:                fprintf(out, "  +1 %3.8f   ", (*sit)->getEMpoles(+1) );
src/libctp/calculators/zmultipole.h:            if ((*sit)->hasChrgState(0)) {
src/libctp/calculators/zmultipole.h:                fprintf(out, "   0 %3d   ", _log_seg_iter[(*sit)->getId()][1]);
src/libctp/calculators/zmultipole.h:            if ((*sit)->hasChrgState(-1)) {
src/libctp/calculators/zmultipole.h:                fprintf(out, "  -1 %3d   ", _log_seg_iter[(*sit)->getId()][0]);
src/libctp/calculators/zmultipole.h:            if ((*sit)->hasChrgState(+1)) {
src/libctp/calculators/zmultipole.h:                fprintf(out, "  +1 %3d   ", _log_seg_iter[(*sit)->getId()][2]);
src/libctp/calculators/zmultipole.h:                    _log_seg_sphereSize[(*sit)->getId()]);
src/libctp/calculators/zmultipole.h:                    _log_seg_com[(*sit)->getId()].getX(),
src/libctp/calculators/zmultipole.h:                    _log_seg_com[(*sit)->getId()].getY(),
src/libctp/calculators/zmultipole.h:                    _log_seg_com[(*sit)->getId()].getZ());
src/libctp/calculators/zmultipole.h:    this->PostProcess(top);
src/libctp/calculators/zmultipole.h:        if (_nextSite == top->Segments().end()) {
src/libctp/calculators/zmultipole.h:        else if ((*_nextSite)->getId() > _lastSeg && _lastSeg > 0) {
src/libctp/calculators/zmultipole.h:                 << workOnThis->getId() << flush;
src/libctp/calculators/zmultipole.h:                 << workOnThis->getId() << flush;
src/libctp/calculators/zmultipole.h:        _seg = _master->RequestNextSite(_id, _top);
src/libctp/calculators/zmultipole.h:        else { this->EvalSite(_top, _seg); }
src/libctp/calculators/zmultipole.h:    _APolarSites.resize(top->Segments().size());
src/libctp/calculators/zmultipole.h:    assert(top->Segments().size() == _APolarSites.size());
src/libctp/calculators/zmultipole.h:    for (sitRef = top->Segments().begin(), sitNew = _APolarSites.begin();
src/libctp/calculators/zmultipole.h:         sitRef < top->Segments().end();
src/libctp/calculators/zmultipole.h:        (*sitNew).resize((*sitRef)->APolarSites().size());
src/libctp/calculators/zmultipole.h:        for (pitRef = (*sitRef)->APolarSites().begin(),
src/libctp/calculators/zmultipole.h:             pitRef < (*sitRef)->APolarSites().end();
src/libctp/calculators/zmultipole.h:            (*pitNew)->ImportFrom(*pitRef, "full");
src/libctp/calculators/zmultipole.h:            (*pitNew)->Charge(0);
src/libctp/calculators/zmultipole.h: * ... Determine polarization sphere via cut-off
src/libctp/calculators/zmultipole.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/zmultipole.h:    this->_segsPolSphere.clear(); // <- Segments    within cutoff
src/libctp/calculators/zmultipole.h:    this->_segsOutSphere.clear(); // <- Segments    within cutoff1, cutoff2
src/libctp/calculators/zmultipole.h:    this->_polsPolSphere.clear(); // <- Polar sites within cutoff
src/libctp/calculators/zmultipole.h:    this->_polsOutSphere.clear(); // <- Polar sites within cutoff1, cutoff2
src/libctp/calculators/zmultipole.h:    for (sit = top->Segments().begin(); sit < top->Segments().end(); ++sit) {
src/libctp/calculators/zmultipole.h:        double r12 = abs(_top->PbShortestConnect((*sit)->getPos(),
src/libctp/calculators/zmultipole.h:                                                    seg->getPos()));
src/libctp/calculators/zmultipole.h:        if      ( r12 > _master->_cutoff2) { continue; }
src/libctp/calculators/zmultipole.h:        else if ( r12 > _master->_cutoff ) {
src/libctp/calculators/zmultipole.h:            _polsOutSphere.push_back( _APolarSites[(*sit)->getId() - 1] );
src/libctp/calculators/zmultipole.h:            _polsPolSphere.push_back( _APolarSites[(*sit)->getId() - 1] );
src/libctp/calculators/zmultipole.h://        (*sit)->WritePDB(out, "Multipoles", "");
src/libctp/calculators/zmultipole.h:    if (_master->_maverick) {
src/libctp/calculators/zmultipole.h:    this->Depolarize();
src/libctp/calculators/zmultipole.h:            (*pit)->Depolarize();
src/libctp/calculators/zmultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/zmultipole.h:        if (_master->_maverick) {
src/libctp/calculators/zmultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/zmultipole.h:        this->Charge(state);
src/libctp/calculators/zmultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/zmultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/zmultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/zmultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/zmultipole.h:        // this->Depolarize(); // OVERRIDE
src/libctp/calculators/zmultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/zmultipole.h:                (*pit1)->ResetFieldP();
src/libctp/calculators/zmultipole.h:                (*pit1)->ResetU1Hist();
src/libctp/calculators/zmultipole.h:    state = -1;
src/libctp/calculators/zmultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/zmultipole.h:        if (_master->_maverick) {
src/libctp/calculators/zmultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/zmultipole.h:        this->Charge(state);
src/libctp/calculators/zmultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/zmultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/zmultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/zmultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/zmultipole.h:            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/zmultipole.h:        // this->Depolarize(); // OVERRIDE
src/libctp/calculators/zmultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/zmultipole.h:                (*pit1)->ResetFieldP();
src/libctp/calculators/zmultipole.h:                (*pit1)->ResetU1Hist();
src/libctp/calculators/zmultipole.h:    if (_seg->hasChrgState(state)) {
src/libctp/calculators/zmultipole.h:        if (_master->_maverick) {
src/libctp/calculators/zmultipole.h:            cout << endl << "... ... ... Seg " << seg->getId()
src/libctp/calculators/zmultipole.h:        this->Charge(state);
src/libctp/calculators/zmultipole.h:        if (_master->_induce) iter = this->Induce(state);
src/libctp/calculators/zmultipole.h:        if (_master->_induce) EState = this->Energy(state);
src/libctp/calculators/zmultipole.h:        else                 EState = this->EnergyStatic(state);
src/libctp/calculators/zmultipole.h:        _seg->setEMpoles(state, int2eV * EState);
src/libctp/calculators/zmultipole.h://        string toFile = boost::lexical_cast<string>(_seg->getId())
src/libctp/calculators/zmultipole.h://        vec CoM = _seg->getPos();
src/libctp/calculators/zmultipole.h://                vec r  = _top->PbShortestConnect((*pit)->getPos(), CoM);
src/libctp/calculators/zmultipole.h://                int segId = (*pit)->getSegment()->getId();
src/libctp/calculators/zmultipole.h://                vec u = vec( (*pit)->U1x, (*pit)->U1y, (*pit)->U1z );
src/libctp/calculators/zmultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/zmultipole.h://            (*pit)->PrintInfoVisual(mpDat);
src/libctp/calculators/zmultipole.h:        this->Depolarize();
src/libctp/calculators/zmultipole.h:    this->_master->_logMutex.Lock();
src/libctp/calculators/zmultipole.h:    _master->_log_seg_iter[_seg->getId()] = iters;
src/libctp/calculators/zmultipole.h:    _master->_log_seg_sphereSize[_seg->getId()] = _polsPolSphere.size();
src/libctp/calculators/zmultipole.h:    _master->_log_seg_com[_seg->getId()] = _seg->getPos();
src/libctp/calculators/zmultipole.h:    _master->_log_evaluated_segs.push_back(_seg);
src/libctp/calculators/zmultipole.h:    // On-the-fly output
src/libctp/calculators/zmultipole.h:    string logbook = _master->_logFile;
src/libctp/calculators/zmultipole.h:                  _seg->getId(),
src/libctp/calculators/zmultipole.h:                  _seg->getEMpoles(0),
src/libctp/calculators/zmultipole.h:                  _seg->getEMpoles(-1),
src/libctp/calculators/zmultipole.h:                  _seg->getEMpoles(+1));
src/libctp/calculators/zmultipole.h:    this->_master->_logMutex.Unlock();
src/libctp/calculators/zmultipole.h:    this->Charge(0);
src/libctp/calculators/zmultipole.h:    for (pit = _APolarSites[_seg->getId()-1].begin();
src/libctp/calculators/zmultipole.h:         pit < _APolarSites[_seg->getId()-1].end();
src/libctp/calculators/zmultipole.h:        (*pit)->Charge(state);
src/libctp/calculators/zmultipole.h:    double wSOR = (state == 0) ? _master->_wSOR_N : _master->_wSOR_C;
src/libctp/calculators/zmultipole.h:    double eTOL = this->_master->_epsTol;
src/libctp/calculators/zmultipole.h:    int    maxI = this->_master->_maxIter;
src/libctp/calculators/zmultipole.h:    // Inter-site fields (arising from perm. m'poles) //
src/libctp/calculators/zmultipole.h:    // (Outer shell itself is treated as non-polarizable)
src/libctp/calculators/zmultipole.h:    // 1st-order induction //
src/libctp/calculators/zmultipole.h:                 (*pit1)->InduceDirect();
src/libctp/calculators/zmultipole.h:    // Higher-order induction //
src/libctp/calculators/zmultipole.h:                (*pit1)->ResetFieldU();
src/libctp/calculators/zmultipole.h:                 (*pit1)->Induce(wSOR);
src/libctp/calculators/zmultipole.h:        double maxdU = -1;
src/libctp/calculators/zmultipole.h:                 double dU = (*pit1)->HistdU();
src/libctp/calculators/zmultipole.h:        else if (iter == maxI - 1) {
src/libctp/calculators/zmultipole.h:            this->_master->LockCout();
src/libctp/calculators/zmultipole.h:                 << _seg->getId() << " - state " << state
src/libctp/calculators/zmultipole.h:            this->_master->UnlockCout();
src/libctp/calculators/zmultipole.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/zmultipole.h:    vector< APolarSite* > central = _APolarSites[ _seg->getId() - 1 ];
src/libctp/calculators/zmultipole.h:        int id = (*seg1)->getId();
src/libctp/calculators/zmultipole.h:        if (id == _seg->getId()) { continue; }
src/libctp/calculators/zmultipole.h:        for (pit1 = _APolarSites[id-1].begin();
src/libctp/calculators/zmultipole.h:             pit1 < _APolarSites[id-1].end();
src/libctp/calculators/zmultipole.h:        int id = (*seg1)->getId();
src/libctp/calculators/zmultipole.h:        if (id == _seg->getId()) { continue; }
src/libctp/calculators/zmultipole.h:        for (pit1 = _APolarSites[id-1].begin();
src/libctp/calculators/zmultipole.h:             pit1 < _APolarSites[id-1].end();
src/libctp/calculators/zmultipole.h:    if (_master->_maverick) {
src/libctp/calculators/zmultipole.h: * Calculates electrostatic + induction energy of segment up to Q2-Q2
src/libctp/calculators/zmultipole.h:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/calculators/zmultipole.h:    // Inter-site energy //
src/libctp/calculators/zmultipole.h:    // Outer-Shell energy //
src/libctp/calculators/zmultipole.h:    for (sit1 = this->_polsOutSphere.begin(); 
src/libctp/calculators/zmultipole.h:    for (sit2 = this->_polsPolSphere.begin();
src/libctp/calculators/zmultipole.h:    if (_master->_maverick) {
src/libctp/calculators/zmultipole.h:            (*pit)->Depolarize();
src/libctp/calculators/zmultipole.h:    e12  = pol.getPos() - r;
src/libctp/calculators/zmultipole.h:    rbx = - pol._locX * e12;
src/libctp/calculators/zmultipole.h:    rby = - pol._locY * e12;
src/libctp/calculators/zmultipole.h:    rbz = - pol._locZ * e12;
src/libctp/calculators/zmultipole.h:    e12  = pol.getPos() - r;
src/libctp/calculators/zmultipole.h:        rbx = - rax;
src/libctp/calculators/zmultipole.h:        rby = - ray;
src/libctp/calculators/zmultipole.h:        rbz = - raz;
src/libctp/calculators/zmultipole.h:    // Field generated by rank-0 m'pole
src/libctp/calculators/zmultipole.h:    // Field generated by rank-1 m'pole
src/libctp/calculators/zmultipole.h:    // Field generated by rank-2 m'pole
src/libctp/calculators/zmultipole.h: * Used in molecular-polarizability calculator (initialize stage)
src/libctp/calculators/zmultipole.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/zmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/zmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/zmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/zmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/zmultipole.h:        rbx = - rax;
src/libctp/calculators/zmultipole.h:        rby = - ray;
src/libctp/calculators/zmultipole.h:        rbz = - raz;
src/libctp/calculators/zmultipole.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/zmultipole.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/zmultipole.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/zmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/zmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/zmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/zmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/zmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/zmultipole.h:        rbx = - rax;
src/libctp/calculators/zmultipole.h:        rby = - ray;
src/libctp/calculators/zmultipole.h:        rbz = - raz;
src/libctp/calculators/zmultipole.h:    // Fields generated by rank-1 induced m'poles
src/libctp/calculators/zmultipole.h: * Used in self-consistent field calculation (evaluation stage)
src/libctp/calculators/zmultipole.h:    //          This implies that induced = - alpha * field
src/libctp/calculators/zmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/zmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/zmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/zmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/zmultipole.h:        rbx = - rax;
src/libctp/calculators/zmultipole.h:        rby = - ray;
src/libctp/calculators/zmultipole.h:        rbz = - raz;
src/libctp/calculators/zmultipole.h:    // Fields generated by rank-0 m'poles
src/libctp/calculators/zmultipole.h:    // Fields generated by rank-1 m'poles
src/libctp/calculators/zmultipole.h:    // Fields generated by rank-2 m'poles
src/libctp/calculators/zmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/zmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/zmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/zmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/zmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/zmultipole.h:        rbx = - rax;
src/libctp/calculators/zmultipole.h:        rby = - ray;
src/libctp/calculators/zmultipole.h:        rbz = - raz;
src/libctp/calculators/zmultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/zmultipole.h:    e12  = _top->PbShortestConnect(pol1.getPos(), pol2.getPos());
src/libctp/calculators/zmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/zmultipole.h:    //cout << "frag1 " << pol1.getFragment()->getId() << endl;
src/libctp/calculators/zmultipole.h:    //cout << "frag2 " << pol2.getFragment()->getId() << endl;
src/libctp/calculators/zmultipole.h:    //cout << "seg1  " << pol1.getSegment()->getId() << endl;
src/libctp/calculators/zmultipole.h:    //cout << "seg2  " << pol2.getSegment()->getId() << endl;
src/libctp/calculators/zmultipole.h://        rbx = - pol2._locX * e12;
src/libctp/calculators/zmultipole.h://        rby = - pol2._locY * e12;
src/libctp/calculators/zmultipole.h://        rbz = - pol2._locZ * e12;
src/libctp/calculators/zmultipole.h:        rbx = - rax;
src/libctp/calculators/zmultipole.h:        rby = - ray;
src/libctp/calculators/zmultipole.h:        rbz = - raz;
src/libctp/calculators/zmultipole.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/zmultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/zmultipole.h:        //cout << "E up to q <-> q " << E << endl;
src/libctp/calculators/zmultipole.h:        //cout << "E up to q <-> d " << E << endl;
src/libctp/calculators/zmultipole.h:        //cout << "E up to q <-> Q " << E << endl;
src/libctp/calculators/zmultipole.h:        //cout << "E up to d <-> d " << E << endl;
src/libctp/calculators/zmultipole.h:        //cout << "E up to d <-> Q " << E << endl;
src/libctp/calculators/zmultipole.h:        //cout << "E up to Q <-> Q " << E << endl;
src/libctp/calculators/zmultipole.h: * Designed for use in ESP calculator (init. stage). Only for error-checking.
src/libctp/calculators/zmultipole.h:    e12  = pol2.getPos() - pol1.getPos();
src/libctp/calculators/zmultipole.h:    a    = _em->_aDamp;
src/libctp/calculators/zmultipole.h:        rbx = - rax;
src/libctp/calculators/zmultipole.h:        rby = - ray;
src/libctp/calculators/zmultipole.h:        rbz = - raz;
src/libctp/calculators/zmultipole.h:    double E = 0.0; // <- Electrostatic energy
src/libctp/calculators/zmultipole.h:    double U = 0.0; // <- Induction energy
src/libctp/calculators/edft.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/edft.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/edft.h:* Requires first-principles package, i.e. GAUSSIAN installation
src/libctp/calculators/edft.h:    /* ---- OPTIONS.XML Structure -----
src/libctp/calculators/edft.h:    this->ParseOrbitalsXML(top, options);
src/libctp/calculators/edft.h:    string _package_xml = opt->get(key+".package").as<string> ();
src/libctp/calculators/edft.h:    Logger* pLog = opThread->getLogger();
src/libctp/calculators/edft.h:    pLog->setReportLevel(logDEBUG);
src/libctp/calculators/edft.h:    pLog->setMultithreading( _maverick );
src/libctp/calculators/edft.h:    LOG(logINFO,*pLog) << TimeStamp() << " Evaluating site " << seg->getId() << endl; 
src/libctp/calculators/edft.h:    _outParent = "frame" + boost::lexical_cast<string>(top->getDatabaseId());
src/libctp/calculators/edft.h:    string ID   = boost::lexical_cast<string>( seg->getId() );
src/libctp/calculators/edft.h:    seg->WriteXYZ(out);
src/libctp/calculators/edft.h:        int _nat = _atoms->size() ;
src/libctp/calculators/edft.h:        //cout << "Deserializing " << _atoms->size() << " atoms" << endl;
src/libctp/calculators/edft.h:        //cout << (_atoms->front())->type << " ";
src/libctp/calculators/edft.h:        //cout << (_atoms->front())->x << " ";
src/libctp/calculators/edft.h:        //cout << (_atoms->front())->y << " ";
src/libctp/calculators/edft.h:        //cout << (_atoms->front())->z << " ";
src/libctp/calculators/edft.h:        //cout << (_atoms->front())->charge << endl;
src/libctp/calculators/idft.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/idft.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/idft.cc:    if ( opt->exists( key + ".degeneracy" ) ) {
src/libctp/calculators/idft.cc:        _energy_difference = opt->get( key + ".degeneracy" ).as< double > ();
src/libctp/calculators/idft.cc:    string _package_xml = opt->get(key+".package").as<string> ();
src/libctp/calculators/idft.cc:    /* --- ORBITALS.XML Structure ---
src/libctp/calculators/idft.cc: * Calculates S^{-1/2}
src/libctp/calculators/idft.cc:    //eigenvectors (1,2,2), (-2,-1,2), (2,-2,1)
src/libctp/calculators/idft.cc:    _overlap(1,0) =-2;  _overlap(1,1) = 6;  
src/libctp/calculators/idft.cc:    _overlap(2,0) = 0;  _overlap(2,1) =-2; _overlap(2,2) = 5;
src/libctp/calculators/idft.cc:    // form a diagonal matrix S^{-1/2}
src/libctp/calculators/idft.cc:    int _basisA = _orbitalsA->getBasisSetSize();
src/libctp/calculators/idft.cc:    int _basisB = _orbitalsB->getBasisSetSize();
src/libctp/calculators/idft.cc:    int _levelsA = _orbitalsA->getNumberOfLevels();
src/libctp/calculators/idft.cc:    int _levelsB = _orbitalsB->getNumberOfLevels();
src/libctp/calculators/idft.cc:    ub::project( _psi_AxB, ub::range (0, _levelsA ), ub::range ( 0, _basisA ) ) = *_orbitalsA->getOrbitals();
src/libctp/calculators/idft.cc:    ub::project( _psi_AxB, ub::range (_levelsA, _levelsA + _levelsB ), ub::range ( _basisA, _basisA + _basisB ) ) = *_orbitalsB->getOrbitals();    
src/libctp/calculators/idft.cc:    ub::diagonal_matrix<double> _fock_AB( _orbitalsAB->getNumberOfLevels(), (*_orbitalsAB->getEnergies()).data() ); 
src/libctp/calculators/idft.cc:    ub::matrix<double> _psi_AB = ub::prod( *_orbitalsAB->getOverlap(), ub::trans( *_orbitalsAB->getOrbitals() ) );          
src/libctp/calculators/idft.cc:    int levelA = _orbitalsA->getNumberOfElectrons() ;
src/libctp/calculators/idft.cc:    int levelB = _orbitalsB->getNumberOfElectrons() ;
src/libctp/calculators/idft.cc:            << JAB_dimer.at_element( levelA - 1  , levelB -1 + _levelsA ) * _conv_Hrt_eV << " "
src/libctp/calculators/idft.cc:    _test(1,0) =-2;  _test(1,1) = 6;  
src/libctp/calculators/idft.cc:    _test(2,0) = 0;  _test(2,1) =-2; _test(2,2) = 5; 
src/libctp/calculators/idft.cc:    int _levelsA = _orbitalsA->getNumberOfLevels();
src/libctp/calculators/idft.cc:    int _levelsB = _orbitalsB->getNumberOfLevels();    
src/libctp/calculators/idft.cc:        std::vector<int> list_levelsA = *_orbitalsA->getDegeneracy( levelA, _energy_difference );
src/libctp/calculators/idft.cc:        std::vector<int> list_levelsB = *_orbitalsA->getDegeneracy( levelB, _energy_difference );
src/libctp/calculators/idft.cc:                    _JAB_one_level = _JAB->at_element( *iA - 1  , *iB -1 + _levelsA );
src/libctp/calculators/idft.cc:        return _JAB->at_element( levelA - 1  , levelB -1 + _levelsA ) * _conv_Hrt_eV;
src/libctp/calculators/idft.cc:    // _JAB.at_element( _levelsA + levelB - 1  , levelA - 1 );
src/libctp/calculators/idft.cc:    Logger* pLog = opThread->getLogger();
src/libctp/calculators/idft.cc:    pLog->setReportLevel(logDEBUG);
src/libctp/calculators/idft.cc:    string ID   = boost::lexical_cast<string>( qmpair->getId() );
src/libctp/calculators/idft.cc:    string ID_A   = boost::lexical_cast<string>( ( qmpair->Seg1() )->getId() );
src/libctp/calculators/idft.cc:    string ID_B   = boost::lexical_cast<string>( ( qmpair->Seg2() )->getId() );
src/libctp/calculators/idft.cc:          (top->NBList()).size() << " ["  << ID_A << ":" << ID_B << "]" << endl; 
src/libctp/calculators/idft.cc:    segments.push_back( qmpair->Seg1() );
src/libctp/calculators/idft.cc:    segments.push_back( qmpair->Seg2() );
src/libctp/calculators/idft.cc:    _outParent = "frame" + boost::lexical_cast<string>(top->getDatabaseId());
src/libctp/calculators/idft.cc:    qmpair->WriteXYZ(out);
src/libctp/calculators/idft.cc:    qmpair->setJeff2( getCouplingElement( HOMO_A , HOMO_B, &_orbitalsA, &_orbitalsB, &_JAB ),  1 );
src/libctp/calculators/idft.cc:    qmpair->setJeff2( getCouplingElement( LUMO_A , LUMO_B, &_orbitalsA, &_orbitalsB, &_JAB ), -1 );
src/libctp/calculators/idft.cc:    int _basisA = _orbitalsA->getBasisSetSize();
src/libctp/calculators/idft.cc:    int _basisB = _orbitalsB->getBasisSetSize();
src/libctp/calculators/idft.cc:    int _levelsA = _orbitalsA->getNumberOfLevels();
src/libctp/calculators/idft.cc:    int _levelsB = _orbitalsB->getNumberOfLevels();
src/libctp/calculators/idft.cc:    int _electronsA = _orbitalsA->getNumberOfElectrons();
src/libctp/calculators/idft.cc:    int _electronsB = _orbitalsB->getNumberOfElectrons();
src/libctp/calculators/idft.cc:    ub::matrix<double>* _mo_coefficients = _orbitalsAB->getOrbitals();    
src/libctp/calculators/idft.cc:    _mo_coefficients->resize( _levelsA + _levelsB, _basisA + _basisB  );
src/libctp/calculators/idft.cc:    _orbitalsAB->setBasisSetSize( _basisA + _basisB );
src/libctp/calculators/idft.cc:    _orbitalsAB->setNumberOfLevels( _electronsA - _electronsB , 
src/libctp/calculators/idft.cc:                                    _levelsA + _levelsB - _electronsA - _electronsB );
src/libctp/calculators/idft.cc:    _orbitalsAB->setNumberOfElectrons( _electronsA + _electronsB );
src/libctp/calculators/idft.cc:    ub::project( *_mo_coefficients, ub::range (0, _levelsA ), ub::range ( 0, _basisA ) ) = *_orbitalsA->getOrbitals();
src/libctp/calculators/idft.cc:    ub::project( *_mo_coefficients, ub::range (_levelsA, _levelsA + _levelsB ), ub::range ( _basisA, _basisA + _basisB ) ) = *_orbitalsB->getOrbitals();   
src/libctp/calculators/idft.cc:    ub::vector<double>* _energies = _orbitalsAB->getEnergies();
src/libctp/calculators/idft.cc:    _energies->resize( _levelsA + _levelsB );
src/libctp/calculators/idft.cc:    ub::project( *_energies, ub::range (0, _levelsA ) ) = *_orbitalsA->getEnergies();
src/libctp/calculators/idft.cc:    ub::project( *_energies, ub::range (_levelsA, _levelsA + _levelsB ) ) = *_orbitalsB->getEnergies();
src/libctp/calculators/idft.cc:    ///"... ... Have now " >> _energies->size() >> " energies\n" >> *opThread;
src/libctp/calculators/idft.h: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/calculators/idft.h: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/calculators/idft.h:* \brief Density-functional-based electronic coupling elements
src/libctp/calculators/idft.h:* DFT-based electronic coupling elements for all conjugated
src/libctp/calculators/qmmm.h:    // Polar-site mapping
src/libctp/calculators/qmmm.h:    // Control over induction-state output
src/libctp/calculators/qmmm.h:    // Induction, subthreading (-> base class)
src/libctp/calculators/qmmm.h:        if ( opt->exists(key) ) {
src/libctp/calculators/qmmm.h:            _xml_file = opt->get(key).as< string >();
src/libctp/calculators/qmmm.h:        if ( opt->exists(key+".job_file")) {
src/libctp/calculators/qmmm.h:            _xjobfile = opt->get(key+".job_file").as<string>();
src/libctp/calculators/qmmm.h:            throw std::runtime_error("XJob-file not set. Abort.");
src/libctp/calculators/qmmm.h:        if ( opt->exists(key+".emp_file")) {
src/libctp/calculators/qmmm.h:            _emp_file   = opt->get(key+".emp_file").as<string>();
src/libctp/calculators/qmmm.h:            _emp_file   = opt->get(key+".emp_file").as<string>();
src/libctp/calculators/qmmm.h:        if ( opt->exists(key+".output") ) {
src/libctp/calculators/qmmm.h:            _outFile = opt->get(key+".output").as< string >();
src/libctp/calculators/qmmm.h:        if (opt->exists(key+".pdb_check")) {
src/libctp/calculators/qmmm.h:            _pdb_check = opt->get(key+".pdb_check").as<string>();
src/libctp/calculators/qmmm.h:        if (opt->exists(key+".write_chk")) {
src/libctp/calculators/qmmm.h:            _write_chk_suffix = opt->get(key+".write_chk").as<string>();
src/libctp/calculators/qmmm.h:        if (opt->exists(key+".format_chk")) {
src/libctp/calculators/qmmm.h:            _chk_format = opt->get(key+".format_chk").as<string>();
src/libctp/calculators/qmmm.h:        if (opt->exists(key+".split_dpl")) {
src/libctp/calculators/qmmm.h:            _chk_split_dpl = (opt->get(key+".split_dpl").as<int>() == 1) ?
src/libctp/calculators/qmmm.h:        if (opt->exists(key+".dpl_spacing")) {
src/libctp/calculators/qmmm.h:            _chk_dpl_spacing = opt->get(key+".dpl_spacing").as<double>();
src/libctp/calculators/qmmm.h:            _chk_dpl_spacing = 1.0e-6;
src/libctp/calculators/qmmm.h:        if ( opt->exists(key+".method") ) {
src/libctp/calculators/qmmm.h:            _method = opt->get(key+".method").as< string >();
src/libctp/calculators/qmmm.h:            if (_method != "cut-off" && _method != "cutoff") {
src/libctp/calculators/qmmm.h:            _method = "cut-off";
src/libctp/calculators/qmmm.h:        if ( opt->exists(key+".cutoff1") ) {
src/libctp/calculators/qmmm.h:            _cutoff1 = opt->get(key+".cutoff1").as< double >();
src/libctp/calculators/qmmm.h:        if ( opt->exists(key+".cutoff2") ) {
src/libctp/calculators/qmmm.h:            _cutoff2 = opt->get(key+".cutoff2").as< double >();
src/libctp/calculators/qmmm.h:        if ( opt->exists(key+".subthreads") ) {
src/libctp/calculators/qmmm.h:            _subthreads = opt->get(key+".subthreads").as< double >();
src/libctp/calculators/qmmm.h:        if (opt->exists(key+".package")) {
src/libctp/calculators/qmmm.h:            string package_xml = opt->get(key+".package").as< string >();
src/libctp/calculators/qmmm.h:    // INITIALIZE MPS-MAPPER (=> POLAR TOP PREP)
src/libctp/calculators/qmmm.h:    cout << endl << "... ... Initialize MPS-mapper: " << flush;
src/libctp/calculators/qmmm.h:    out = fopen(this->_outFile.c_str(), "w");
src/libctp/calculators/qmmm.h:        (*jit)->WriteInfoLine(out);
src/libctp/calculators/qmmm.h:    Logger* log = thread->getLogger();
src/libctp/calculators/qmmm.h:    log->setReportLevel(logDEBUG);
src/libctp/calculators/qmmm.h:    log->setMultithreading(_maverick);
src/libctp/calculators/qmmm.h:    log->setPreface(logINFO,    (format("\nT%1$02d ... ...") % thread->getId()).str());
src/libctp/calculators/qmmm.h:    log->setPreface(logERROR,   (format("\nT%1$02d ERR ...") % thread->getId()).str());
src/libctp/calculators/qmmm.h:    log->setPreface(logWARNING, (format("\nT%1$02d WAR ...") % thread->getId()).str());
src/libctp/calculators/qmmm.h:    log->setPreface(logDEBUG,   (format("\nT%1$02d DBG ...") % thread->getId()).str());        
src/libctp/calculators/qmmm.h:    Logger* log = thread->getLogger();    
src/libctp/calculators/qmmm.h:    qlog->setReportLevel(logWARNING);
src/libctp/calculators/qmmm.h:    qlog->setMultithreading(_maverick);    
src/libctp/calculators/qmmm.h:         << job->getPolarTop()->ShellInfoStr() << flush;
src/libctp/calculators/qmmm.h:    job->getPolarTop()->PrintPDB(job->getTag()+"_QM0_MM1_MM2.pdb");
src/libctp/calculators/qmmm.h:    // INDUCTOR, QM RUNNER, QM-MM MACHINE
src/libctp/calculators/qmmm.h:    xind.setLog(thread->getLogger());
src/libctp/calculators/qmmm.h:    machine.setLog(thread->getLogger());
src/libctp/calculators/qmmm.h:    this->LockCout();
src/libctp/calculators/qmmm.h:    cout << *thread->getLogger();
src/libctp/calculators/qmmm.h:    this->UnlockCout();
src/libctp/calculators/qmmm.h:    job->setInfoLine();
src/libctp/calculators/qmmm.h:    job->getPolarTop()->~PolarTop();
src/libctp/fragment.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/fragment.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/fragment.cc:         : _id(stencil->getId()), _name(stencil->getName()+"_ghost"),
src/libctp/fragment.cc:           _top(NULL), _mol(NULL), _rotateQM2MD(stencil->getRotQM2MD()),
src/libctp/fragment.cc:           _CoQM(stencil->getCoQM()), _CoMD(stencil->getCoMD()),
src/libctp/fragment.cc:           _trihedron(stencil->getTrihedron()) {
src/libctp/fragment.cc:    for (ait = stencil->Atoms().begin();
src/libctp/fragment.cc:         ait < stencil->Atoms().end();
src/libctp/fragment.cc:        this->AddAtom(newAtom);
src/libctp/fragment.cc:    for (atmit = this->Atoms().begin();
src/libctp/fragment.cc:          atmit < this->Atoms().end();
src/libctp/fragment.cc:    for (pit = this->PolarSites().begin();
src/libctp/fragment.cc:            pit < this->PolarSites().end();
src/libctp/fragment.cc:    atom->setFragment(this);
src/libctp/fragment.cc:    _weights.push_back( atom->getWeight() );
src/libctp/fragment.cc:    pole->setFragment(this);
src/libctp/fragment.cc:    pole->setFragment(this);
src/libctp/fragment.cc:        vec dir = (*ait)->getQMPos() - refPos;
src/libctp/fragment.cc:        (*ait)->setQMPos(pos);        
src/libctp/fragment.cc:        (*ait)->TranslateBy(shift);
src/libctp/fragment.cc:        vec newQMPos = _rotateQM2MD*( (*ait)->getQMPos() - this->_CoQM )
src/libctp/fragment.cc:                      + this->_CoMD;
src/libctp/fragment.cc:        (*ait)->setQMPos(newQMPos);
src/libctp/fragment.cc:            pos += _atoms[i]->getPos() * _atoms[i]->getWeight();
src/libctp/fragment.cc:            pos += _atoms[i]->getQMPos() * _atoms[i]->getWeight();
src/libctp/fragment.cc:        totWeight += _atoms[i]->getWeight();
src/libctp/fragment.cc:        vector< Atom* > ::iterator ait = this->Atoms().begin();
src/libctp/fragment.cc:            if (ait == this->Atoms().end()) { break; }
src/libctp/fragment.cc:            if (atm->getWeight() == 0.0) { continue; }
src/libctp/fragment.cc:            if ( ! (*ait)->HasQMPart() ) { continue; }
src/libctp/fragment.cc:            if ( (*ait)->getQMId() == _trihedron[0] ||
src/libctp/fragment.cc:                 (*ait)->getQMId() == _trihedron[1] ||
src/libctp/fragment.cc:                 (*ait)->getQMId() == _trihedron[2] ) {
src/libctp/fragment.cc:        vec r1MD = trihedron[0]->getPos();
src/libctp/fragment.cc:        vec r2MD = trihedron[1]->getPos();
src/libctp/fragment.cc:        vec r3MD = trihedron[2]->getPos();
src/libctp/fragment.cc:        vec r1QM = trihedron[0]->getQMPos();
src/libctp/fragment.cc:        vec r2QM = trihedron[1]->getQMPos();
src/libctp/fragment.cc:        vec r3QM = trihedron[2]->getQMPos();
src/libctp/fragment.cc:        xMD = r2MD - r1MD;
src/libctp/fragment.cc:        yMD = r3MD - r1MD;
src/libctp/fragment.cc:        xQM = r2QM - r1QM;
src/libctp/fragment.cc:        yQM = r3QM - r1QM;
src/libctp/fragment.cc:        vec r1MD = trihedron[0]->getPos();
src/libctp/fragment.cc:        vec r2MD = trihedron[1]->getPos();
src/libctp/fragment.cc:        vec r1QM = trihedron[0]->getQMPos();
src/libctp/fragment.cc:        vec r2QM = trihedron[1]->getQMPos();
src/libctp/fragment.cc:        xMD = r2MD - r1MD;
src/libctp/fragment.cc:        xQM = r2QM - r1QM;
src/libctp/fragment.cc:        if      ( xMD.getX()*xMD.getX() < 1e-6 ) { yMDtmp = vec(1,0,0); }
src/libctp/fragment.cc:        else if ( xMD.getY()*xMD.getY() < 1e-6 ) { yMDtmp = vec(0,1,0); }
src/libctp/fragment.cc:        else if ( xMD.getZ()*xMD.getZ() < 1e-6 ) { yMDtmp = vec(0,0,1); }
src/libctp/fragment.cc:        if      ( xQM.getX()*xQM.getX() < 1e-6 ) { yQMtmp = vec(1,0,0); }
src/libctp/fragment.cc:        else if ( xQM.getY()*xQM.getY() < 1e-6 ) { yQMtmp = vec(0,1,0); }
src/libctp/fragment.cc:        else if ( xQM.getZ()*xQM.getZ() < 1e-6 ) { yQMtmp = vec(0,0,1); }
src/libctp/fragment.cc:           double tmp_z = 1/xMD.getZ() * (-xMD.getX()*tmp_x - xMD.getY()*tmp_y);
src/libctp/fragment.cc:           double tmp_z = 1/xQM.getZ() * (-xQM.getX()*tmp_x - xQM.getY()*tmp_y);
src/libctp/fragment.cc:             << this->getName();
src/libctp/fragment.cc:    this->calcPos("QM");
src/libctp/fragment.cc:    this->RotTransQM2MD();
src/libctp/fragment.cc:    _translateQM2MD = _CoMD - _CoQM;
src/libctp/libvotca_ctp.pc.in:Libs: -L${libdir} -lvotca_ctp
src/libctp/libvotca_ctp.pc.in:Libs.private: -lm
src/libctp/libvotca_ctp.pc.in:Cflags: -I${includedir}
src/libctp/molecule.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/molecule.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/molecule.cc:    for (segit = this->Segments().begin();
src/libctp/molecule.cc:            segit < this->Segments().end();
src/libctp/molecule.cc:    segment->setMolecule(this);
src/libctp/molecule.cc:    fragment->setMolecule(this);
src/libctp/molecule.cc:    atom->setMolecule(this);
src/libctp/molecule.cc:    while ( in.good() ) { // keep reading until end-of-file
src/libctp/molecule.cc:        //pAtom->setPos( position );                       
src/libctp/molecule.cc:         int id = (*atom)->getId();      
src/libctp/molecule.cc:         string name =  (*atom)->getName();
src/libctp/molecule.cc:         string resname = (*atom)->getResname();
src/libctp/molecule.cc:         int resnr = (*atom)->getResnr();
src/libctp/molecule.cc:         vec position = (*atom)->getPos();  
src/libctp/molecule.cc: 1 -  6        Record name     "ATOM  "                                            
src/libctp/molecule.cc: 7 - 11        Integer         Atom serial number.                   
src/libctp/molecule.cc:13 - 16        Atom            Atom name.                            
src/libctp/molecule.cc:18 - 20        Residue name    Residue name.                         
src/libctp/molecule.cc:23 - 26        Integer         Residue sequence number.              
src/libctp/molecule.cc:31 - 38        Real(8.3)       Orthogonal coordinates for X in Angstroms.                       
src/libctp/molecule.cc:39 - 46        Real(8.3)       Orthogonal coordinates for Y in Angstroms.                            
src/libctp/molecule.cc:47 - 54        Real(8.3)       Orthogonal coordinates for Z in Angstroms.                            
src/libctp/molecule.cc:55 - 60        Real(6.2)       Occupancy.                            
src/libctp/molecule.cc:61 - 66        Real(6.2)       Temperature factor (Default = 0.0).                   
src/libctp/molecule.cc:73 - 76        LString(4)      Segment identifier, left-justified.   
src/libctp/molecule.cc:77 - 78        LString(2)      Element symbol, right-justified.      
src/libctp/molecule.cc:79 - 80        LString(2)      Charge on the atom.       
src/libctp/polarsite.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/polarsite.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/polarsite.cc:    _pos = templ->getPos();
src/libctp/polarsite.cc:        _Qs[0] = templ->getQs(-1);
src/libctp/polarsite.cc:        _Qs[1] = templ->getQs(0);
src/libctp/polarsite.cc:        _Qs[2] = templ->getQs(1);
src/libctp/polarsite.cc:        _rank  = templ->_rank;
src/libctp/polarsite.cc:        _Ps    = templ->_Ps;
src/libctp/polarsite.cc:        _locX = templ->_locX;
src/libctp/polarsite.cc:        _locY = templ->_locY;
src/libctp/polarsite.cc:        _locZ = templ->_locZ;
src/libctp/polarsite.cc:        _top  = templ->_top;
src/libctp/polarsite.cc:        _seg  = templ->_seg;
src/libctp/polarsite.cc:        _frag = templ->_frag;
src/libctp/polarsite.cc:        _rank = templ->_rank; 
src/libctp/polarsite.cc:        _Qs   = templ->_Qs;
src/libctp/polarsite.cc:        _Ps   = templ->_Ps;
src/libctp/polarsite.cc:        _id   = templ->_id;
src/libctp/polarsite.cc:        _name = templ->_name;
src/libctp/polarsite.cc:    vec dir = _pos - refPos;
src/libctp/polarsite.cc:    for (int state = -1; state < 2; state++) {
src/libctp/polarsite.cc:            double Qxx = -0.5*_Qs[state+1][4] + 0.5*sqrt(3)*_Qs[state+1][7];
src/libctp/polarsite.cc:            double Qyy = -0.5*_Qs[state+1][4] - 0.5*sqrt(3)*_Qs[state+1][7];
src/libctp/polarsite.cc:            /* if (this->getId() == 1) {
src/libctp/polarsite.cc:                                          - Q_Global.get(1,1)); // Q22c
src/libctp/polarsite.cc:        Q1x = _Qs[idx][2];   // |-> NOTE: order z - x - y
src/libctp/polarsite.cc:        Q00 = _Qs[idx2][0] - _Qs[idx1][0];
src/libctp/polarsite.cc:        Q1z = _Qs[idx2][1] - _Qs[idx1][1];   // |
src/libctp/polarsite.cc:        Q1x = _Qs[idx2][2] - _Qs[idx1][2];   // |-> NOTE: order z - x - y
src/libctp/polarsite.cc:        Q1y = _Qs[idx2][3] - _Qs[idx1][3];   // |
src/libctp/polarsite.cc:        Q20  = _Qs[idx2][4] - _Qs[idx1][4];
src/libctp/polarsite.cc:        Q21c = _Qs[idx2][5] - _Qs[idx1][5];
src/libctp/polarsite.cc:        Q21s = _Qs[idx2][6] - _Qs[idx1][6];
src/libctp/polarsite.cc:        Q22c = _Qs[idx2][7] - _Qs[idx1][7];
src/libctp/polarsite.cc:        Q22s = _Qs[idx2][8] - _Qs[idx1][8];
src/libctp/polarsite.cc:    U1x = (1 - wSOR) * U1x + wSOR * ( - P1 * (FPx + FUx) ); // OVERRIDE
src/libctp/polarsite.cc:    U1y = (1 - wSOR) * U1y + wSOR * ( - P1 * (FPy + FUy) ); // OVERRIDE
src/libctp/polarsite.cc:    U1z = (1 - wSOR) * U1z + wSOR * ( - P1 * (FPz + FUz) ); // OVERRIDE
src/libctp/polarsite.cc:    U1x =  - P1 * FPx; // OVERRIDE
src/libctp/polarsite.cc:    U1y =  - P1 * FPy; // OVERRIDE
src/libctp/polarsite.cc:    U1z =  - P1 * FPz; // OVERRIDE
src/libctp/polarsite.cc:    vec dU = vec(U1x, U1y, U1z) - U1_Hist.back();
src/libctp/polarsite.cc:    fprintf(out, "%-2s %+4.9f %+4.9f %+4.9f \n",
src/libctp/polarsite.cc:            double Qxx = -0.5*_Qs[state+1][4] + 0.5*sqrt(3)*_Qs[state+1][7];
src/libctp/polarsite.cc:            double Qyy = -0.5*_Qs[state+1][4] - 0.5*sqrt(3)*_Qs[state+1][7];
src/libctp/polarsite.cc:        vec    B        = pos - 0.5 * a * dir_d;
src/libctp/polarsite.cc:        double qB       = - qA;
src/libctp/polarsite.cc:            vec D2 = pos - 0.5 * a * EIGEN.eigenvecs[0];
src/libctp/polarsite.cc:            vec E2 = pos - 0.5 * a * EIGEN.eigenvecs[1];
src/libctp/polarsite.cc:            vec F2 = pos - 0.5 * a * EIGEN.eigenvecs[2];
src/libctp/polarsite.cc:    cout << "MPOLE " << this->getId() << " " << this->getName()
src/libctp/polarsite.cc:    for (int i = -1; i < 2; ++i) {
src/libctp/polarsite.cc:        for (int j = 0; j < this->getQs(i).size(); j++) {
src/libctp/polarsite.cc:            cout << " " << this->getQs(i)[j];
src/libctp/polarsite.cc:    cout << "MPOLE " << this->getId() << " " << this->getName()
src/libctp/polarsite.cc:    int id = this->getId();
src/libctp/polarsite.cc:    string el = this->getName();
src/libctp/polarsite.cc:    vec position = this->getPos();
src/libctp/polarsite.cc:    for (int i = 0; i < this->U1_Hist.size(); ++i) {
src/libctp/polarsite.cc:    int id = this->getId() % 100000;
src/libctp/polarsite.cc:    string name =  this->getName();
src/libctp/polarsite.cc:    vec position = this->getPos() + shift;
src/libctp/polarsite.cc:         this->getQ00()
src/libctp/qmapplication.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/qmapplication.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/qmapplication.cc:    AddProgramOptions() ("first-frame,i", propt::value<int>()->default_value(1),
src/libctp/qmapplication.cc:    AddProgramOptions() ("nframes,n", propt::value<int>()->default_value(-1),
src/libctp/qmapplication.cc:    AddProgramOptions() ("nthreads,t", propt::value<int>()->default_value(1),
src/libctp/qmapplication.cc:    AddProgramOptions() ("save,s", propt::value<int>()->default_value(1),
src/libctp/qmapplication.cc:    int fframe = OptionsMap()["first-frame"].as<int>();
src/libctp/qmapplication.cc:    if (fframe-- == 0) throw runtime_error("ERROR: First frame is 0, counting "
src/libctp/qmapplication.cc:        cout << "... " << (*it)->Identify() << " ";
src/libctp/qmapplication.cc:        (*it)->setnThreads(nThreads);
src/libctp/qmapplication.cc:        (*it)->Initialize(&_top, &_options);        
src/libctp/qmapplication.cc:        cout << "... " << (*it)->Identify() << " " << flush;
src/libctp/qmapplication.cc:        (*it)->EvaluateFrame(&_top);
src/libctp/qmapplication.cc:        (*it)->EndEvaluate(&_top);
src/libctp/qmdatabase.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/qmdatabase.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/qmdatabase.cc:        "occPe      REAL DEFAULT -1,"
src/libctp/qmdatabase.cc:        "occPh      REAL DEFAULT -1)");
src/libctp/qmnblist.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/qmnblist.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/qmnblist.cc:    if (this->FindPair(seg1, seg2) != NULL) {
src/libctp/qmnblist.cc:    int id = this->size();
src/libctp/qmnblist.cc:    this->AddPair(pair);
src/libctp/qmnblist.cc:    for (nit = this->begin();
src/libctp/qmnblist.cc:         nit != this->end();
src/libctp/qmnblist.cc:        if (pair->HasGhost()) { ghost = 1; }
src/libctp/qmnblist.cc:                pair->getId(),
src/libctp/qmnblist.cc:                pair->first->getId(),
src/libctp/qmnblist.cc:                pair->second->getId(),
src/libctp/qmnblist.cc:                pair->Dist(),
src/libctp/qmnblist.cc:                0.0, // pair->getLambdaO(),
src/libctp/qmnblist.cc:                0.0, // pair->calcJeff2(),
src/libctp/qmnblist.cc:                0.0, // pair->getRate12(),
src/libctp/qmnblist.cc:                0.0 ); // pair->getRate21() );
src/libctp/qmpair.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/qmpair.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/qmpair.cc:    _top = seg1->getTopology();
src/libctp/qmpair.cc:    vec r1 = seg1->getPos();
src/libctp/qmpair.cc:    vec r2 = seg2->getPos();
src/libctp/qmpair.cc:    _R = _top->PbShortestConnect(r1, r2); // => _R points from 1 to 2
src/libctp/qmpair.cc:    if ( abs(r2 - r1 - _R) > 1e-8 ) {
src/libctp/qmpair.cc:        _ghost->TranslateBy(r1 - r2 + _R);
src/libctp/qmpair.cc:    return (state == -1) ? _lambdaO_e : _lambdaO_h;
src/libctp/qmpair.cc:    return (carrier == -1) ? _rate12_e : _rate12_h;
src/libctp/qmpair.cc:    return (carrier == -1) ? _rate21_e : _rate21_h;
src/libctp/qmpair.cc:    if (state == -1) {
src/libctp/qmpair.cc:    if (state == -1) {
src/libctp/qmpair.cc:    if (state == -1) {
src/libctp/qmpair.cc:    if (carrier == -1) {
src/libctp/qmpair.cc:    return (carrier == -1) ? _has_e : _has_h;
src/libctp/qmpair.cc:    if (state == -1) {
src/libctp/qmpair.cc:        this->_Js_e = Js;
src/libctp/qmpair.cc:        double Jeff2 = this->calcJeff2(state);
src/libctp/qmpair.cc:        this->_Js_h = Js;
src/libctp/qmpair.cc:        double Jeff2 = this->calcJeff2(state);
src/libctp/qmpair.cc:    if (state == -1) {
src/libctp/qmpair.cc:    if (state == -1) {
src/libctp/qmpair.cc:    this->first->WritePDB(pdb, "Atoms", "MD");
src/libctp/qmpair.cc:    this->second->WritePDB(pdb, "Atoms", "MD");
src/libctp/qmpair.cc:    if (this->HasGhost()) { this->_ghost->WritePDB(pdb, "Atoms", "MD"); }
src/libctp/qmpair.cc:    for (ait = Seg1PbCopy()->Atoms().begin();
src/libctp/qmpair.cc:         ait < Seg1PbCopy()->Atoms().end();
src/libctp/qmpair.cc:        if ((*ait)->HasQMPart()) {
src/libctp/qmpair.cc:    for (ait = Seg2PbCopy()->Atoms().begin();
src/libctp/qmpair.cc:         ait < Seg2PbCopy()->Atoms().end();
src/libctp/qmpair.cc:        if ((*ait)->HasQMPart()) {
src/libctp/qmpair.cc:    for (ait = Seg1PbCopy()->Atoms().begin();
src/libctp/qmpair.cc:         ait < Seg1PbCopy()->Atoms().end();
src/libctp/qmpair.cc:        if (!(*ait)->HasQMPart()) {
src/libctp/qmpair.cc:        vec     pos = (*ait)->getQMPos();
src/libctp/qmpair.cc:        string  name = (*ait)->getElement();
src/libctp/qmpair.cc:    for (ait = Seg2PbCopy()->Atoms().begin();
src/libctp/qmpair.cc:         ait < Seg2PbCopy()->Atoms().end();
src/libctp/qmpair.cc:        if (!(*ait)->HasQMPart()) {
src/libctp/qmpair.cc:        vec     pos = (*ait)->getQMPos();
src/libctp/qmpair.cc:        string  name = (*ait)->getElement();
src/libctp/segment.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/segment.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/segment.cc:        : _id(stencil->getId()),    _name(stencil->getName()+"_ghost"),
src/libctp/segment.cc:          _typ(stencil->getType()), _top(NULL), _mol(NULL),
src/libctp/segment.cc:          _CoM(stencil->getPos()),
src/libctp/segment.cc:    for (fit = stencil->Fragments().begin();
src/libctp/segment.cc:         fit < stencil->Fragments().end();
src/libctp/segment.cc:        this->AddFragment(newFrag);
src/libctp/segment.cc:        for (ait = newFrag->Atoms().begin();
src/libctp/segment.cc:             ait < newFrag->Atoms().end();
src/libctp/segment.cc:            this->AddAtom(*ait);
src/libctp/segment.cc:    for (fragit = this->Fragments().begin();
src/libctp/segment.cc:            fragit < this->Fragments().end();
src/libctp/segment.cc:        (*fit)->TranslateBy(shift);
src/libctp/segment.cc:    if (state == -1) {
src/libctp/segment.cc:    return (state == -1) ? _has_e : _has_h;
src/libctp/segment.cc:    if (e_h == -1) {
src/libctp/segment.cc:    return (e_h == -1) ? _occ_e : _occ_h;
src/libctp/segment.cc:    if (state == -1) {
src/libctp/segment.cc:    if (state == -1) {
src/libctp/segment.cc:    if (state == -1) {
src/libctp/segment.cc:    return (state == -1) ? _U_cC_nN_e : _U_cC_nN_h;
src/libctp/segment.cc:    return (state == -1) ? _U_nC_nN_e : _U_nC_nN_h;
src/libctp/segment.cc:    return (state == -1) ? _U_cN_cC_e : _U_cN_cC_h;
src/libctp/segment.cc:    return (state == -1) ? this->getEMpoles(state) + _U_cC_nN_e :
src/libctp/segment.cc:                           this->getEMpoles(state) + _U_cC_nN_h;
src/libctp/segment.cc:    return _eMpoles[state+1] - _eMpoles[1];
src/libctp/segment.cc:    fragment->setSegment(this);
src/libctp/segment.cc:    atom->setSegment(this);
src/libctp/segment.cc:    pole->setSegment(this);
src/libctp/segment.cc:    pole->setSegment(this);
src/libctp/segment.cc:        pos += _atoms[i]->getPos() * _atoms[i]->getWeight();
src/libctp/segment.cc:        totWeight += _atoms[i]->getWeight();
src/libctp/segment.cc:    if (this->getType()->canRigidify()) {
src/libctp/segment.cc:        for (fit = this->Fragments().begin();
src/libctp/segment.cc:                fit < this->Fragments().end();
src/libctp/segment.cc:                (*fit)->Rigidify();
src/libctp/segment.cc:         int id = (*frag)->getId();
src/libctp/segment.cc:         string name =  (*frag)->getName();
src/libctp/segment.cc:         string resname = (*frag)->getSegment()->getName();
src/libctp/segment.cc:         int resnr = (*frag)->getSegment()->getId();
src/libctp/segment.cc:         vec position = (*frag)->getPos();  
src/libctp/segment.cc:         int id = (*atm)->getId() % 100000;
src/libctp/segment.cc:         string name =  (*atm)->getName();
src/libctp/segment.cc:         string resname = (*atm)->getResname();
src/libctp/segment.cc:         int resnr = (*atm)->getResnr();
src/libctp/segment.cc:         if (tag2 == "MD")      { position = (*atm)->getPos(); }
src/libctp/segment.cc:         else if (tag2 == "QM") { position = (*atm)->getQMPos(); }
src/libctp/segment.cc:         if (tag2 == "QM" && (*atm)->HasQMPart() == false) { continue; }
src/libctp/segment.cc:         int id = (*pol)->getId() % 100000;
src/libctp/segment.cc:         string name =  (*pol)->getName();
src/libctp/segment.cc:         string resname = (*pol)->getFragment()->getName();
src/libctp/segment.cc:         int resnr = (*pol)->getFragment()->getId() % 10000;
src/libctp/segment.cc:         vec position = (*pol)->getPos();
src/libctp/segment.cc:         int id = (*pol)->getId() % 100000;
src/libctp/segment.cc:         string name =  (*pol)->getName();
src/libctp/segment.cc:         string resname = (*pol)->getFragment()->getName();
src/libctp/segment.cc:         int resnr = (*pol)->getFragment()->getId() % 10000;
src/libctp/segment.cc:         vec position = (*pol)->getPos();
src/libctp/segment.cc:                 (*pol)->getQ00()
src/libctp/segment.cc:        if ((*ait)->HasQMPart() == true) { ++qmatoms; }
src/libctp/segment.cc:        if ((*ait)->HasQMPart() == false) { continue; }
src/libctp/segment.cc:        vec     pos = (*ait)->getQMPos();
src/libctp/segment.cc:        if (!useQMPos) pos = (*ait)->getPos();
src/libctp/segment.cc:        string  name = (*ait)->getElement();
src/libctp/segmenttype.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/segmenttype.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/segmenttype.cc:        it_list_atoms_monomer->clear();
src/libctp/segmenttype.cc:        if (it_mon->size() != it_mon_weights->size())
src/libctp/segmenttype.cc:        for (it_at = it_mon->begin(), it_weight = it_mon_weights->begin();
src/libctp/segmenttype.cc:                it_at != it_mon->end(); ++it_at, ++it_weight) {
src/libctp/segmenttype.cc:        if (it_mon-> size() > 3) {
src/libctp/segmenttype.cc:            for (it_at = it_mon->begin(), it_weight = it_mon_weights->begin();
src/libctp/segmenttype.cc:                    it_at != it_mon->end(); ++it_at, ++it_weight) {
src/libctp/segmenttype.cc:                vec v = _intcoords.GetPos(*it_at) - com;
src/libctp/segmenttype.cc:            xprime = _intcoords.GetPos((list_atoms_monomer[count])[1]) - _intcoords.GetPos((list_atoms_monomer[count])[0]);
src/libctp/segmenttype.cc:            vec w = _intcoords.GetPos((list_atoms_monomer[count])[2]) - _intcoords.GetPos((list_atoms_monomer[count])[0]);
src/libctp/segmenttype.cc:                zprime = vec(0., 0., 0.) - zprime;
src/libctp/segmenttype.cc:            if (old_norm * (zprime) > 0.) zprime_orb = vec(0., 0., 0.) - zprime;
src/libctp/segmenttype.cc:        cout << "NUMBER OF atoms in the the fragment: " << it_monomers->size() << "displacement" << *it_pos <<
src/libctp/statesaversqlite.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/statesaversqlite.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/statesaversqlite.cc:    _current_frame = -1;
src/libctp/statesaversqlite.cc:    while(stmt->Step() != SQLITE_DONE) {
src/libctp/statesaversqlite.cc:        _frames.push_back(stmt->Column<int>(0));
src/libctp/statesaversqlite.cc:        _topIds.push_back(stmt->Column<int>(1));
src/libctp/statesaversqlite.cc:    bool hasAlready = this->HasTopology(_qmtop);
src/libctp/statesaversqlite.cc:        if (_qmtop->getDatabaseId() >= 0 ) {
src/libctp/statesaversqlite.cc:        _qmtop->setDatabaseId(_frames.size());
src/libctp/statesaversqlite.cc:        _topIds.push_back(_qmtop->getDatabaseId());
src/libctp/statesaversqlite.cc:    cout << "MD+QM topology ID " << _qmtop->getDatabaseId()
src/libctp/statesaversqlite.cc:         << " (step = " << _qmtop->getStep()
src/libctp/statesaversqlite.cc:         << ", time = " << _qmtop->getTime()
src/libctp/statesaversqlite.cc:    this->WriteMeta(hasAlready);
src/libctp/statesaversqlite.cc:    this->WriteMolecules(hasAlready);
src/libctp/statesaversqlite.cc:    this->WriteSegTypes(hasAlready);
src/libctp/statesaversqlite.cc:    this->WriteSegments(hasAlready);
src/libctp/statesaversqlite.cc:    this->WriteFragments(hasAlready);
src/libctp/statesaversqlite.cc:    this->WriteAtoms(hasAlready);
src/libctp/statesaversqlite.cc:    this->WritePairs(hasAlready);
src/libctp/statesaversqlite.cc:    stmt->Bind(1, _qmtop->getDatabaseId());
src/libctp/statesaversqlite.cc:    stmt->Bind(2, _qmtop->getTime());
src/libctp/statesaversqlite.cc:    stmt->Bind(3, _qmtop->getStep());
src/libctp/statesaversqlite.cc:            stmt->Bind(4+3*i+j, _qmtop->getBox().get(i,j));
src/libctp/statesaversqlite.cc:    if (_qmtop->canRigidify()) { canRigid = 1; }
src/libctp/statesaversqlite.cc:    stmt->Bind(13, canRigid);
src/libctp/statesaversqlite.cc:    stmt->InsertStep();
src/libctp/statesaversqlite.cc:    stmt->Bind(1, _qmtop->getDatabaseId());
src/libctp/statesaversqlite.cc:    for (mit = _qmtop->Molecules().begin();
src/libctp/statesaversqlite.cc:            mit < _qmtop->Molecules().end();
src/libctp/statesaversqlite.cc:        stmt->Bind(2, mol->getTopology()->getDatabaseId());
src/libctp/statesaversqlite.cc:        stmt->Bind(3, mol->getId());
src/libctp/statesaversqlite.cc:        stmt->Bind(4, mol->getName());
src/libctp/statesaversqlite.cc:        stmt->Bind(5, mol->getName());
src/libctp/statesaversqlite.cc:        stmt->InsertStep();
src/libctp/statesaversqlite.cc:        stmt->Reset();
src/libctp/statesaversqlite.cc:    for (typeit = _qmtop->SegmentTypes().begin();
src/libctp/statesaversqlite.cc:            typeit < _qmtop->SegmentTypes().end();
src/libctp/statesaversqlite.cc:            stmt->Bind(1, _qmtop->getDatabaseId());
src/libctp/statesaversqlite.cc:            stmt->Bind(2, type->getTopology()->getDatabaseId());
src/libctp/statesaversqlite.cc:            stmt->Bind(3, type->getId());
src/libctp/statesaversqlite.cc:            stmt->Bind(4, type->getName());
src/libctp/statesaversqlite.cc:            stmt->Bind(5, type->getBasisName());
src/libctp/statesaversqlite.cc:            stmt->Bind(6, type->getOrbitalsFile());            
src/libctp/statesaversqlite.cc:            // Process transporting-orbital numbers
src/libctp/statesaversqlite.cc:            // for (int i = 0; i < type->getTOrbNrs().size(); i++) {
src/libctp/statesaversqlite.cc:            //     int    nrInt = (type->getTOrbNrs())[i];
src/libctp/statesaversqlite.cc:            stmt->Bind(7, torbStr);
src/libctp/statesaversqlite.cc:            stmt->Bind(8, type->getQMCoordsFile());
src/libctp/statesaversqlite.cc:            if (type->canRigidify()) { canRigid = 1; }
src/libctp/statesaversqlite.cc:            stmt->Bind(9, canRigid);
src/libctp/statesaversqlite.cc:        stmt->InsertStep();
src/libctp/statesaversqlite.cc:        stmt->Reset();
src/libctp/statesaversqlite.cc:    for (sit = _qmtop->Segments().begin();
src/libctp/statesaversqlite.cc:            sit < _qmtop->Segments().end();
src/libctp/statesaversqlite.cc:            stmt->Bind(1, _qmtop->getDatabaseId());
src/libctp/statesaversqlite.cc:            stmt->Bind(2, seg->getTopology()->getDatabaseId());
src/libctp/statesaversqlite.cc:            stmt->Bind(3, seg->getId());
src/libctp/statesaversqlite.cc:            stmt->Bind(4, seg->getName());
src/libctp/statesaversqlite.cc:            stmt->Bind(5, seg->getType()->getId());
src/libctp/statesaversqlite.cc:            stmt->Bind(6, seg->getMolecule()->getId());
src/libctp/statesaversqlite.cc:            stmt->Bind(7, seg->getPos().getX());
src/libctp/statesaversqlite.cc:            stmt->Bind(8, seg->getPos().getY());
src/libctp/statesaversqlite.cc:            stmt->Bind(9, seg->getPos().getZ());
src/libctp/statesaversqlite.cc:            int has_e = (seg->hasState(-1)) ? 1 : 0;
src/libctp/statesaversqlite.cc:            int has_h = (seg->hasState(+1)) ? 1 : 0;
src/libctp/statesaversqlite.cc:            stmt->Bind(1, seg->getU_nC_nN(-1));
src/libctp/statesaversqlite.cc:            stmt->Bind(2, seg->getU_nC_nN(+1));
src/libctp/statesaversqlite.cc:            stmt->Bind(3, seg->getU_cN_cC(-1));
src/libctp/statesaversqlite.cc:            stmt->Bind(4, seg->getU_cN_cC(+1));
src/libctp/statesaversqlite.cc:            stmt->Bind(5, seg->getU_cC_nN(-1));
src/libctp/statesaversqlite.cc:            stmt->Bind(6, seg->getU_cC_nN(+1));
src/libctp/statesaversqlite.cc:            stmt->Bind(7, seg->getEMpoles(-1));
src/libctp/statesaversqlite.cc:            stmt->Bind(8, seg->getEMpoles(0));
src/libctp/statesaversqlite.cc:            stmt->Bind(9, seg->getEMpoles(1));
src/libctp/statesaversqlite.cc:            stmt->Bind(10,seg->getOcc(-1));
src/libctp/statesaversqlite.cc:            stmt->Bind(11,seg->getOcc(+1));
src/libctp/statesaversqlite.cc:            stmt->Bind(12,has_e);
src/libctp/statesaversqlite.cc:            stmt->Bind(13,has_h);
src/libctp/statesaversqlite.cc:            stmt->Bind(14, _qmtop->getDatabaseId());
src/libctp/statesaversqlite.cc:            stmt->Bind(15, seg->getId());
src/libctp/statesaversqlite.cc:        stmt->InsertStep();
src/libctp/statesaversqlite.cc:        stmt->Reset();
src/libctp/statesaversqlite.cc:    stmt->Bind(1, _qmtop->getDatabaseId());
src/libctp/statesaversqlite.cc:    for (fit = _qmtop->Fragments().begin();
src/libctp/statesaversqlite.cc:            fit < _qmtop->Fragments().end();
src/libctp/statesaversqlite.cc:        stmt->Bind(2, frag->getTopology()->getDatabaseId());
src/libctp/statesaversqlite.cc:        stmt->Bind(3, frag->getId());
src/libctp/statesaversqlite.cc:        stmt->Bind(4, frag->getName());
src/libctp/statesaversqlite.cc:        stmt->Bind(5, frag->getName());
src/libctp/statesaversqlite.cc:        stmt->Bind(6, frag->getMolecule()->getId());
src/libctp/statesaversqlite.cc:        stmt->Bind(7, frag->getSegment()->getId());
src/libctp/statesaversqlite.cc:        stmt->Bind(8, frag->getPos().getX());
src/libctp/statesaversqlite.cc:        stmt->Bind(9, frag->getPos().getY());
src/libctp/statesaversqlite.cc:        stmt->Bind(10,frag->getPos().getZ());
src/libctp/statesaversqlite.cc:        stmt->Bind(11,frag->getSymmetry());
src/libctp/statesaversqlite.cc:        stmt->Bind(12,frag->getTrihedron()[0]);
src/libctp/statesaversqlite.cc:        stmt->Bind(13,frag->getTrihedron()[1]);
src/libctp/statesaversqlite.cc:        stmt->Bind(14,frag->getTrihedron()[2]);
src/libctp/statesaversqlite.cc:        stmt->InsertStep();
src/libctp/statesaversqlite.cc:        stmt->Reset();
src/libctp/statesaversqlite.cc:    stmt->Bind(1, _qmtop->getDatabaseId());
src/libctp/statesaversqlite.cc:    for (ait = _qmtop->Atoms().begin();
src/libctp/statesaversqlite.cc:            ait < _qmtop->Atoms().end();
src/libctp/statesaversqlite.cc:        stmt->Bind(2, atm->getTopology()->getDatabaseId());
src/libctp/statesaversqlite.cc:        stmt->Bind(3, atm->getId());
src/libctp/statesaversqlite.cc:        stmt->Bind(4, atm->getName());
src/libctp/statesaversqlite.cc:        stmt->Bind(5, atm->getName());
src/libctp/statesaversqlite.cc:        stmt->Bind(6, atm->getMolecule()->getId());
src/libctp/statesaversqlite.cc:        stmt->Bind(7, atm->getSegment()->getId());
src/libctp/statesaversqlite.cc:        stmt->Bind(8, atm->getFragment()->getId());
src/libctp/statesaversqlite.cc:        stmt->Bind(9, atm->getResnr());
src/libctp/statesaversqlite.cc:        stmt->Bind(10, atm->getResname());
src/libctp/statesaversqlite.cc:        stmt->Bind(11, atm->getPos().getX());
src/libctp/statesaversqlite.cc:        stmt->Bind(12, atm->getPos().getY());
src/libctp/statesaversqlite.cc:        stmt->Bind(13, atm->getPos().getZ());
src/libctp/statesaversqlite.cc:        stmt->Bind(14, atm->getWeight());
src/libctp/statesaversqlite.cc:        stmt->Bind(15, atm->getQMId());
src/libctp/statesaversqlite.cc:        stmt->Bind(16, atm->getQMPos().getX());
src/libctp/statesaversqlite.cc:        stmt->Bind(17, atm->getQMPos().getY());
src/libctp/statesaversqlite.cc:        stmt->Bind(18, atm->getQMPos().getZ());
src/libctp/statesaversqlite.cc:        stmt->Bind(19, atm->getElement());
src/libctp/statesaversqlite.cc:        stmt->InsertStep();
src/libctp/statesaversqlite.cc:        stmt->Reset();
src/libctp/statesaversqlite.cc:    if ( ! _qmtop->NBList().size() ) { return; }
src/libctp/statesaversqlite.cc:    stmt->Bind(1, _qmtop->getDatabaseId());
src/libctp/statesaversqlite.cc:    if (stmt->Step() == SQLITE_DONE) { 
src/libctp/statesaversqlite.cc:    for (nit = _qmtop->NBList().begin();
src/libctp/statesaversqlite.cc:         nit != _qmtop->NBList().end();
src/libctp/statesaversqlite.cc:            int has_e = (pair->isPathCarrier(-1)) ? 1 : 0;
src/libctp/statesaversqlite.cc:            int has_h = (pair->isPathCarrier(+1)) ? 1 : 0;
src/libctp/statesaversqlite.cc:            stmt->Bind(1, _qmtop->getDatabaseId());
src/libctp/statesaversqlite.cc:            stmt->Bind(2, pair->getTopology()->getDatabaseId());
src/libctp/statesaversqlite.cc:            stmt->Bind(3, pair->getId());
src/libctp/statesaversqlite.cc:            stmt->Bind(4, pair->Seg1PbCopy()->getId());
src/libctp/statesaversqlite.cc:            stmt->Bind(5, pair->Seg2PbCopy()->getId());
src/libctp/statesaversqlite.cc:            stmt->Bind(6, pair->R().getX());
src/libctp/statesaversqlite.cc:            stmt->Bind(7, pair->R().getY());
src/libctp/statesaversqlite.cc:            stmt->Bind(8, pair->R().getZ());
src/libctp/statesaversqlite.cc:            stmt->Bind(9, has_e);
src/libctp/statesaversqlite.cc:            stmt->Bind(10, has_h);
src/libctp/statesaversqlite.cc:            stmt->Bind(11, pair->getLambdaO(-1));
src/libctp/statesaversqlite.cc:            stmt->Bind(12, pair->getLambdaO(+1));
src/libctp/statesaversqlite.cc:            stmt->Bind(13, pair->getRate12(-1));
src/libctp/statesaversqlite.cc:            stmt->Bind(14, pair->getRate21(-1));
src/libctp/statesaversqlite.cc:            stmt->Bind(15, pair->getRate12(+1));
src/libctp/statesaversqlite.cc:            stmt->Bind(16, pair->getRate21(+1));
src/libctp/statesaversqlite.cc:            stmt->Bind(17, pair->getJeff2(-1));
src/libctp/statesaversqlite.cc:            stmt->Bind(18, pair->getJeff2(+1));
src/libctp/statesaversqlite.cc:            // cout << "\r " << pair->getId() << flush;
src/libctp/statesaversqlite.cc:                int has_e = (pair->isPathCarrier(-1)) ? 1 : 0;
src/libctp/statesaversqlite.cc:                int has_h = (pair->isPathCarrier(+1)) ? 1 : 0;
src/libctp/statesaversqlite.cc:                stmt->Bind(1, has_e);
src/libctp/statesaversqlite.cc:                stmt->Bind(2, has_h);
src/libctp/statesaversqlite.cc:                stmt->Bind(3, pair->getLambdaO(-1));
src/libctp/statesaversqlite.cc:                stmt->Bind(4, pair->getLambdaO(+1));
src/libctp/statesaversqlite.cc:                stmt->Bind(5, pair->getRate12(-1));
src/libctp/statesaversqlite.cc:                stmt->Bind(6, pair->getRate21(-1));
src/libctp/statesaversqlite.cc:                stmt->Bind(7, pair->getRate12(+1));
src/libctp/statesaversqlite.cc:                stmt->Bind(8, pair->getRate21(+1));
src/libctp/statesaversqlite.cc:                stmt->Bind(9, pair->getJeff2(-1));
src/libctp/statesaversqlite.cc:                stmt->Bind(10, pair->getJeff2(+1));
src/libctp/statesaversqlite.cc:                stmt->Bind(11, pair->getTopology()->getDatabaseId());
src/libctp/statesaversqlite.cc:                stmt->Bind(12, pair->getId());
src/libctp/statesaversqlite.cc:        stmt->InsertStep();
src/libctp/statesaversqlite.cc:        stmt->Reset();
src/libctp/statesaversqlite.cc:        this->ReadFrame();
src/libctp/statesaversqlite.cc:    _qmtop->CleanUp();    
src/libctp/statesaversqlite.cc:    _qmtop->setDatabaseId(topId);
src/libctp/statesaversqlite.cc:    this->ReadMeta(topId);
src/libctp/statesaversqlite.cc:    this->ReadMolecules(topId);
src/libctp/statesaversqlite.cc:    this->ReadSegTypes(topId);
src/libctp/statesaversqlite.cc:    this->ReadSegments(topId);
src/libctp/statesaversqlite.cc:    this->ReadFragments(topId);
src/libctp/statesaversqlite.cc:    this->ReadAtoms(topId);    
src/libctp/statesaversqlite.cc:    this->ReadPairs(topId);
src/libctp/statesaversqlite.cc:    stmt->Bind(1, topId);
src/libctp/statesaversqlite.cc:    if (stmt->Step() == SQLITE_DONE) {
src/libctp/statesaversqlite.cc:    _qmtop->setTime(stmt->Column<double>(0));
src/libctp/statesaversqlite.cc:    _qmtop->setStep(stmt->Column<int>(1));
src/libctp/statesaversqlite.cc:            boxv.set(i, j, stmt->Column<double>(2+3*i+j));
src/libctp/statesaversqlite.cc:    _qmtop->setBox(boxv);
src/libctp/statesaversqlite.cc:    _qmtop->setCanRigidify(stmt->Column<int>(11));
src/libctp/statesaversqlite.cc:    stmt->Bind(1, topId);
src/libctp/statesaversqlite.cc:    while (stmt->Step() != SQLITE_DONE) {
src/libctp/statesaversqlite.cc:        Molecule *mol = _qmtop->AddMolecule(stmt->Column<string>(0));
src/libctp/statesaversqlite.cc:    stmt->Bind(1, topId);
src/libctp/statesaversqlite.cc:    while (stmt->Step() != SQLITE_DONE) {
src/libctp/statesaversqlite.cc:        SegmentType *type = _qmtop->AddSegmentType(stmt->Column<string>(0));
src/libctp/statesaversqlite.cc:        type->setBasisName(stmt->Column<string>(1));
src/libctp/statesaversqlite.cc:        type->setOrbitalsFile(stmt->Column<string>(2));
src/libctp/statesaversqlite.cc:        type->setQMCoordsFile(stmt->Column<string>(4));
src/libctp/statesaversqlite.cc:        // Tokenizer toker(stmt->Column<string>(3), ":");
src/libctp/statesaversqlite.cc:        // type->setTOrbNrs(orbNrsInts);
src/libctp/statesaversqlite.cc:        int canRigidify = stmt->Column<int>(5);
src/libctp/statesaversqlite.cc:        type->setCanRigidify(canRigidify);
src/libctp/statesaversqlite.cc:    stmt->Bind(1, topId);
src/libctp/statesaversqlite.cc:    while (stmt->Step() != SQLITE_DONE) {
src/libctp/statesaversqlite.cc:        string  name = stmt->Column<string>(0);
src/libctp/statesaversqlite.cc:        int     type = stmt->Column<int>(1);
src/libctp/statesaversqlite.cc:        int     mId  = stmt->Column<int>(2);
src/libctp/statesaversqlite.cc:        double  X    = stmt->Column<double>(3);
src/libctp/statesaversqlite.cc:        double  Y    = stmt->Column<double>(4);
src/libctp/statesaversqlite.cc:        double  Z    = stmt->Column<double>(5);
src/libctp/statesaversqlite.cc:        double  l1   = stmt->Column<double>(6);
src/libctp/statesaversqlite.cc:        double  l2   = stmt->Column<double>(7);
src/libctp/statesaversqlite.cc:        double  l3   = stmt->Column<double>(8);
src/libctp/statesaversqlite.cc:        double  l4   = stmt->Column<double>(9);
src/libctp/statesaversqlite.cc:        double  e1   = stmt->Column<double>(10);
src/libctp/statesaversqlite.cc:        double  e2   = stmt->Column<double>(11);
src/libctp/statesaversqlite.cc:        double  e3   = stmt->Column<double>(12);
src/libctp/statesaversqlite.cc:        double  e4   = stmt->Column<double>(13);
src/libctp/statesaversqlite.cc:        double  e5   = stmt->Column<double>(14);
src/libctp/statesaversqlite.cc:        double  o1   = stmt->Column<double>(15);
src/libctp/statesaversqlite.cc:        double  o2   = stmt->Column<double>(16);
src/libctp/statesaversqlite.cc:        int     he   = stmt->Column<int>(17);
src/libctp/statesaversqlite.cc:        int     hh   = stmt->Column<int>(18);
src/libctp/statesaversqlite.cc:        Segment *seg = _qmtop->AddSegment(name);
src/libctp/statesaversqlite.cc:        seg->setMolecule(_qmtop->getMolecule(mId));
src/libctp/statesaversqlite.cc:        seg->setType(_qmtop->getSegmentType(type));
src/libctp/statesaversqlite.cc:        seg->setPos(vec(X, Y, Z));
src/libctp/statesaversqlite.cc:        seg->setU_nC_nN(l1, -1);
src/libctp/statesaversqlite.cc:        seg->setU_nC_nN(l2, +1);
src/libctp/statesaversqlite.cc:        seg->setU_cN_cC(l3, -1);
src/libctp/statesaversqlite.cc:        seg->setU_cN_cC(l4, +1);
src/libctp/statesaversqlite.cc:        seg->setU_cC_nN(e1, -1);
src/libctp/statesaversqlite.cc:        seg->setU_cC_nN(e2, +1);
src/libctp/statesaversqlite.cc:        seg->setEMpoles(-1, e3);
src/libctp/statesaversqlite.cc:        seg->setEMpoles(0, e4);
src/libctp/statesaversqlite.cc:        seg->setEMpoles(1, e5);
src/libctp/statesaversqlite.cc:        seg->setOcc(o1, -1);
src/libctp/statesaversqlite.cc:        seg->setOcc(o2, +1);
src/libctp/statesaversqlite.cc:        seg->setHasState(has_e, -1);
src/libctp/statesaversqlite.cc:        seg->setHasState(has_h, +1);
src/libctp/statesaversqlite.cc:        seg->getMolecule()->AddSegment(seg);
src/libctp/statesaversqlite.cc:    stmt->Bind(1, topId);
src/libctp/statesaversqlite.cc:    while (stmt->Step() != SQLITE_DONE) {
src/libctp/statesaversqlite.cc:        string  name    = stmt->Column<string>(0);
src/libctp/statesaversqlite.cc:        int     molid   = stmt->Column<int>(1);
src/libctp/statesaversqlite.cc:        int     segid   = stmt->Column<int>(2);
src/libctp/statesaversqlite.cc:        double  posX    = stmt->Column<double>(3);
src/libctp/statesaversqlite.cc:        double  posY    = stmt->Column<double>(4);
src/libctp/statesaversqlite.cc:        double  posZ    = stmt->Column<double>(5);
src/libctp/statesaversqlite.cc:        int     symm    = stmt->Column<int>(6);
src/libctp/statesaversqlite.cc:        int     leg1    = stmt->Column<int>(7);
src/libctp/statesaversqlite.cc:        int     leg2    = stmt->Column<int>(8);
src/libctp/statesaversqlite.cc:        int     leg3    = stmt->Column<int>(9);
src/libctp/statesaversqlite.cc:        Fragment *frag = _qmtop->AddFragment(name);
src/libctp/statesaversqlite.cc:        frag->setSegment(_qmtop->getSegment(segid));
src/libctp/statesaversqlite.cc:        frag->setMolecule(_qmtop->getMolecule(molid));
src/libctp/statesaversqlite.cc:        frag->setPos(vec(posX, posY, posZ));
src/libctp/statesaversqlite.cc:        frag->setSymmetry(symm);
src/libctp/statesaversqlite.cc:        frag->setTrihedron(trihedron);
src/libctp/statesaversqlite.cc:        frag->getSegment()->AddFragment(frag);
src/libctp/statesaversqlite.cc:        frag->getMolecule()->AddFragment(frag);
src/libctp/statesaversqlite.cc:    stmt->Bind(1, topId);
src/libctp/statesaversqlite.cc:    while (stmt->Step() != SQLITE_DONE) {
src/libctp/statesaversqlite.cc:        string  name = stmt->Column<string>(0);
src/libctp/statesaversqlite.cc:        int     molid = stmt->Column<int>(1);
src/libctp/statesaversqlite.cc:        int     segid = stmt->Column<int>(2);
src/libctp/statesaversqlite.cc:        int     fragid = stmt->Column<int>(3);
src/libctp/statesaversqlite.cc:        int     resnr = stmt->Column<int>(4);
src/libctp/statesaversqlite.cc:        string  resname = stmt->Column<string>(5);
src/libctp/statesaversqlite.cc:        double  posX = stmt->Column<double>(6);
src/libctp/statesaversqlite.cc:        double  posY = stmt->Column<double>(7);
src/libctp/statesaversqlite.cc:        double  posZ = stmt->Column<double>(8);
src/libctp/statesaversqlite.cc:        double  weight = stmt->Column<double>(9);
src/libctp/statesaversqlite.cc:        int     qmid = stmt->Column<double>(10);
src/libctp/statesaversqlite.cc:        double  qmPosX = stmt->Column<double>(11);
src/libctp/statesaversqlite.cc:        double  qmPosY = stmt->Column<double>(12);
src/libctp/statesaversqlite.cc:        double  qmPosZ = stmt->Column<double>(13);
src/libctp/statesaversqlite.cc:        string  element = stmt->Column<string>(14);
src/libctp/statesaversqlite.cc:        Atom *atm = _qmtop->AddAtom(name);
src/libctp/statesaversqlite.cc:        atm->setWeight(weight);
src/libctp/statesaversqlite.cc:        atm->setQMPart(qmid, vec(qmPosX,qmPosY,qmPosZ));
src/libctp/statesaversqlite.cc:        atm->setElement(element);
src/libctp/statesaversqlite.cc:        atm->setPos( vec(posX, posY, posZ) );
src/libctp/statesaversqlite.cc:        atm->setFragment(_qmtop->getFragment(fragid));
src/libctp/statesaversqlite.cc:        atm->setSegment(_qmtop->getSegment(segid));
src/libctp/statesaversqlite.cc:        atm->setMolecule(_qmtop->getMolecule(molid));
src/libctp/statesaversqlite.cc:        atm->getFragment()->AddAtom(atm);
src/libctp/statesaversqlite.cc:        atm->getSegment()->AddAtom(atm);
src/libctp/statesaversqlite.cc:        atm->getMolecule()->AddAtom(atm);
src/libctp/statesaversqlite.cc:        atm->setResnr(resnr);
src/libctp/statesaversqlite.cc:        atm->setResname(resname);  
src/libctp/statesaversqlite.cc:    stmt->Bind(1, topId);
src/libctp/statesaversqlite.cc:    while (stmt->Step() != SQLITE_DONE) {
src/libctp/statesaversqlite.cc:        int     s1  = stmt->Column<int>(0);
src/libctp/statesaversqlite.cc:        int     s2  = stmt->Column<int>(1);
src/libctp/statesaversqlite.cc:        int     he  = stmt->Column<int>(2);
src/libctp/statesaversqlite.cc:        int     hh  = stmt->Column<int>(3);
src/libctp/statesaversqlite.cc:        double  l1  = stmt->Column<double>(4);
src/libctp/statesaversqlite.cc:        double  l2  = stmt->Column<double>(5);
src/libctp/statesaversqlite.cc:        double  r1  = stmt->Column<double>(6);
src/libctp/statesaversqlite.cc:        double  r2  = stmt->Column<double>(7);
src/libctp/statesaversqlite.cc:        double  r3  = stmt->Column<double>(8);
src/libctp/statesaversqlite.cc:        double  r4  = stmt->Column<double>(9);
src/libctp/statesaversqlite.cc:        double  je  = stmt->Column<double>(10);
src/libctp/statesaversqlite.cc:        double  jh  = stmt->Column<double>(11);
src/libctp/statesaversqlite.cc:        QMPair *newPair = _qmtop->NBList().Add(_qmtop->getSegment(s1),
src/libctp/statesaversqlite.cc:                                                _qmtop->getSegment(s2));
src/libctp/statesaversqlite.cc:        newPair->setIsPathCarrier(has_e, -1);
src/libctp/statesaversqlite.cc:        newPair->setIsPathCarrier(has_h, +1);
src/libctp/statesaversqlite.cc:        newPair->setLambdaO(l1, -1);
src/libctp/statesaversqlite.cc:        newPair->setLambdaO(l2, +1);
src/libctp/statesaversqlite.cc:        newPair->setRate12(r1, -1);
src/libctp/statesaversqlite.cc:        newPair->setRate21(r2, -1);
src/libctp/statesaversqlite.cc:        newPair->setRate12(r3, +1);
src/libctp/statesaversqlite.cc:        newPair->setRate21(r4, +1);
src/libctp/statesaversqlite.cc:        newPair->setJeff2(je, -1);
src/libctp/statesaversqlite.cc:        newPair->setJeff2(jh, +1);
src/libctp/statesaversqlite.cc:    while (stmt->Step() != SQLITE_DONE) {
src/libctp/statesaversqlite.cc:        if ( stmt->Column<int>(0) == top->getDatabaseId() ) { return true; }
src/libctp/statesaversqlite.cc:    cout << "Reading file " << this->_sqlfile << ": Found " << _frames.size()
src/libctp/topology.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/topology.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/topology.cc:Topology::Topology() : _db_id(-1), _hasPb(0), 
src/libctp/topology.cc:// Clean-Up, Destruct    //
src/libctp/topology.cc:    fragment->setTopology(this);
src/libctp/topology.cc:    segment->setTopology(this);
src/libctp/topology.cc:    atom->setTopology(this);
src/libctp/topology.cc:    pole->setTopology(this);
src/libctp/topology.cc:    pole->setTopology(this);
src/libctp/topology.cc:    molecule->setTopology(this);
src/libctp/topology.cc:    segType->setTopology(this);
src/libctp/topology.cc:    _bc->setBox(box);
src/libctp/topology.cc:               "Using open-box boundary conditions. " << endl;
src/libctp/topology.cc:    return _bc->BCShortestConnection(r1, r2);
src/libctp/topology.cc:             (*sit)->Rigidify();
src/libctp/topology.cc:        if (this->NBList().size() > 0) {
src/libctp/topology.cc:        //   the ghost - very much deconnected from its originator - does not,
src/libctp/topology.cc:        //   either. Therefore it should not be forgotten here. --- A way out
src/libctp/topology.cc:            QMNBList &nblist = this->NBList();
src/libctp/topology.cc:                if (qmpair->HasGhost()) {
src/libctp/topology.cc:                    qmpair->Seg2PbCopy()->Rigidify();
src/libctp/topology.cc:        cout << "Periodic Box:        "  << this->getBox().get(0,0)
src/libctp/topology.cc:                                << " "   << this->getBox().get(0,1)
src/libctp/topology.cc:                                << " "   << this->getBox().get(0,2)
src/libctp/topology.cc:                                << " | " << this->getBox().get(1,0)
src/libctp/topology.cc:                                << " "   << this->getBox().get(1,1)
src/libctp/topology.cc:                                << " "   << this->getBox().get(1,2)
src/libctp/topology.cc:                                << " | " << this->getBox().get(2,0)
src/libctp/topology.cc:                                << " "   << this->getBox().get(2,1)
src/libctp/topology.cc:                                << " "   << this->getBox().get(2,2)
src/libctp/topology.cc:        cout << "Database ID:         " << this->getDatabaseId() << endl;
src/libctp/topology.cc:        cout << "Step number:         " << this->getStep() << endl;
src/libctp/topology.cc:        cout << "Time:                " << this->getTime() << endl;
src/libctp/topology.cc:        cout << "# Molecules          " << this->Molecules().size() << endl;
src/libctp/topology.cc:        cout << "# Segments           " << this->Segments().size() << endl;
src/libctp/topology.cc:        cout << "# Fragments          " << this->Fragments().size() << endl;
src/libctp/topology.cc:        cout << "# Atoms              " << this->Atoms().size() << endl;
src/libctp/topology.cc:        cout << "# Pairs              " << this->NBList().size() << endl;
src/libctp/topology.cc:    fprintf(out, "Topology Database ID %3d \n", this->getDatabaseId());
src/libctp/topology.cc:            this->getBox().get(0,0),
src/libctp/topology.cc:            this->getBox().get(0,1),
src/libctp/topology.cc:            this->getBox().get(0,2),
src/libctp/topology.cc:            this->getBox().get(1,0),
src/libctp/topology.cc:            this->getBox().get(1,1),
src/libctp/topology.cc:            this->getBox().get(1,2),
src/libctp/topology.cc:            this->getBox().get(2,0),
src/libctp/topology.cc:            this->getBox().get(2,1),
src/libctp/topology.cc:            this->getBox().get(2,2) );
src/libctp/topology.cc:    fprintf(out, "\tStep number %7d \n", this->getStep());
src/libctp/topology.cc:    fprintf(out, "\tTime        %2.4f \n", this->getTime());
src/libctp/topology.cc:    fprintf(out, "\t# Molecules %7d \n", this->Molecules().size());
src/libctp/topology.cc:    fprintf(out, "\t# Segments  %7d \n", this->Segments().size());
src/libctp/topology.cc:    fprintf(out, "\t# Atoms     %7d \n", this->Atoms().size());
src/libctp/topology.cc:    fprintf(out, "\t# Pairs     %7d \n", this->NBList().size());
src/libctp/topology.cc:         int id = (*seg)->getId();
src/libctp/topology.cc:         string name =  (*seg)->getName();
src/libctp/topology.cc:         string resname = (*seg)->getMolecule()->getName();
src/libctp/topology.cc:         int resnr = (*seg)->getMolecule()->getId();
src/libctp/topology.cc:         vec position = (*seg)->getPos();
src/libctp/version.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/version.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/version.cc:     //do nothing - this is just that we have a c function for autotools
src/libctp/version_nb.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/version_nb.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/version_nb.cc:         << "\t------ VOTCA ( http://www.votca.org ) ------\n"
src/libctp/CMakeFiles/hgversion.dir/cmake_clean.cmake:# Per-language clean rules from dependency scanning.
src/libctp/CMakeFiles/hgversion.dir/build.make:RM = /usr/bin/cmake -E remove -f
src/libctp/CMakeFiles/hgversion.dir/build.make:# The top-level source directory on which CMake was run.
src/libctp/CMakeFiles/hgversion.dir/build.make:# The top-level build directory on which CMake was run.
src/libctp/CMakeFiles/hgversion.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/cmake -DTOP_SOURCE_DIR="/people/thnfs/homes/melnyk/votca/src/ctp" -P /people/thnfs/homes/melnyk/votca/src/ctp/CMakeModules/hgversion.cmake
src/libctp/CMakeFiles/hgversion.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && $(CMAKE_COMMAND) -P CMakeFiles/hgversion.dir/cmake_clean.cmake
src/libctp/CMakeFiles/hgversion.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/CMakeFiles/hgversion.dir/DependInfo.cmake --color=$(COLOR)
src/libctp/CMakeFiles/votca_ctp.dir/cmake_clean.cmake:# Per-language clean rules from dependency scanning.
src/libctp/CMakeFiles/votca_ctp.dir/link.txt:/usr/bin/c++  -fPIC    -shared -Wl,-soname,libvotca_ctp.so -o libvotca_ctp.so CMakeFiles/votca_ctp.dir/apolarsite.cc.o CMakeFiles/votca_ctp.dir/calculatorfactory.cc.o CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.o CMakeFiles/votca_ctp.dir/calculators/eimport.cc.o CMakeFiles/votca_ctp.dir/calculators/einternal.cc.o CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.o CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.o CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.o CMakeFiles/votca_ctp.dir/calculators/iimport.cc.o CMakeFiles/votca_ctp.dir/calculators/izindo.cc.o CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.o CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.o CMakeFiles/votca_ctp.dir/calculators/rates.cc.o CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.o CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.o CMakeFiles/votca_ctp.dir/calculators/tdump.cc.o CMakeFiles/votca_ctp.dir/calculators/idft.cc.o CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.o CMakeFiles/votca_ctp.dir/fragment.cc.o CMakeFiles/votca_ctp.dir/molecule.cc.o CMakeFiles/votca_ctp.dir/polarsite.cc.o CMakeFiles/votca_ctp.dir/qmapplication.cc.o CMakeFiles/votca_ctp.dir/qmcalculator.cc.o CMakeFiles/votca_ctp.dir/qmdatabase.cc.o CMakeFiles/votca_ctp.dir/qmnblist.cc.o CMakeFiles/votca_ctp.dir/qmpair.cc.o CMakeFiles/votca_ctp.dir/segment.cc.o CMakeFiles/votca_ctp.dir/statesaversqlite.cc.o CMakeFiles/votca_ctp.dir/topology.cc.o CMakeFiles/votca_ctp.dir/version.cc.o CMakeFiles/votca_ctp.dir/gaussian.cc.o CMakeFiles/votca_ctp.dir/orbitals.cc.o CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.o CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.o CMakeFiles/votca_ctp.dir/polarseg.cc.o CMakeFiles/votca_ctp.dir/polartop.cc.o CMakeFiles/votca_ctp.dir/progressobserver.cc.o CMakeFiles/votca_ctp.dir/qmmachine.cc.o CMakeFiles/votca_ctp.dir/qmtool.cc.o CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.o CMakeFiles/votca_ctp.dir/toolfactory.cc.o CMakeFiles/votca_ctp.dir/xinductor.cc.o CMakeFiles/votca_ctp.dir/xinteractor.cc.o CMakeFiles/votca_ctp.dir/xjob.cc.o CMakeFiles/votca_ctp.dir/xmapper.cc.o /people/thnfs/homes/melnyk/votca/lib/libvotca_csg.so /people/thnfs/homes/melnyk/votca/lib/libvotca_moo.so /people/thnfs/homes/melnyk/votca/lib/libvotca_tools.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt -Wl,-rpath,/people/thnfs/homes/melnyk/votca/lib 
src/libctp/CMakeFiles/votca_ctp.dir/relink.txt:/usr/bin/c++  -fPIC    -shared -Wl,-soname,libvotca_ctp.so -o CMakeFiles/CMakeRelink.dir/libvotca_ctp.so CMakeFiles/votca_ctp.dir/apolarsite.cc.o CMakeFiles/votca_ctp.dir/calculatorfactory.cc.o CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.o CMakeFiles/votca_ctp.dir/calculators/eimport.cc.o CMakeFiles/votca_ctp.dir/calculators/einternal.cc.o CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.o CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.o CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.o CMakeFiles/votca_ctp.dir/calculators/iimport.cc.o CMakeFiles/votca_ctp.dir/calculators/izindo.cc.o CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.o CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.o CMakeFiles/votca_ctp.dir/calculators/rates.cc.o CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.o CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.o CMakeFiles/votca_ctp.dir/calculators/tdump.cc.o CMakeFiles/votca_ctp.dir/calculators/idft.cc.o CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.o CMakeFiles/votca_ctp.dir/fragment.cc.o CMakeFiles/votca_ctp.dir/molecule.cc.o CMakeFiles/votca_ctp.dir/polarsite.cc.o CMakeFiles/votca_ctp.dir/qmapplication.cc.o CMakeFiles/votca_ctp.dir/qmcalculator.cc.o CMakeFiles/votca_ctp.dir/qmdatabase.cc.o CMakeFiles/votca_ctp.dir/qmnblist.cc.o CMakeFiles/votca_ctp.dir/qmpair.cc.o CMakeFiles/votca_ctp.dir/segment.cc.o CMakeFiles/votca_ctp.dir/statesaversqlite.cc.o CMakeFiles/votca_ctp.dir/topology.cc.o CMakeFiles/votca_ctp.dir/version.cc.o CMakeFiles/votca_ctp.dir/gaussian.cc.o CMakeFiles/votca_ctp.dir/orbitals.cc.o CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.o CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.o CMakeFiles/votca_ctp.dir/polarseg.cc.o CMakeFiles/votca_ctp.dir/polartop.cc.o CMakeFiles/votca_ctp.dir/progressobserver.cc.o CMakeFiles/votca_ctp.dir/qmmachine.cc.o CMakeFiles/votca_ctp.dir/qmtool.cc.o CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.o CMakeFiles/votca_ctp.dir/toolfactory.cc.o CMakeFiles/votca_ctp.dir/xinductor.cc.o CMakeFiles/votca_ctp.dir/xinteractor.cc.o CMakeFiles/votca_ctp.dir/xjob.cc.o CMakeFiles/votca_ctp.dir/xmapper.cc.o /people/thnfs/homes/melnyk/votca/lib/libvotca_csg.so /people/thnfs/homes/melnyk/votca/lib/libvotca_moo.so /people/thnfs/homes/melnyk/votca/lib/libvotca_tools.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt -Wl,-rpath,/people/thnfs/homes/melnyk/votca/lib 
src/libctp/CMakeFiles/votca_ctp.dir/flags.make:CXX_FLAGS = -fPIC -I/people/thnfs/homes/melnyk/votca/src/ctp/include -I/people/thnfs/homes/melnyk/votca/include -I/people/thnfs/homes/melnyk/votca/src/ctp/src/libctp   
src/libctp/CMakeFiles/votca_ctp.dir/flags.make:CXX_DEFINES = -Dvotca_ctp_EXPORTS
src/libctp/CMakeFiles/votca_ctp.dir/build.make:RM = /usr/bin/cmake -E remove -f
src/libctp/CMakeFiles/votca_ctp.dir/build.make:# The top-level source directory on which CMake was run.
src/libctp/CMakeFiles/votca_ctp.dir/build.make:# The top-level build directory on which CMake was run.
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_1)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/apolarsite.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/apolarsite.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/apolarsite.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/apolarsite.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/apolarsite.cc > CMakeFiles/votca_ctp.dir/apolarsite.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/apolarsite.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/apolarsite.cc -o CMakeFiles/votca_ctp.dir/apolarsite.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/apolarsite.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_2)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculatorfactory.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculatorfactory.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculatorfactory.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculatorfactory.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculatorfactory.cc > CMakeFiles/votca_ctp.dir/calculatorfactory.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculatorfactory.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculatorfactory.cc -o CMakeFiles/votca_ctp.dir/calculatorfactory.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculatorfactory.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_3)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/eanalyze.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/eanalyze.cc > CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/eanalyze.cc -o CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_4)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/eimport.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/eimport.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/eimport.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/eimport.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/eimport.cc > CMakeFiles/votca_ctp.dir/calculators/eimport.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/eimport.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/eimport.cc -o CMakeFiles/votca_ctp.dir/calculators/eimport.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eimport.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_5)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/einternal.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/einternal.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/einternal.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/einternal.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/einternal.cc > CMakeFiles/votca_ctp.dir/calculators/einternal.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/einternal.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/einternal.cc -o CMakeFiles/votca_ctp.dir/calculators/einternal.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/einternal.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_6)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/emultipole_stdal.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/emultipole_stdal.cc > CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/emultipole_stdal.cc -o CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_7)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/eoutersphere.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/eoutersphere.cc > CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/eoutersphere.cc -o CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_8)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/ianalyze.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/ianalyze.cc > CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/ianalyze.cc -o CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_9)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/iimport.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/iimport.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/iimport.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/iimport.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/iimport.cc > CMakeFiles/votca_ctp.dir/calculators/iimport.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/iimport.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/iimport.cc -o CMakeFiles/votca_ctp.dir/calculators/iimport.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/iimport.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_10)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/izindo.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/izindo.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/izindo.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/izindo.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/izindo.cc > CMakeFiles/votca_ctp.dir/calculators/izindo.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/izindo.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/izindo.cc -o CMakeFiles/votca_ctp.dir/calculators/izindo.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/izindo.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_11)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/neighborlist.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/neighborlist.cc > CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/neighborlist.cc -o CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_12)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/pairdump.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/pairdump.cc > CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/pairdump.cc -o CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_13)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/rates.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/rates.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/rates.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/rates.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/rates.cc > CMakeFiles/votca_ctp.dir/calculators/rates.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/rates.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/rates.cc -o CMakeFiles/votca_ctp.dir/calculators/rates.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/rates.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_14)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/sandbox.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/sandbox.cc > CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/sandbox.cc -o CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_15)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/stateserver.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/stateserver.cc > CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/stateserver.cc -o CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_16)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/tdump.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/tdump.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/tdump.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/tdump.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/tdump.cc > CMakeFiles/votca_ctp.dir/calculators/tdump.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/tdump.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/tdump.cc -o CMakeFiles/votca_ctp.dir/calculators/tdump.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/tdump.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_17)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/idft.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/idft.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/idft.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/idft.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/idft.cc > CMakeFiles/votca_ctp.dir/calculators/idft.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/idft.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/idft.cc -o CMakeFiles/votca_ctp.dir/calculators/idft.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/idft.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_18)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/qmmm.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/qmmm.cc > CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/calculators/qmmm.cc -o CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_19)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/fragment.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/fragment.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/fragment.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/fragment.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/fragment.cc > CMakeFiles/votca_ctp.dir/fragment.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/fragment.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/fragment.cc -o CMakeFiles/votca_ctp.dir/fragment.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/fragment.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_20)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/molecule.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/molecule.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/molecule.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/molecule.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/molecule.cc > CMakeFiles/votca_ctp.dir/molecule.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/molecule.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/molecule.cc -o CMakeFiles/votca_ctp.dir/molecule.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/molecule.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_21)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/polarsite.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/polarsite.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/polarsite.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/polarsite.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/polarsite.cc > CMakeFiles/votca_ctp.dir/polarsite.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/polarsite.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/polarsite.cc -o CMakeFiles/votca_ctp.dir/polarsite.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polarsite.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_22)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/qmapplication.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/qmapplication.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmapplication.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/qmapplication.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmapplication.cc > CMakeFiles/votca_ctp.dir/qmapplication.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/qmapplication.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmapplication.cc -o CMakeFiles/votca_ctp.dir/qmapplication.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmapplication.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_23)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/qmcalculator.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/qmcalculator.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmcalculator.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/qmcalculator.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmcalculator.cc > CMakeFiles/votca_ctp.dir/qmcalculator.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/qmcalculator.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmcalculator.cc -o CMakeFiles/votca_ctp.dir/qmcalculator.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmcalculator.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_24)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/qmdatabase.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/qmdatabase.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmdatabase.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/qmdatabase.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmdatabase.cc > CMakeFiles/votca_ctp.dir/qmdatabase.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/qmdatabase.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmdatabase.cc -o CMakeFiles/votca_ctp.dir/qmdatabase.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmdatabase.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_25)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/qmnblist.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/qmnblist.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmnblist.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/qmnblist.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmnblist.cc > CMakeFiles/votca_ctp.dir/qmnblist.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/qmnblist.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmnblist.cc -o CMakeFiles/votca_ctp.dir/qmnblist.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmnblist.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_26)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/qmpair.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/qmpair.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmpair.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/qmpair.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmpair.cc > CMakeFiles/votca_ctp.dir/qmpair.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/qmpair.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmpair.cc -o CMakeFiles/votca_ctp.dir/qmpair.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmpair.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_27)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/segment.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/segment.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/segment.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/segment.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/segment.cc > CMakeFiles/votca_ctp.dir/segment.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/segment.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/segment.cc -o CMakeFiles/votca_ctp.dir/segment.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/segment.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_28)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/statesaversqlite.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/statesaversqlite.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/statesaversqlite.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/statesaversqlite.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/statesaversqlite.cc > CMakeFiles/votca_ctp.dir/statesaversqlite.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/statesaversqlite.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/statesaversqlite.cc -o CMakeFiles/votca_ctp.dir/statesaversqlite.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/statesaversqlite.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_29)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/topology.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/topology.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/topology.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/topology.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/topology.cc > CMakeFiles/votca_ctp.dir/topology.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/topology.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/topology.cc -o CMakeFiles/votca_ctp.dir/topology.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/topology.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_30)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/version.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/version.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/version.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/version.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/version.cc > CMakeFiles/votca_ctp.dir/version.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/version.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/version.cc -o CMakeFiles/votca_ctp.dir/version.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/version.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_31)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/gaussian.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/gaussian.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/gaussian.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/gaussian.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/gaussian.cc > CMakeFiles/votca_ctp.dir/gaussian.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/gaussian.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/gaussian.cc -o CMakeFiles/votca_ctp.dir/gaussian.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/gaussian.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_32)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/orbitals.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/orbitals.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/orbitals.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/orbitals.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/orbitals.cc > CMakeFiles/votca_ctp.dir/orbitals.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/orbitals.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/orbitals.cc -o CMakeFiles/votca_ctp.dir/orbitals.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/orbitals.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_33)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/parallelpaircalc.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/parallelpaircalc.cc > CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/parallelpaircalc.cc -o CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_34)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/parallelxjobcalc.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/parallelxjobcalc.cc > CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/parallelxjobcalc.cc -o CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_35)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/polarseg.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/polarseg.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/polarseg.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/polarseg.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/polarseg.cc > CMakeFiles/votca_ctp.dir/polarseg.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/polarseg.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/polarseg.cc -o CMakeFiles/votca_ctp.dir/polarseg.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polarseg.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_36)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/polartop.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/polartop.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/polartop.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/polartop.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/polartop.cc > CMakeFiles/votca_ctp.dir/polartop.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/polartop.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/polartop.cc -o CMakeFiles/votca_ctp.dir/polartop.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polartop.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_37)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/progressobserver.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/progressobserver.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/progressobserver.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/progressobserver.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/progressobserver.cc > CMakeFiles/votca_ctp.dir/progressobserver.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/progressobserver.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/progressobserver.cc -o CMakeFiles/votca_ctp.dir/progressobserver.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/progressobserver.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_38)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/qmmachine.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/qmmachine.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmmachine.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/qmmachine.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmmachine.cc > CMakeFiles/votca_ctp.dir/qmmachine.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/qmmachine.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmmachine.cc -o CMakeFiles/votca_ctp.dir/qmmachine.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmmachine.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_39)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/qmtool.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/qmtool.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmtool.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/qmtool.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmtool.cc > CMakeFiles/votca_ctp.dir/qmtool.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/qmtool.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmtool.cc -o CMakeFiles/votca_ctp.dir/qmtool.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmtool.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_40)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmtools/molpol.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmtools/molpol.cc > CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/qmtools/molpol.cc -o CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_41)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/toolfactory.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/toolfactory.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/toolfactory.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/toolfactory.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/toolfactory.cc > CMakeFiles/votca_ctp.dir/toolfactory.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/toolfactory.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/toolfactory.cc -o CMakeFiles/votca_ctp.dir/toolfactory.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/toolfactory.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_42)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/xinductor.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/xinductor.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xinductor.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/xinductor.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xinductor.cc > CMakeFiles/votca_ctp.dir/xinductor.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/xinductor.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xinductor.cc -o CMakeFiles/votca_ctp.dir/xinductor.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xinductor.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_43)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/xinteractor.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/xinteractor.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xinteractor.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/xinteractor.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xinteractor.cc > CMakeFiles/votca_ctp.dir/xinteractor.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/xinteractor.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xinteractor.cc -o CMakeFiles/votca_ctp.dir/xinteractor.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xinteractor.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_44)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/xjob.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/xjob.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xjob.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/xjob.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xjob.cc > CMakeFiles/votca_ctp.dir/xjob.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/xjob.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xjob.cc -o CMakeFiles/votca_ctp.dir/xjob.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xjob.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_45)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/libctp/CMakeFiles/votca_ctp.dir/xmapper.cc.o"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/votca_ctp.dir/xmapper.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xmapper.cc
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/votca_ctp.dir/xmapper.cc.i"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xmapper.cc > CMakeFiles/votca_ctp.dir/xmapper.cc.i
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/votca_ctp.dir/xmapper.cc.s"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/xmapper.cc -o CMakeFiles/votca_ctp.dir/xmapper.cc.s
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xmapper.cc.o.provides.build
src/libctp/CMakeFiles/votca_ctp.dir/build.make:src/libctp/libvotca_ctp.so: /usr/lib64/libboost_program_options-mt.so
src/libctp/CMakeFiles/votca_ctp.dir/build.make:src/libctp/libvotca_ctp.so: /usr/lib64/libboost_serialization-mt.so
src/libctp/CMakeFiles/votca_ctp.dir/build.make:src/libctp/libvotca_ctp.so: /usr/lib64/libboost_filesystem-mt.so
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX shared library libvotca_ctp.so"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/votca_ctp.dir/link.txt --verbose=$(VERBOSE)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:src/libctp/CMakeFiles/CMakeRelink.dir/libvotca_ctp.so: /usr/lib64/libboost_program_options-mt.so
src/libctp/CMakeFiles/votca_ctp.dir/build.make:src/libctp/CMakeFiles/CMakeRelink.dir/libvotca_ctp.so: /usr/lib64/libboost_serialization-mt.so
src/libctp/CMakeFiles/votca_ctp.dir/build.make:src/libctp/CMakeFiles/CMakeRelink.dir/libvotca_ctp.so: /usr/lib64/libboost_filesystem-mt.so
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX shared library CMakeFiles/CMakeRelink.dir/libvotca_ctp.so"
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/votca_ctp.dir/relink.txt --verbose=$(VERBOSE)
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp && $(CMAKE_COMMAND) -P CMakeFiles/votca_ctp.dir/cmake_clean.cmake
src/libctp/CMakeFiles/votca_ctp.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/CMakeFiles/votca_ctp.dir/DependInfo.cmake --color=$(COLOR)
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/CMakeFiles/votca_ctp.dir/CXX.includecache:-
src/libctp/votca_config.h:#define VERSION "1.3-dev"
src/libctp/libvotca_ctp.pc:Libs: -L${libdir} -lvotca_ctp
src/libctp/libvotca_ctp.pc:Libs.private: -lm
src/libctp/libvotca_ctp.pc:Cflags: -I${includedir}
src/libctp/Makefile:RM = /usr/bin/cmake -E remove -f
src/libctp/Makefile:# The top-level source directory on which CMake was run.
src/libctp/Makefile:# The top-level build directory on which CMake was run.
src/libctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
src/libctp/Makefile:	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
src/libctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
src/libctp/Makefile:	/usr/bin/cmake -P cmake_install.cmake
src/libctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
src/libctp/Makefile:	/usr/bin/cmake -P cmake_install.cmake
src/libctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
src/libctp/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
src/libctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
src/libctp/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
src/libctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
src/libctp/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
src/libctp/Makefile:	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles /people/thnfs/homes/melnyk/votca/src/ctp/src/libctp/CMakeFiles/progress.marks
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/libctp/all
src/libctp/Makefile:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/libctp/clean
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/libctp/preinstall
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/libctp/preinstall
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/libctp/CMakeFiles/hgversion.dir/rule
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/hgversion.dir/build.make src/libctp/CMakeFiles/hgversion.dir/build
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/libctp/CMakeFiles/votca_ctp.dir/rule
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/build
src/libctp/Makefile:# Manual pre-install relink rule for target.
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/libctp/CMakeFiles/votca_ctp.dir/preinstall
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/apolarsite.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/apolarsite.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/apolarsite.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculatorfactory.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculatorfactory.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculatorfactory.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eanalyze.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eimport.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eimport.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eimport.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/einternal.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/einternal.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/einternal.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/emultipole_stdal.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/eoutersphere.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/ianalyze.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/idft.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/idft.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/idft.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/iimport.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/iimport.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/iimport.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/izindo.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/izindo.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/izindo.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/neighborlist.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/pairdump.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/qmmm.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/rates.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/rates.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/rates.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/sandbox.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/stateserver.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/tdump.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/tdump.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/calculators/tdump.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/fragment.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/fragment.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/fragment.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/gaussian.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/gaussian.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/gaussian.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/molecule.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/molecule.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/molecule.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/orbitals.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/orbitals.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/orbitals.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/parallelpaircalc.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/parallelxjobcalc.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polarseg.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polarseg.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polarseg.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polarsite.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polarsite.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polarsite.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polartop.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polartop.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/polartop.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/progressobserver.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/progressobserver.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/progressobserver.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmapplication.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmapplication.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmapplication.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmcalculator.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmcalculator.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmcalculator.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmdatabase.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmdatabase.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmdatabase.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmmachine.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmmachine.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmmachine.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmnblist.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmnblist.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmnblist.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmpair.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmpair.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmpair.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmtool.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmtool.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmtool.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/qmtools/molpol.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/segment.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/segment.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/segment.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/statesaversqlite.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/statesaversqlite.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/statesaversqlite.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/toolfactory.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/toolfactory.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/toolfactory.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/topology.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/topology.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/topology.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/version.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/version.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/version.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xinductor.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xinductor.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xinductor.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xinteractor.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xinteractor.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xinteractor.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xjob.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xjob.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xjob.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xmapper.cc.o
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xmapper.cc.i
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/xmapper.cc.s
src/libctp/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
src/libctp/cmake_install.cmake:    STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
src/libctp/gaussian.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/gaussian.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/gaussian.cc:    string _name = opt->get(key+".name").as<string> ();
src/libctp/gaussian.cc:    _executable =       opt->get(key + ".executable").as<string> ();
src/libctp/gaussian.cc:    _charge =           opt->get(key + ".charge").as<int> ();
src/libctp/gaussian.cc:    _spin =             opt->get(key + ".spin").as<int> ();
src/libctp/gaussian.cc:    _options =          opt->get(key + ".options").as<string> ();
src/libctp/gaussian.cc:    _memory =           opt->get(key + ".memory").as<string> ();
src/libctp/gaussian.cc:    _threads =          opt->get(key + ".threads").as<int> ();
src/libctp/gaussian.cc:    _chk_file_name  =   opt->get(key + ".checkpoint").as<string> ();
src/libctp/gaussian.cc:    _scratch_dir =      opt->get(key + ".scratch").as<string> ();
src/libctp/gaussian.cc:    _cleanup =          opt->get(key + ".cleanup").as<string> ();
src/libctp/gaussian.cc:        _com_file << (*sit)->getName() << " ";
src/libctp/gaussian.cc:        _atoms = (*sit)-> Atoms();
src/libctp/gaussian.cc:            if ((*ait)->HasQMPart() == false) { continue; }
src/libctp/gaussian.cc:            vec     pos = (*ait)->getQMPos();
src/libctp/gaussian.cc:            string  name = (*ait)->getElement();
src/libctp/gaussian.cc:            orbitals_guess->SortEnergies( &_sort_index );
src/libctp/gaussian.cc:                double _energy = (orbitals_guess->_mo_energies)[*soi] ;
src/libctp/gaussian.cc:                ub::matrix_row< ub::matrix<double> > mr (orbitals_guess->_mo_coefficients, *soi);
src/libctp/gaussian.cc:    _shell_file << "mkdir -p " << _scratch_dir << endl;
src/libctp/gaussian.cc:    _basis_size = iter->second.size();
src/libctp/gaussian.cc:        if (iter->second.size() != _basis_size) {
src/libctp/gaussian.cc:    _orbitals->_basis_set_size = _basis_size;
src/libctp/gaussian.cc:    _orbitals->_has_basis_set_size = true;
src/libctp/gaussian.cc:    _orbitals->_has_mo_coefficients = true;
src/libctp/gaussian.cc:    _orbitals->_has_mo_energies = true;
src/libctp/gaussian.cc:   _orbitals->_mo_energies.resize( _levels );
src/libctp/gaussian.cc:   for(size_t i=0; i < _orbitals->_mo_energies.size(); i++) {
src/libctp/gaussian.cc:         _orbitals->_mo_energies[i] = _energies[ _level++ ];
src/libctp/gaussian.cc:   (_orbitals->_mo_coefficients).resize( _levels, _basis_size );     
src/libctp/gaussian.cc:   for(size_t i = 0; i < _orbitals->_mo_coefficients.size1(); i++) {
src/libctp/gaussian.cc:      for(size_t j = 0 ; j < _orbitals->_mo_coefficients.size2(); j++) {
src/libctp/gaussian.cc:         _orbitals->_mo_coefficients(i,j) = _coefficients[i+1][j];
src/libctp/gaussian.cc:            _orbitals->_number_of_electrons = _number_of_electrons ;
src/libctp/gaussian.cc:            _orbitals->_has_number_of_electrons = true;
src/libctp/gaussian.cc:            _orbitals->_basis_set_size = _basis_set_size ;
src/libctp/gaussian.cc:            _orbitals->_has_basis_set_size = true;
src/libctp/gaussian.cc:         * Alpha  occ.(virt.) eigenvalues -- e1 e2 e3 e4 e5
src/libctp/gaussian.cc:                boost::iter_split(stringList, _line, boost::first_finder("--"));
src/libctp/gaussian.cc:                //boost::iter_split(stringList, _line, boost::first_finder("--"));
src/libctp/gaussian.cc:                    _orbitals->_occupied_levels = _occupied_levels;
src/libctp/gaussian.cc:                    _orbitals->_unoccupied_levels = _unoccupied_levels;
src/libctp/gaussian.cc:                    _orbitals->_has_occupied_levels = true;
src/libctp/gaussian.cc:                    _orbitals->_has_unoccupied_levels = true;
src/libctp/gaussian.cc:            _orbitals->_has_overlap = true;
src/libctp/gaussian.cc:            (_orbitals->_overlap).resize( _basis_set_size );
src/libctp/gaussian.cc:            int _n_blocks = 1 + (( _basis_set_size - 1 ) / 5);
src/libctp/gaussian.cc:                        //_overlap( _i_index-1 , _j_index-1 ) = boost::lexical_cast<double>( _coefficient );
src/libctp/gaussian.cc:                        _orbitals->_overlap( _i_index-1 , _j_index-1 ) = boost::lexical_cast<double>( _coefficient );
src/libctp/gaussian.cc:                     if ( _orbitals->_has_atoms == false ) {
src/libctp/gaussian.cc:                         _orbitals->AddAtom( atom_type, 0, 0, 0, atom_charge );
src/libctp/gaussian.cc:                         QMAtom* pAtom = _orbitals->_atoms.at( atom_id - 1 );
src/libctp/gaussian.cc:                         pAtom->type = atom_type;
src/libctp/gaussian.cc:                         pAtom->charge = atom_charge;
src/libctp/gaussian.cc:                _orbitals->_has_atoms = true;
src/libctp/gaussian.cc:                double _z =  boost::lexical_cast<double>( *(--it_atom) );
src/libctp/gaussian.cc:                double _y =  boost::lexical_cast<double>( *(--it_atom) );
src/libctp/gaussian.cc:                double _x =  boost::lexical_cast<double>( *(--it_atom) );
src/libctp/gaussian.cc:                if ( _orbitals->_has_atoms == false ) {
src/libctp/gaussian.cc:                        _orbitals->AddAtom( _atom_type, _x, _y, _z );
src/libctp/gaussian.cc:                         QMAtom* pAtom = _orbitals->_atoms.at( aindex );
src/libctp/gaussian.cc:                         pAtom->type = _atom_type;
src/libctp/gaussian.cc:                         pAtom->x = _x;
src/libctp/gaussian.cc:                         pAtom->y = _y;
src/libctp/gaussian.cc:                         pAtom->z = _z;
src/libctp/gaussian.cc:            _orbitals->_qm_energy = _conv_Hrt_eV * boost::lexical_cast<double> ( energy[1] );
src/libctp/gaussian.cc:            LOG(logDEBUG, *_pLog) << "QM energy " << _orbitals->_qm_energy <<  endl;
src/libctp/gaussian.cc:            _orbitals->_has_atoms = true;
src/libctp/gaussian.cc:            _orbitals->_has_qm_energy = true;
src/libctp/gaussian.cc:         * Self-energy of external charges
src/libctp/gaussian.cc:            _orbitals->_has_self_energy = true;
src/libctp/gaussian.cc:            _orbitals->_self_energy = _conv_Hrt_eV * boost::lexical_cast<double> ( energy[1] );
src/libctp/gaussian.cc:            LOG(logDEBUG, *_pLog) << "Self energy " << _orbitals->_self_energy <<  endl;
src/libctp/gaussian.cc:    } // end of reading the file line-by-line
src/libctp/orbitals.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/orbitals.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/orbitals.cc:        // in all containers counters start with 0; real life - with 1
src/libctp/orbitals.cc:        // add the level itself - it is easier to loo over all levels later
src/libctp/orbitals.cc:            // in all containers counters start with 0; real life - with 1
src/libctp/orbitals.cc:            if ( abs(energy1 - energy2)*_conv_Hrt_eV < _energy_difference ) {
src/libctp/orbitals.cc:                if ( (it->second).size() > 1 ) {
src/libctp/orbitals.cc:                    std::cout << "... ... level  "<< it->first << " : ";
src/libctp/orbitals.cc:                    for (vector<int>::iterator lev = (it->second).begin(); lev != (it->second).end(); lev++)
src/libctp/orbitals.cc:    index->resize( _mo_energies.size() );
src/libctp/orbitals.cc:            for ( vector< int > ::iterator soi = index->begin(); soi != index->end(); ++soi ) {
src/libctp/orbitals.cc:                index->at(i) = i++;
src/libctp/orbitals.cc:    std::stable_sort(index->begin(), index->end(), vector_less< ub::vector<double> >( _mo_energies ));
src/libctp/parallelpaircalc.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/parallelpaircalc.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/parallelpaircalc.cc:    if (!top->isRigid()) {
src/libctp/parallelpaircalc.cc:        bool isRigid = top->Rigidify();
src/libctp/parallelpaircalc.cc:    this->InitSlotData(top);
src/libctp/parallelpaircalc.cc:    _nextPair = top->NBList().begin();
src/libctp/parallelpaircalc.cc:        pairOps[id]->Start();
src/libctp/parallelpaircalc.cc:        pairOps[id]->WaitDone();
src/libctp/parallelpaircalc.cc:    this->PostProcess(top);
src/libctp/parallelpaircalc.cc:    if (_nextPair == top->NBList().end()) {
src/libctp/parallelpaircalc.cc:        QMPair *qmpair = _master->RequestNextPair(_id, _top);
src/libctp/parallelpaircalc.cc:        else { this->_master->EvalPair(_top, qmpair, this); }
src/libctp/parallelxjobcalc.cc:    if (!top->isRigid()) {
src/libctp/parallelxjobcalc.cc:        bool isRigid = top->Rigidify();
src/libctp/parallelxjobcalc.cc:        _subthreads = (_nThreads - _XJobs.size()) / _XJobs.size() + 1;
src/libctp/parallelxjobcalc.cc:    // PRE-PROCESS (OVERWRITTEN IN CHILD OBJECT)
src/libctp/parallelxjobcalc.cc:    this->PreProcess(top);
src/libctp/parallelxjobcalc.cc:        jobOps[id]->InitData(top);
src/libctp/parallelxjobcalc.cc:        jobOps[id]->Start();
src/libctp/parallelxjobcalc.cc:        jobOps[id]->WaitDone();
src/libctp/parallelxjobcalc.cc:        cout << endl << *(jobOps[id]->getLogger()) << flush;
src/libctp/parallelxjobcalc.cc:    // POST-PROCESS (OVERWRITTEN IN CHILD OBJECT)
src/libctp/parallelxjobcalc.cc:    this->PostProcess(top);
src/libctp/parallelxjobcalc.cc:        _job = _master->_progObs->RequestNextJob(this);
src/libctp/parallelxjobcalc.cc:            this->_master->EvalJob(_top, _job, this); 
src/libctp/parallelxjobcalc.cc:            this->_master->_progObs->ReportJobDone(_job, this);
src/libctp/polarseg.cc:    this->CalcPos();
src/libctp/polarseg.cc:    for (int i = 0; i < this->size(); ++i) {        
src/libctp/polarseg.cc:        _pos += (*this)[i]->getPos();        
src/libctp/polarseg.cc:    _pos /= double(this->size());      
src/libctp/polarseg.cc:    for (int i = 0; i < this->size(); ++i) {
src/libctp/polarseg.cc:        Q += (*this)[i]->getQ00();
src/libctp/polarseg.cc:        (*this)[i]->Translate(shift);
src/libctp/polartop.cc:        vec shift = _top->PbShortestConnect(center, pseg->getPos())
src/libctp/polartop.cc:                         -(pseg->getPos() - center);
src/libctp/polartop.cc:        pseg->Translate(shift);        
src/libctp/polartop.cc:        vec shift = _top->PbShortestConnect(center, pseg->getPos())
src/libctp/polartop.cc:                         -(pseg->getPos() - center);        
src/libctp/polartop.cc:        pseg->Translate(shift);        
src/libctp/polartop.cc:        vec shift = _top->PbShortestConnect(center, pseg->getPos())
src/libctp/polartop.cc:                         -(pseg->getPos() - center);        
src/libctp/polartop.cc:        pseg->Translate(shift);        
src/libctp/polartop.cc:        for (pit = pseg->begin(); pit < pseg->end(); ++pit) {
src/libctp/polartop.cc:            (*pit)->WritePdbLine(out, "QM0");
src/libctp/polartop.cc:        for (pit = pseg->begin(); pit < pseg->end(); ++pit) {
src/libctp/polartop.cc:            (*pit)->WritePdbLine(out, "MM1");
src/libctp/polartop.cc:        for (pit = pseg->begin(); pit < pseg->end(); ++pit) {
src/libctp/polartop.cc:            (*pit)->WritePdbLine(out, "MM2");
src/libctp/polartop.cc:    this->PrintInduState(out, format, split_dpl, dpl_space);
src/libctp/polartop.cc:            pcount += (*sit)->size();
src/libctp/polartop.cc:            pcount += mult*(*sit)->size();
src/libctp/polartop.cc:            pcount += (*sit)->size();
src/libctp/polartop.cc:        for (pit = (*sit)->begin(); pit < (*sit)->end(); ++pit) {
src/libctp/polartop.cc:            (*pit)->WriteXyzLine(out, pb_shift, format);
src/libctp/polartop.cc:        for (pit = (*sit)->begin(); pit < (*sit)->end(); ++pit) {
src/libctp/polartop.cc:            (*pit)->WriteChkLine(out, pb_shift, split_dpl, format, dpl_space);
src/libctp/polartop.cc:        for (pit = (*sit)->begin(); pit < (*sit)->end(); ++pit) {
src/libctp/polartop.cc:            (*pit)->WriteChkLine(out, pb_shift, false, format, dpl_space);
src/libctp/progressobserver.cc:    LOG(logDEBUG,*(thread->getLogger())) << "Requesting next job" << flush;
src/libctp/progressobserver.cc:        LOG(logDEBUG,*(thread->getLogger())) << "Request: No more." << flush;
src/libctp/progressobserver.cc:        LOG(logDEBUG,*(thread->getLogger())) << "Request, so more: " << jobToProc->getId() << flush;
src/libctp/progressobserver.cc:    this->LockProgFile(thread);
src/libctp/progressobserver.cc:            LOG(logERROR,*(thread->getLogger())) << "Could not open file "
src/libctp/progressobserver.cc:        LOG(logDEBUG,*(thread->getLogger())) << "Created new file "
src/libctp/progressobserver.cc:        for (jit = _jobs->begin(); jit != _jobs->end(); ++jit) {
src/libctp/progressobserver.cc:        LOG(logERROR,*(thread->getLogger())) << "Could not open file "
src/libctp/progressobserver.cc:    LOG(logDEBUG,*(thread->getLogger())) << "Sync finished jobs " << flush;
src/libctp/progressobserver.cc:        atJobId = assigned.find(job->getId());
src/libctp/progressobserver.cc:        complete[atJobId->first] = WriteProgLine(job, thread, "COMPLETE");
src/libctp/progressobserver.cc:    // BACK-UP PROGRESS FILE
src/libctp/progressobserver.cc:    LOG(logDEBUG,*(thread->getLogger())) 
src/libctp/progressobserver.cc:        << "Back-up progress file for the contingency of a restart ..." << flush;
src/libctp/progressobserver.cc:        ofs << atJobId->second << endl;        
src/libctp/progressobserver.cc:        string modStr = atJobId->second;
src/libctp/progressobserver.cc:        ofs << atJobId->second << endl;        
src/libctp/progressobserver.cc:    LOG(logDEBUG,*(thread->getLogger())) << "Assign jobs from stack" << flush;
src/libctp/progressobserver.cc:        if (_metajit == _jobs->end()) break;        
src/libctp/progressobserver.cc:        atJobId = queueing.find((*_metajit)->getId());
src/libctp/progressobserver.cc:            assigned[atJobId->first] = WriteProgLine(*_metajit, thread, "ASSIGNED");
src/libctp/progressobserver.cc:    assert(jobCountMaps == _jobs->size());        
src/libctp/progressobserver.cc:    LOG(logDEBUG,*(thread->getLogger())) << "Update progress file ..." << flush;
src/libctp/progressobserver.cc:        ofs << atJobId->second << endl;        
src/libctp/progressobserver.cc:        ofs << atJobId->second << endl;        
src/libctp/progressobserver.cc:        ofs << atJobId->second << endl;        
src/libctp/progressobserver.cc:    this->ReleaseProgFile(thread);
src/libctp/progressobserver.cc://        LOG(logERROR,*(thread->getLogger())) << "Created new file "
src/libctp/progressobserver.cc://        LOG(logERROR,*(thread->getLogger())) << "Could not open file "
src/libctp/progressobserver.cc://        LOG(logERROR,*(thread->getLogger())) << "Created new file "
src/libctp/progressobserver.cc://        LOG(logERROR,*(thread->getLogger())) << "Could not open file "
src/libctp/progressobserver.cc://        if (_metajit == _jobs->end()) break;
src/libctp/progressobserver.cc://        if ( assignedId_line.count((*_metajit)->getId()) > 0 ) {
src/libctp/progressobserver.cc://        LOG(logERROR,*(thread->getLogger())) << "Could not open file "
src/libctp/progressobserver.cc:    _flock->lock();
src/libctp/progressobserver.cc:    LOG(logDEBUG,*(thread->getLogger()))
src/libctp/progressobserver.cc:    _flock->unlock();
src/libctp/progressobserver.cc:    LOG(logDEBUG,*(thread->getLogger()))
src/libctp/progressobserver.cc:    int   tid = thread->getId();
src/libctp/progressobserver.cc:        % job->getId() % status).str();
src/libctp/progressobserver.cc:        jobstr1 += (format("HOST=%2$-8s TIME=%3$s PID=%1$05d TID=... ")
src/libctp/progressobserver.cc:        // += job-specific 'assigned' line
src/libctp/progressobserver.cc:        jobstr1 += (format("HOST=%3$-8s TIME=%4$s PID=%1$05d TID=%2$03d ")
src/libctp/progressobserver.cc:        // += jobstr2 -> job-specific output line
src/libctp/progressobserver.cc:    LOG(logDEBUG,*(thread->getLogger())) << "Reporting job done." << flush;
src/libctp/progressobserver.cc:    int   tid = thread->getId();
src/libctp/progressobserver.cc:        % job->getId() % status).str();
src/libctp/progressobserver.cc:        jobstr1 += (format("HOST=%2$-8s TIME=%3$s PID=%1$05d TID=... ")
src/libctp/progressobserver.cc:        jobstr2 += (format("%1$5d %2$-10s ")
src/libctp/progressobserver.cc:            % job->getUserId() % job->getTag()).str();
src/libctp/progressobserver.cc:        jobstr1 += (format("HOST=%3$-8s TIME=%4$s PID=%1$05d TID=%2$03d ")
src/libctp/progressobserver.cc:        jobstr2 += job->getInfoLine();
src/libctp/qmmachine.cc:    if (opt->exists(key+".dR")) {
src/libctp/qmmachine.cc:        _crit_dR = opt->get(key+".dR").as<double>();
src/libctp/qmmachine.cc:    if (opt->exists(key+".dQ")) {
src/libctp/qmmachine.cc:        _crit_dQ = opt->get(key+".dQ").as<double>();
src/libctp/qmmachine.cc:    if (opt->exists(key+".dE_QM")) {
src/libctp/qmmachine.cc:        _crit_dE_QM = opt->get(key+".dE_QM").as<double>();
src/libctp/qmmachine.cc:    if (opt->exists(key+".dE_MM")) {
src/libctp/qmmachine.cc:        _crit_dE_MM = opt->get(key+".dE_MM").as<double>();
src/libctp/qmmachine.cc:    if (opt->exists(key+".max_iter")) {
src/libctp/qmmachine.cc:        _maxIter = opt->get(key+".max_iter").as<int>();
src/libctp/qmmachine.cc:    for (int i = 0; i < _job->getPolarTop()->QM0().size(); ++i) {
src/libctp/qmmachine.cc:        dQ += _job->getPolarTop()->QM0()[i]->CalcTotQ();
src/libctp/qmmachine.cc:    int spin = ( (chrg < 0) ? -chrg:chrg ) % 2 + 1;
src/libctp/qmmachine.cc:    string jobFolder = "xjob_" + boost::lexical_cast<string>(_job->getId())
src/libctp/qmmachine.cc:                     + "_" + _job->getTag();    
src/libctp/qmmachine.cc:    // SET ITERATION-TIME CONSTANTS
src/libctp/qmmachine.cc:    _qmpack->setCharge(chrg);
src/libctp/qmmachine.cc:    _qmpack->setSpin(spin);
src/libctp/qmmachine.cc:    _qmpack->setThreads(_subthreads);
src/libctp/qmmachine.cc:    if (iterCnt == iterMax-1 && !_isConverged) {
src/libctp/qmmachine.cc:    QMMIter *thisIter = this->CreateNewIter();
src/libctp/qmmachine.cc:    _xind->Evaluate(_job);
src/libctp/qmmachine.cc:    assert(_xind->hasConverged());
src/libctp/qmmachine.cc:    thisIter->setE_FM(_job->getEF00(), _job->getEF01(), _job->getEF02(),
src/libctp/qmmachine.cc:                      _job->getEF11(), _job->getEF12(), _job->getEM0(),
src/libctp/qmmachine.cc:                      _job->getEM1(),  _job->getEM2(),  _job->getETOT());
src/libctp/qmmachine.cc:    string comFile = _job->getTag() + ".com";
src/libctp/qmmachine.cc:    string logFile = _job->getTag() + ".log";
src/libctp/qmmachine.cc:    this->WriteQMPackInputFile(path_comFile, _qmpack, _job);
src/libctp/qmmachine.cc:    _qmpack->setRunDir(runFolder);
src/libctp/qmmachine.cc:    _qmpack->setInputFile(comFile);
src/libctp/qmmachine.cc:    // RUN HERE (OVERRIDE - COPY EXISTING LOG-FILE)
src/libctp/qmmachine.cc:    _qmpack->setLogFile(path_logFile);
src/libctp/qmmachine.cc:    // EXTRACT LOG-FILE INFOS TO ORBITALS
src/libctp/qmmachine.cc:    _qmpack->ParseLogFile(&orb_iter);
src/libctp/qmmachine.cc:    double energy_qm__ = energy_qmsf - energy___sf;
src/libctp/qmmachine.cc:    thisIter->setQMSF(energy_qm__, energy___sf);
src/libctp/qmmachine.cc:    _job->setEnergy_QMMM(thisIter->getQMEnergy(), thisIter->getSFEnergy(),
src/libctp/qmmachine.cc:                         thisIter->getQMMMEnergy());
src/libctp/qmmachine.cc:    thisIter->UpdatePosChrgFromQMAtoms(atoms, _job->getPolarTop()->QM0());
src/libctp/qmmachine.cc:        << format("Summary - iteration %1$d:") % (iterCnt+1) << flush;
src/libctp/qmmachine.cc:        << format("... E(QM)    = %1$+4.9e") % thisIter->getQMEnergy() << flush;
src/libctp/qmmachine.cc:        << format("... E(SF)    = %1$+4.9e") % thisIter->getSFEnergy() << flush;
src/libctp/qmmachine.cc:        << format("... E(FM)    = %1$+4.9e") % thisIter->getFMEnergy() << flush;
src/libctp/qmmachine.cc:        << format("... E(MM)    = %1$+4.9e") % thisIter->getMMEnergy() << flush;
src/libctp/qmmachine.cc:        << format("... E(QMMM)  = %1$+4.9e") % thisIter->getQMMMEnergy() << flush;
src/libctp/qmmachine.cc:        << format("... RMS(dR)  = %1$+4.9e") % thisIter->getRMSdR() << flush;
src/libctp/qmmachine.cc:        << format("... MS(dQ)   = %1$+4.9e") % thisIter->getRMSdQ() << flush;
src/libctp/qmmachine.cc:        << format("... SUM(dQ)  = %1$+4.9e") % thisIter->getSUMdQ() << flush;
src/libctp/qmmachine.cc:    this->_iters.push_back(newIter);
src/libctp/qmmachine.cc:    _qmpack->WriteInputHeader(out, job->getTag());
src/libctp/qmmachine.cc:    job->getPolarTop()->PrintInduState(out, _qmpack->getPackageName(), true, 1e-04);
src/libctp/qmmachine.cc:        QMMIter *iter_0 = _iters[_iters.size()-2];
src/libctp/qmmachine.cc:        QMMIter *iter_1 = _iters[_iters.size()-1];
src/libctp/qmmachine.cc:        double dR = iter_1->getRMSdR();
src/libctp/qmmachine.cc:        double dQ = iter_1->getRMSdQ();
src/libctp/qmmachine.cc:        double dE_QM = iter_1->getQMEnergy() - iter_0->getQMEnergy();
src/libctp/qmmachine.cc:        double dE_MM = iter_1->getMMEnergy() - iter_0->getMMEnergy();
src/libctp/qmmachine.cc:        for (int j = 0; j < pseg->size(); ++j, ++qac) {
src/libctp/qmmachine.cc:            vec upd_r = vec(qmatm->x, qmatm->y, qmatm->z);
src/libctp/qmmachine.cc:            double upd_Q00 = qmatm->charge;
src/libctp/qmmachine.cc:            vec old_r = aps->getPos();
src/libctp/qmmachine.cc:            double old_Q00 = aps->getQ00();
src/libctp/qmmachine.cc:            double dR = abs(upd_r - old_r);
src/libctp/qmmachine.cc:            double dQ00 = upd_Q00 - old_Q00;
src/libctp/qmmachine.cc:            aps->setPos(upd_r);
src/libctp/qmmachine.cc:            aps->setQ00(upd_Q00, 0);            
src/libctp/qmmachine.cc:    this->setdRdQ(dR_RMS, dQ_RMS, dQ_SUM);
src/libctp/qmtools/molpol.cc:    if (options->exists(key+".mps_input")) {
src/libctp/qmtools/molpol.cc:        _mps_input = options->get(key+".mps_input").as<string>();
src/libctp/qmtools/molpol.cc:    if (options->exists(key+".mps_output")) {
src/libctp/qmtools/molpol.cc:        _mps_output = options->get(key+".mps_output").as<string>();
src/libctp/qmtools/molpol.cc:    if (options->exists(key+".pol_output")) {
src/libctp/qmtools/molpol.cc:        _pol_output = options->get(key+".pol_output").as<string>();
src/libctp/qmtools/molpol.cc:    if ( options->exists(key+".expdamp") ) {
src/libctp/qmtools/molpol.cc:        _aDamp = options->get(key+".expdamp").as< double >();
src/libctp/qmtools/molpol.cc:    if ( options->exists(key+".wSOR") ) {
src/libctp/qmtools/molpol.cc:        _wSOR = options->get(key+".wSOR").as< float >();
src/libctp/qmtools/molpol.cc:    if ( options->exists(key+".maxiter") ) {
src/libctp/qmtools/molpol.cc:        _maxIter = options->get(key+".maxiter").as< int >();
src/libctp/qmtools/molpol.cc:    if ( options->exists(key+".tolerance") ) {
src/libctp/qmtools/molpol.cc:        _epsTol = options->get(key+".tolerance").as< double >();
src/libctp/qmtools/molpol.cc:    matrix pmol = this->CalculateMolPol(poles, true);
src/libctp/qmtools/molpol.cc:    //    (*pit)->PrintInfo(cout);
src/libctp/qmtools/molpol.cc:    double ayx, ayy, ayz;             // |-> Polarizability tensor
src/libctp/qmtools/molpol.cc:    double siteU1x, siteU1y, siteU1z; // |-> Molecular ind. dipole
src/libctp/qmtools/molpol.cc:    double extFx, extFy, extFz;       // |-> External applied field
src/libctp/qmtools/molpol.cc:    // External field in x-direction //
src/libctp/qmtools/molpol.cc:        (*pit)->FPx = extFx;
src/libctp/qmtools/molpol.cc:        (*pit)->FPy = extFy;
src/libctp/qmtools/molpol.cc:        (*pit)->FPz = extFz;
src/libctp/qmtools/molpol.cc:    int iter_x = this->SCF_Induce(poles);
src/libctp/qmtools/molpol.cc:        siteU1x += (*pit)->U1x;
src/libctp/qmtools/molpol.cc:        siteU1y += (*pit)->U1y;
src/libctp/qmtools/molpol.cc:        siteU1z += (*pit)->U1z;
src/libctp/qmtools/molpol.cc:    axx = - siteU1x / extFx;
src/libctp/qmtools/molpol.cc:    ayx = - siteU1y / extFx;
src/libctp/qmtools/molpol.cc:    azx = - siteU1z / extFx;
src/libctp/qmtools/molpol.cc:    // External field in y-direction //
src/libctp/qmtools/molpol.cc:        (*pit)->FPx = extFx;
src/libctp/qmtools/molpol.cc:        (*pit)->FPy = extFy;
src/libctp/qmtools/molpol.cc:        (*pit)->FPz = extFz;
src/libctp/qmtools/molpol.cc:    int iter_y = this->SCF_Induce(poles);
src/libctp/qmtools/molpol.cc:        siteU1x += (*pit)->U1x;
src/libctp/qmtools/molpol.cc:        siteU1y += (*pit)->U1y;
src/libctp/qmtools/molpol.cc:        siteU1z += (*pit)->U1z;
src/libctp/qmtools/molpol.cc:    axy = - siteU1x / extFy;
src/libctp/qmtools/molpol.cc:    ayy = - siteU1y / extFy;
src/libctp/qmtools/molpol.cc:    azy = - siteU1z / extFy;
src/libctp/qmtools/molpol.cc:    // External field in z-direction //
src/libctp/qmtools/molpol.cc:        (*pit)->FPx = extFx;
src/libctp/qmtools/molpol.cc:        (*pit)->FPy = extFy;
src/libctp/qmtools/molpol.cc:        (*pit)->FPz = extFz;
src/libctp/qmtools/molpol.cc:    int iter_z = this->SCF_Induce(poles);
src/libctp/qmtools/molpol.cc:        siteU1x += (*pit)->U1x;
src/libctp/qmtools/molpol.cc:        siteU1y += (*pit)->U1y;
src/libctp/qmtools/molpol.cc:        siteU1z += (*pit)->U1z;
src/libctp/qmtools/molpol.cc:    axz = - siteU1x / extFz;
src/libctp/qmtools/molpol.cc:    ayz = - siteU1y / extFz;
src/libctp/qmtools/molpol.cc:    azz = - siteU1z / extFz;
src/libctp/qmtools/molpol.cc:        SUM_alpha_x += (*pit)->Pxx;
src/libctp/qmtools/molpol.cc:        SUM_alpha_y += (*pit)->Pyy;
src/libctp/qmtools/molpol.cc:        SUM_alpha_z += (*pit)->Pzz;
src/libctp/qmtools/molpol.cc:        SUM_alpha_iso += (*pit)->getIsoP();
src/libctp/qmtools/molpol.cc:    int    maxIter  = this->_maxIter;
src/libctp/qmtools/molpol.cc:    double wSOR     = this->_wSOR;
src/libctp/qmtools/molpol.cc:    double eTOL     = this->_epsTol;
src/libctp/qmtools/molpol.cc:        (*pit1)->InduceDirect();
src/libctp/qmtools/molpol.cc:            (*pit1)->ResetFieldU();
src/libctp/qmtools/molpol.cc:        // Calculate higher-order induction field
src/libctp/qmtools/molpol.cc:            (*pit1)->Induce(wSOR);
src/libctp/qmtools/molpol.cc:        double maxdU = -1;
src/libctp/qmtools/molpol.cc:             double dU = (*pit1)->HistdU();
src/libctp/qmtools/molpol.cc:        else if (iter == maxIter - 1) {
src/libctp/qmtools/pdb2map.h:    _input_file = options->get("options.pdb2map.file").as<string> ();
src/libctp/qmtools/pdb2map.h:        string _recType    (*p,( 1-1),6); // str,  "ATOM", "HETATM"
src/libctp/qmtools/pdb2map.h:        string _atNum      (*p,( 7-1),6); // int,  Atom serial number
src/libctp/qmtools/pdb2map.h:        string _atName     (*p,(13-1),4); // str,  Atom name
src/libctp/qmtools/pdb2map.h:        string _atAltLoc   (*p,(17-1),1); // char, Alternate location indicator
src/libctp/qmtools/pdb2map.h:        string _resName    (*p,(18-1),4); // str,  Residue name
src/libctp/qmtools/pdb2map.h:        string _chainID    (*p,(22-1),1); // char, Chain identifier
src/libctp/qmtools/pdb2map.h:        string _resNum     (*p,(23-1),4); // int,  Residue sequence number
src/libctp/qmtools/pdb2map.h:        string _atICode    (*p,(27-1),1); // char, Code for insertion of res
src/libctp/qmtools/pdb2map.h:        string _x          (*p,(31-1),8); // float 8.3 ,x
src/libctp/qmtools/pdb2map.h:        string _y          (*p,(39-1),8); // float 8.3 ,y
src/libctp/qmtools/pdb2map.h:        string _z          (*p,(47-1),8); // float 8.3 ,z
src/libctp/qmtools/pdb2map.h:        string _atOccup    (*p,(55-1),6); // float  6.2, Occupancy
src/libctp/qmtools/pdb2map.h:        string _atTFactor  (*p,(61-1),6); // float  6.2, Temperature factor
src/libctp/qmtools/pdb2map.h:        string _segID      (*p,(73-1),4); // str, Segment identifier
src/libctp/qmtools/pdb2map.h:        string _atElement  (*p,(77-1),2); // str, Element symbol
src/libctp/qmtools/pdb2map.h:        string _atCharge   (*p,(79-1),2); // str, Charge on the atom
src/libctp/qmtools/pdb2map.h:        Atom *newAtom = _top->AddAtom(_atName);
src/libctp/qmtools/pdb2map.h~:    _input_file = options->get("options.pdb2map.file").as<string> ();
src/libctp/toolfactory.cc: *            Copyright 2009-2012 The VOTCA Development Team
src/libctp/toolfactory.cc: *              http://www.apache.org/licenses/LICENSE-2.0
src/libctp/xinductor.cc:    // QMM = [ QM0 --- MM1 ] --- MM2 = [ MM2 ]    
src/libctp/xinductor.cc:    _qm0 = job->getPolarTop()->QM0();
src/libctp/xinductor.cc:    _mm1 = job->getPolarTop()->MM1();
src/libctp/xinductor.cc:    _mm2 = job->getPolarTop()->MM2();    
src/libctp/xinductor.cc:    // (De-)polarize, charge to N //
src/libctp/xinductor.cc:    if (job->StartFromCPT()) {
src/libctp/xinductor.cc:        if (this->_maverick) {
src/libctp/xinductor.cc:        for (pit = (*sit)->begin(); pit < (*sit)->end(); ++pit) {
src/libctp/xinductor.cc:            (*pit)->Depolarize();
src/libctp/xinductor.cc:            (*pit)->Charge(0); // <- Not necessarily neutral state
src/libctp/xinductor.cc:        for (pit = (*sit)->begin(); pit < (*sit)->end(); ++pit) {
src/libctp/xinductor.cc:            (*pit)->Depolarize();
src/libctp/xinductor.cc:            (*pit)->Charge(0); // <- Not necessarily neutral state
src/libctp/xinductor.cc:    for (int id = 0; id < this->_subthreads; ++id) {
src/libctp/xinductor.cc:        newIndu->InitSpheres(&_qmm, &_mm2);
src/libctp/xinductor.cc:        newIndu->SetSwitch(1);
src/libctp/xinductor.cc:    this->InitChunks();
src/libctp/xinductor.cc:    if (this->_induce) iter      = this->Induce(job);
src/libctp/xinductor.cc:    if (this->_induce) E_state   = this->Energy(job);
src/libctp/xinductor.cc:    else               E_state   = this->EnergyStatic(job);
src/libctp/xinductor.cc:    job->setInduIter(iter);
src/libctp/xinductor.cc:    for (int id = 0; id < this->_subthreads; ++id) {
src/libctp/xinductor.cc:        _indus[id]->SetSwitch(1);
src/libctp/xinductor.cc:    double wSOR = this->_wSOR_N;
src/libctp/xinductor.cc:    double eTOL = this->_epsTol;
src/libctp/xinductor.cc:    int    maxI = this->_maxIter;
src/libctp/xinductor.cc:        double Q = (*sit1)->CalcTotQ();
src/libctp/xinductor.cc:            wSOR = this->_wSOR_C;
src/libctp/xinductor.cc:    // Intra-pair induction ...
src/libctp/xinductor.cc:    bool   induce_intra_pair = this->_induce_intra_pair;
src/libctp/xinductor.cc:    // Inter-site fields (arising from perm. m'poles) //
src/libctp/xinductor.cc:        // Intra-pair permanent induction field?
src/libctp/xinductor.cc:             if ( job->isInCenter((*sit1)->getId())
src/libctp/xinductor.cc:               && job->isInCenter((*sit2)->getId()) ) {
src/libctp/xinductor.cc:         for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:         for (pit2 = (*sit2)->begin(); pit2 < (*sit2)->end(); ++pit2) {
src/libctp/xinductor.cc:    // (Outer shell itself is treated as non-polarizable)
src/libctp/xinductor.cc:         for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:         for (pit2 = (*sit2)->begin(); pit2 < (*sit2)->end(); ++pit2) {
src/libctp/xinductor.cc:    // 1st-order induction //
src/libctp/xinductor.cc:    if (!job->StartFromCPT()) { // OVERRIDE
src/libctp/xinductor.cc:             for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:                 (*pit1)->InduceDirect();
src/libctp/xinductor.cc:    // Higher-order induction //
src/libctp/xinductor.cc:            for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:                (*pit1)->ResetFieldU();
src/libctp/xinductor.cc:        // Intra-site contribution to induction field
src/libctp/xinductor.cc:            for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:            for (pit2 = pit1 + 1;        pit2 < (*sit1)->end(); ++pit2) {
src/libctp/xinductor.cc:        // Inter-site contribution to induction field
src/libctp/xinductor.cc:        //    for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:        //    for (pit2 = (*sit2)->begin(); pit2 < (*sit2)->end(); ++pit2) {
src/libctp/xinductor.cc:        for (int id = 0; id < this->_subthreads; ++id) { 
src/libctp/xinductor.cc:            _indus[id]->Start();
src/libctp/xinductor.cc:        for (int id = 0; id < this->_subthreads; ++id) {
src/libctp/xinductor.cc:            _indus[id]->WaitDone();
src/libctp/xinductor.cc:        this->ClearTodoTable();
src/libctp/xinductor.cc:             for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:                 (*pit1)->Induce(wSOR);                                         
src/libctp/xinductor.cc:        double  maxdU           = -1;
src/libctp/xinductor.cc:             for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:                 double dU = (*pit1)->HistdU();
src/libctp/xinductor.cc:        else if (iter == maxI - 1) {
src/libctp/xinductor.cc:                 << job->getId() << " did not converge to precision: "
src/libctp/xinductor.cc:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;    
src/libctp/xinductor.cc:    // PAIR/SITE        <->        SPH1         <->          SPH2 = OUT       //
src/libctp/xinductor.cc:    for (int id = 0; id < this->_subthreads; ++id) {
src/libctp/xinductor.cc:        _indus[id]->SetSwitch(0);
src/libctp/xinductor.cc:    // Inter-site energy comprising central + first polarization shell //
src/libctp/xinductor.cc:    for (int id = 0; id < this->_subthreads; ++id) {
src/libctp/xinductor.cc:        _indus[id]->Start();
src/libctp/xinductor.cc:    for (int id = 0; id < this->_subthreads; ++id) {
src/libctp/xinductor.cc:        _indus[id]->WaitDone();
src/libctp/xinductor.cc:    for (int id = 0; id < this->_subthreads; ++id) {
src/libctp/xinductor.cc:        E_Pair_Pair += _indus[id]->GetEPairPair();
src/libctp/xinductor.cc:        E_Pair_Sph1 += _indus[id]->GetEPairSph1();
src/libctp/xinductor.cc:        E_Sph1_Sph1 += _indus[id]->GetESph1Sph1();
src/libctp/xinductor.cc:        eu_inter += _indus[id]->GetActor().getEU_INTER();
src/libctp/xinductor.cc:        eu_intra += _indus[id]->GetActor().getEU_INTRA();
src/libctp/xinductor.cc:        e_perm   += _indus[id]->GetActor().getEP();
src/libctp/xinductor.cc:        epp += _indus[id]->GetActor().getEPP();
src/libctp/xinductor.cc:        epu += _indus[id]->GetActor().getEPU();
src/libctp/xinductor.cc:        euu += _indus[id]->GetActor().getEUU();
src/libctp/xinductor.cc:        e_f_c_c             += _indus[id]->GetE_f_C_C();
src/libctp/xinductor.cc:        e_f_c_non_c         += _indus[id]->GetE_f_C_non_C();
src/libctp/xinductor.cc:        e_f_non_c_non_c     += _indus[id]->GetE_f_non_C_non_C();            
src/libctp/xinductor.cc:        e_m_c               += _indus[id]->GetE_m_C();
src/libctp/xinductor.cc:        e_m_non_c           += _indus[id]->GetE_m_non_C();
src/libctp/xinductor.cc:    this->ClearTodoTable(); 
src/libctp/xinductor.cc:    // Inter-site energy resulting from interaction with static shell  //
src/libctp/xinductor.cc:        for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:        for (pit2 = (*sit2)->begin(); pit2 < (*sit2)->end(); ++pit2) {
src/libctp/xinductor.cc:        for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:        for (pit2 = (*sit2)->begin(); pit2 < (*sit2)->end(); ++pit2) {
src/libctp/xinductor.cc:    // ... ... -> done in loop above, but need to summarize e_m_*
src/libctp/xinductor.cc:             << flush << "...      = (f,0-0) " << e_f_c_c          * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (f,0-1) " << e_f_c_non_c      * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (f,0-2) " << e_f_c_out        * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (f,1-1) " << e_f_non_c_non_c  * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (f,1-2) " << e_f_non_c_out    * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (m,-0-) " << e_m_c            * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (m,-1-) " << e_m_non_c        * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (m,-2-) " << e_m_out          * int2eV
src/libctp/xinductor.cc:    job->setEnergy(E_Tot            *int2eV,           
src/libctp/xinductor.cc:    job->setEnergy_PPUU(epp         *int2eV,
src/libctp/xinductor.cc:    job->setEnergy_f_m(e_f_c_c         *int2eV,
src/libctp/xinductor.cc:    double int2eV = 1/(4*M_PI*8.854187817e-12) * 1.602176487e-19 / 1.000e-9;
src/libctp/xinductor.cc:    // PAIR/SITE        <->        SPH1         <->          SPH2 = OUT       //
src/libctp/xinductor.cc:    // Interaction pair <-> inner cut-off, without intra-pair interaction //
src/libctp/xinductor.cc:        for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:        for (pit2 = (*sit2)->begin(); pit2 < (*sit2)->end(); ++pit2) {
src/libctp/xinductor.cc:    // Interaction pair <-> outer cut-off                                 //
src/libctp/xinductor.cc:        for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:        for (pit2 = (*sit2)->begin(); pit2 < (*sit2)->end(); ++pit2) {
src/libctp/xinductor.cc:    // Intra-pair interaction                                             //
src/libctp/xinductor.cc:        for (pit1 = (*sit1)->begin(); pit1 < (*sit1)->end(); ++pit1) {
src/libctp/xinductor.cc:        for (pit2 = (*sit2)->begin(); pit2 < (*sit2)->end(); ++pit2) {
src/libctp/xinductor.cc:    // ... ... -> done in loops above        
src/libctp/xinductor.cc:             << flush << "...      = (f,0-0) " << e_f_c_c          * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (f,0-1) " << e_f_c_non_c      * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (f,0-2) " << e_f_c_out        * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (f,1-1) " << e_f_non_c_non_c  * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (f,1-2) " << e_f_non_c_out    * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (m,-0-) " << e_m_c            * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (m,-1-) " << e_m_non_c        * int2eV
src/libctp/xinductor.cc:             << flush << "...      + (m,-2-) " << e_m_out          * int2eV
src/libctp/xinductor.cc:    job->setEnergy(E_Tot            *int2eV,           
src/libctp/xinductor.cc:    job->setEnergy_PPUU(epp         *int2eV,
src/libctp/xinductor.cc:    job->setEnergy_f_m(e_f_c_c         *int2eV,
src/libctp/xinductor.cc:        if ( opt->exists(key+".induce") ) {
src/libctp/xinductor.cc:            int induce = opt->get(key+".induce").as< int >();
src/libctp/xinductor.cc:        if ( opt->exists(key+".induce_intra_pair") ) {
src/libctp/xinductor.cc:            int induce = opt->get(key+".induce_intra_pair").as< int >();
src/libctp/xinductor.cc:        if ( opt->exists(key+".exp_damp") ) {
src/libctp/xinductor.cc:            _aDamp = opt->get(key+".exp_damp").as< double >();
src/libctp/xinductor.cc:        if ( opt->exists(key+".wSOR_N") ) {
src/libctp/xinductor.cc:            _wSOR_N = opt->get(key+".wSOR_N").as< float >();
src/libctp/xinductor.cc:        if ( opt->exists(key+".wSOR_C") ) {
src/libctp/xinductor.cc:            _wSOR_C = opt->get(key+".wSOR_C").as< float >();
src/libctp/xinductor.cc:        if ( opt->exists(key+".max_iter") ) {
src/libctp/xinductor.cc:            _maxIter = opt->get(key+".max_iter").as< int >();
src/libctp/xinductor.cc:        if ( opt->exists(key+".tolerance") ) {
src/libctp/xinductor.cc:            _epsTol = opt->get(key+".tolerance").as< double >();
src/libctp/xjob.cc:     this->CalcCenterPos();
src/libctp/xjob.cc:    setShellSizes(ptop->QM0().size(), ptop->MM1().size(), ptop->MM2().size());
src/libctp/xjob.cc:    else { refPt = _qmSegs[0]->getPos(); }
src/libctp/xjob.cc:        vec pbc_com = refPt + _top->PbShortestConnect(refPt, seg->getPos());
src/libctp/xjob.cc:        center += seg->Atoms().size() * pbc_com;
src/libctp/xjob.cc:        weight += seg->Atoms().size();
src/libctp/xjob.cc:        this->_isSegInCenter[seg->getId()] = true;
src/libctp/xjob.cc:   fprintf(out, "%5d %-20s  ",
src/libctp/xjob.cc:    string str0 = ( format("%1$5d %2$-10s ") 
src/libctp/xjob.cc:    return top->Segments();
src/libctp/xjob.cc:    return top->NBList();
src/libctp/xjob.cc:                Segment *seg = top->getSegment(segId);
src/libctp/xjob.cc:                if (seg->getName() != segName) {
src/libctp/xjob.cc:                            segId, seg->getName().c_str(), segName.c_str());
src/libctp/xjob.cc:            xjobs.back()->setUserId(jobUserId);
src/libctp/xmapper.cc:    this->CollectMapFromXML(xml_file);
src/libctp/xmapper.cc:    this->CollectSegMpsAlloc(alloc_table, top);
src/libctp/xmapper.cc:    this->CollectSitesFromMps(xjobs);
src/libctp/xmapper.cc:    // Load polar-site indices from XML //
src/libctp/xmapper.cc:    Property allocation; // <- Which polar sites are part of which fragment?
src/libctp/xmapper.cc:    /* --- MULTIPOLES.XML Structure ---
src/libctp/xmapper.cc:        string molName = (*molit)->get("name").as<string> ();
src/libctp/xmapper.cc:        list<Property *> segs = (*molit)->Select(key);
src/libctp/xmapper.cc:            string segName = (*segit)->get("name").as<string> ();
src/libctp/xmapper.cc:            if ( (*segit)->exists("map2md")) {
src/libctp/xmapper.cc:                int map2md = (*segit)->get("map2md").as<int>();
src/libctp/xmapper.cc:            list<Property *> frags = (*segit)->Select(key);
src/libctp/xmapper.cc:                string fragName = (*fragit)->get("name").as<string> ();
src/libctp/xmapper.cc:                string mpoles = (*fragit)->get("mpoles").as<string> ();
src/libctp/xmapper.cc:                if ((*fragit)->exists("localframe_mps")) {
src/libctp/xmapper.cc:                   trihedron_mps = (*fragit)->get("localframe_mps")
src/libctp/xmapper.cc:                   trihedron_mps = (*fragit)->get("localframe")
src/libctp/xmapper.cc:                if ((*fragit)->exists("weights_mps")) {
src/libctp/xmapper.cc:                   weights_mps = (*fragit)->get("weights_mps")
src/libctp/xmapper.cc:                   weights_mps = (*fragit)->get("weights")
src/libctp/xmapper.cc:                // Virtual vs real (= atom-centered) polar sites
src/libctp/xmapper.cc:                if ((*fragit)->exists("virtual_mps")) {
src/libctp/xmapper.cc:                    vector<int> isVirtual_ints = (*fragit)->get("virtual_mps")
src/libctp/xmapper.cc:            assert( split.size() == 5 );                                        // <- File format correct?
src/libctp/xmapper.cc:            assert( top->getSegment(segId)->getName() == segName );             // <- Input matches topology?
src/libctp/xmapper.cc:    assert( _segId_mpsFile_n.size() == top->Segments().size() );                // <- Input for all segments?
src/libctp/xmapper.cc:        if (_mpsFile_pSites.count(misit->second) > 0 ) { continue; }
src/libctp/xmapper.cc:        else { _mpsFile_pSites[misit->second] = APS_FROM_MPS(misit->second, 0); }
src/libctp/xmapper.cc:        if (_mpsFile_pSites.count(misit->second) > 0 ) { continue; }
src/libctp/xmapper.cc:        else { _mpsFile_pSites[misit->second] = APS_FROM_MPS(misit->second, -1); }
src/libctp/xmapper.cc:        if (_mpsFile_pSites.count(misit->second) > 0 ) { continue; }
src/libctp/xmapper.cc:        else { _mpsFile_pSites[misit->second] = APS_FROM_MPS(misit->second, +1); }
src/libctp/xmapper.cc:        vector<string> mpsfiles = (*jit)->getSegMps();
src/libctp/xmapper.cc:         << " mps-files from " << _alloc_table
src/libctp/xmapper.cc:         << " mps-files from XJobs."
src/libctp/xmapper.cc:    for (sit = top->Segments().begin();
src/libctp/xmapper.cc:         sit < top->Segments().end();
src/libctp/xmapper.cc:        int segId                   = seg->getId();
src/libctp/xmapper.cc:        bool map2md                 = _map2md[seg->getName()];
src/libctp/xmapper.cc:            pols_n[i]->setQs( pols_h[i]->getQs(+1), +1 );
src/libctp/xmapper.cc:            pols_n[i]->setPs( pols_h[i]->getPs(+1), +1 );
src/libctp/xmapper.cc:            pols_n[i]->setQs(pols_e[i]->getQs(-1), -1 );
src/libctp/xmapper.cc:            pols_n[i]->setPs(pols_e[i]->getPs(-1), -1 );
src/libctp/xmapper.cc:        for (fit = seg->Fragments().begin();
src/libctp/xmapper.cc:             fit < seg->Fragments().end();
src/libctp/xmapper.cc:            // Retrieve polar-site data for this fragment
src/libctp/xmapper.cc:            string idkey                 = frag->getName() + seg->getName()
src/libctp/xmapper.cc:                                         + seg->getMolecule()->getName();
src/libctp/xmapper.cc:            if (map2md && polesInFrag.size() != frag->Atoms().size()) {
src/libctp/xmapper.cc:                     << "ERROR: Segment " << seg->getName()
src/libctp/xmapper.cc:                     << " Fragment " << frag->getName()
src/libctp/xmapper.cc:                    trihedron_pol.push_back(pols_n[(*iit)-1]);
src/libctp/xmapper.cc:                trihedron_ints  = frag->getTrihedron();
src/libctp/xmapper.cc:                    for (ait = frag->Atoms().begin();
src/libctp/xmapper.cc:                         ait < frag->Atoms().end();
src/libctp/xmapper.cc:                        if ((*ait)->getQMId() == (*iit)) {
src/libctp/xmapper.cc:                    vec r1MD = trihedron_atm[0]->getPos();
src/libctp/xmapper.cc:                    vec r2MD = trihedron_atm[1]->getPos();
src/libctp/xmapper.cc:                    vec r3MD = trihedron_atm[2]->getPos();
src/libctp/xmapper.cc:                    vec r1QM = trihedron_pol[0]->getPos();
src/libctp/xmapper.cc:                    vec r2QM = trihedron_pol[1]->getPos();
src/libctp/xmapper.cc:                    vec r3QM = trihedron_pol[2]->getPos();
src/libctp/xmapper.cc:                    xMD = r2MD - r1MD;
src/libctp/xmapper.cc:                    yMD = r3MD - r1MD;
src/libctp/xmapper.cc:                    xQM = r2QM - r1QM;
src/libctp/xmapper.cc:                    yQM = r3QM - r1QM;
src/libctp/xmapper.cc:                    vec r1MD = trihedron_atm[0]->getPos();
src/libctp/xmapper.cc:                    vec r2MD = trihedron_atm[1]->getPos();
src/libctp/xmapper.cc:                    vec r1QM = trihedron_pol[0]->getPos();
src/libctp/xmapper.cc:                    vec r2QM = trihedron_pol[1]->getPos();
src/libctp/xmapper.cc:                    xMD = r2MD - r1MD;
src/libctp/xmapper.cc:                    xQM = r2QM - r1QM;
src/libctp/xmapper.cc:    if      ( xMD.getX()*xMD.getX() < 1e-6 ) { yMDtmp = vec(1,0,0); }
src/libctp/xmapper.cc:    else if ( xMD.getY()*xMD.getY() < 1e-6 ) { yMDtmp = vec(0,1,0); }
src/libctp/xmapper.cc:    else if ( xMD.getZ()*xMD.getZ() < 1e-6 ) { yMDtmp = vec(0,0,1); }
src/libctp/xmapper.cc:    if      ( xQM.getX()*xQM.getX() < 1e-6 ) { yQMtmp = vec(1,0,0); }
src/libctp/xmapper.cc:    else if ( xQM.getY()*xQM.getY() < 1e-6 ) { yQMtmp = vec(0,1,0); }
src/libctp/xmapper.cc:    else if ( xQM.getZ()*xQM.getZ() < 1e-6 ) { yQMtmp = vec(0,0,1); }
src/libctp/xmapper.cc:       double tmp_z = 1/xMD.getZ() * (-xMD.getX()*tmp_x - xMD.getY()*tmp_y);
src/libctp/xmapper.cc:       double tmp_z = 1/xQM.getZ() * (-xQM.getX()*tmp_x - xQM.getY()*tmp_y);
src/libctp/xmapper.cc:                         << frag->getName() << ": This will generate artifacts "
src/libctp/xmapper.cc:                         << "when mapping higher-rank multipoles (dipoles, ..)."
src/libctp/xmapper.cc:                         << frag->getName();
src/libctp/xmapper.cc:                         << frag->getName() << ": This will generate artifacts "
src/libctp/xmapper.cc:                         << "when mapping higher-rank multipoles (dipoles, ..)."
src/libctp/xmapper.cc:                    vec pos = pols_n[polesInFrag[i]-1]->getPos();
src/libctp/xmapper.cc:                translateMP2MD = frag->getCoMD() - CoMP;
src/libctp/xmapper.cc:                APolarSite *templ        = pols_n[poleId-1];
src/libctp/xmapper.cc:                APolarSite *newSite      = top->AddAPolarSite(name);
src/libctp/xmapper.cc:                newSite->ImportFrom(templ);
src/libctp/xmapper.cc:                newSite->setIsVirtual(isVirtualMp[i]);
src/libctp/xmapper.cc:                seg->AddAPolarSite(newSite);
src/libctp/xmapper.cc:                frag->AddAPolarSite(newSite);
src/libctp/xmapper.cc:                    newSite->Translate(translateMP2MD);
src/libctp/xmapper.cc:                    newSite->Rotate(rotateMP2MD, frag->getCoMD());
src/libctp/xmapper.cc:                    vec mdpos = frag->Atoms()[i]->getPos();
src/libctp/xmapper.cc:                    newSite->setPos(mdpos);
src/libctp/xmapper.cc:                    if (newSite->getRank() > 0) {
src/libctp/xmapper.cc:             << "WARNING: MAP2MD = TRUE while using higher-rank multipoles can "
src/libctp/xmapper.cc:             << "frame. If you know what you are doing - proceed ... "
src/libctp/xmapper.cc:    top->setIsEStatified(true);
src/libctp/xmapper.cc:    int segId                   = seg->getId();
src/libctp/xmapper.cc:    bool map2md                 = _map2md[seg->getName()];
src/libctp/xmapper.cc:    for (fit = seg->Fragments().begin();
src/libctp/xmapper.cc:         fit < seg->Fragments().end();
src/libctp/xmapper.cc:        // Retrieve polar-site data for this fragment
src/libctp/xmapper.cc:        string idkey                = frag->getName() + seg->getName()
src/libctp/xmapper.cc:                                    + seg->getMolecule()->getName();
src/libctp/xmapper.cc:        if (map2md && polesInFrag.size() != frag->Atoms().size()) {
src/libctp/xmapper.cc:                 << "ERROR: Segment " << seg->getName()
src/libctp/xmapper.cc:                 << " Fragment " << frag->getName()
src/libctp/xmapper.cc:                trihedron_pol.push_back(pols_n[(*iit)-1]);
src/libctp/xmapper.cc:            trihedron_ints  = frag->getTrihedron();
src/libctp/xmapper.cc:                for (ait = frag->Atoms().begin();
src/libctp/xmapper.cc:                     ait < frag->Atoms().end();
src/libctp/xmapper.cc:                    if ((*ait)->getQMId() == (*iit)) {
src/libctp/xmapper.cc:                vec r1MD = trihedron_atm[0]->getPos();
src/libctp/xmapper.cc:                vec r2MD = trihedron_atm[1]->getPos();
src/libctp/xmapper.cc:                vec r3MD = trihedron_atm[2]->getPos();
src/libctp/xmapper.cc:                vec r1QM = trihedron_pol[0]->getPos();
src/libctp/xmapper.cc:                vec r2QM = trihedron_pol[1]->getPos();
src/libctp/xmapper.cc:                vec r3QM = trihedron_pol[2]->getPos();
src/libctp/xmapper.cc:                xMD = r2MD - r1MD;
src/libctp/xmapper.cc:                yMD = r3MD - r1MD;
src/libctp/xmapper.cc:                xQM = r2QM - r1QM;
src/libctp/xmapper.cc:                yQM = r3QM - r1QM;
src/libctp/xmapper.cc:                vec r1MD = trihedron_atm[0]->getPos();
src/libctp/xmapper.cc:                vec r2MD = trihedron_atm[1]->getPos();
src/libctp/xmapper.cc:                vec r1QM = trihedron_pol[0]->getPos();
src/libctp/xmapper.cc:                vec r2QM = trihedron_pol[1]->getPos();
src/libctp/xmapper.cc:                xMD = r2MD - r1MD;
src/libctp/xmapper.cc:                xQM = r2QM - r1QM;
src/libctp/xmapper.cc:    if      ( xMD.getX()*xMD.getX() < 1e-6 ) { yMDtmp = vec(1,0,0); }
src/libctp/xmapper.cc:    else if ( xMD.getY()*xMD.getY() < 1e-6 ) { yMDtmp = vec(0,1,0); }
src/libctp/xmapper.cc:    else if ( xMD.getZ()*xMD.getZ() < 1e-6 ) { yMDtmp = vec(0,0,1); }
src/libctp/xmapper.cc:    if      ( xQM.getX()*xQM.getX() < 1e-6 ) { yQMtmp = vec(1,0,0); }
src/libctp/xmapper.cc:    else if ( xQM.getY()*xQM.getY() < 1e-6 ) { yQMtmp = vec(0,1,0); }
src/libctp/xmapper.cc:    else if ( xQM.getZ()*xQM.getZ() < 1e-6 ) { yQMtmp = vec(0,0,1); }
src/libctp/xmapper.cc:    double tmp_z = 1/xMD.getZ() * (-xMD.getX()*tmp_x - xMD.getY()*tmp_y);
src/libctp/xmapper.cc:    double tmp_z = 1/xQM.getZ() * (-xQM.getX()*tmp_x - xQM.getY()*tmp_y);
src/libctp/xmapper.cc:                //     << frag->getName() << ": This will generate artifacts "
src/libctp/xmapper.cc:                //     << "when mapping higher-rank multipoles (dipoles, ..)."
src/libctp/xmapper.cc:                     << frag->getName();
src/libctp/xmapper.cc:                     << frag->getName() << ": This will generate artifacts "
src/libctp/xmapper.cc:                     << "when mapping higher-rank multipoles (dipoles, ..)."
src/libctp/xmapper.cc:                vec pos = pols_n[polesInFrag[i]-1]->getPos();
src/libctp/xmapper.cc:            translateMP2MD = frag->getCoMD() - CoMP;
src/libctp/xmapper.cc:            APolarSite *templ        = pols_n[poleId-1];
src/libctp/xmapper.cc:            APolarSite *newSite      = new APolarSite(-1, name);
src/libctp/xmapper.cc:            newSite->ImportFrom(templ);
src/libctp/xmapper.cc:                newSite->Translate(translateMP2MD);
src/libctp/xmapper.cc:                newSite->Rotate(rotateMP2MD, frag->getCoMD());
src/libctp/xmapper.cc:                vec mdpos = frag->Atoms()[i]->getPos();
src/libctp/xmapper.cc:                newSite->setPos(mdpos);
src/libctp/xmapper.cc:                if (newSite->getRank() > 0) {
src/libctp/xmapper.cc:            newSite->Charge(0);
src/libctp/xmapper.cc:             << "WARNING: MAP2MD = TRUE while using higher-rank multipoles can "
src/libctp/xmapper.cc:             << "frame. If you know what you are doing - proceed ... "
src/libctp/xmapper.cc:    // Generates QM MM1 MM2, centered around job->Center().
src/libctp/xmapper.cc:    for (sit = top->Segments().begin();
src/libctp/xmapper.cc:         sit < top->Segments().end();
src/libctp/xmapper.cc:        if (job->isInCenter(seg->getId())) {
src/libctp/xmapper.cc:        else if (job->isWithinDist(seg->getPos(),co1,top)) {
src/libctp/xmapper.cc:        else if (job->isWithinDist(seg->getPos(),co2,top)) {
src/libctp/xmapper.cc:    for (int i = 0; i < job->getSegments().size(); ++i) {        
src/libctp/xmapper.cc:        Segment *seg = job->getSegments()[i];
src/libctp/xmapper.cc:                = this->GetRawPolSitesJob(job->getSegMps()[i]);
src/libctp/xmapper.cc:                = this->MapPolSitesToSeg(psites_raw, seg);        
src/libctp/xmapper.cc:        qm0.push_back(new PolarSeg(seg->getId(), psites_mapped));        
src/libctp/xmapper.cc:        string mps = _segId_mpsFile_n[seg->getId()];
src/libctp/xmapper.cc:                = this->MapPolSitesToSeg(psites_raw, seg);
src/libctp/xmapper.cc:        mm1.push_back(new PolarSeg(seg->getId(), psites_mapped));        
src/libctp/xmapper.cc:        string mps = _segId_mpsFile_n[seg->getId()];
src/libctp/xmapper.cc:                = this->MapPolSitesToSeg(psites_raw, seg);
src/libctp/xmapper.cc:        mm2.push_back(new PolarSeg(seg->getId(), psites_mapped));
src/libctp/xmapper.cc:    new_ptop->setQM0(qm0);
src/libctp/xmapper.cc:    new_ptop->setMM1(mm1);
src/libctp/xmapper.cc:    new_ptop->setMM2(mm2);
src/libctp/xmapper.cc:    new_ptop->CenterAround(job->Center());
src/libctp/xmapper.cc:    job->setPolarTop(new_ptop);
src/tools/Md2QmEngine.cc:       string molMdName = (*it_molecule)->get("mdname").as<string>();
src/tools/Md2QmEngine.cc:       list<Property *> segments = (*it_molecule)->Select(key);
src/tools/Md2QmEngine.cc:       int md_atom_id = 1; // <- atom id count with respect to molecule
src/tools/Md2QmEngine.cc:         segment->setType(qmUnit);
src/tools/Md2QmEngine.cc:         molecule->AddSegment(segment);
src/tools/Md2QmEngine.cc:         // Load internal (i.e. QM-) coord.s and MOO-related properties
src/tools/Md2QmEngine.cc:         if ( (*it_segment)->exists("qmcoords") ) {
src/tools/Md2QmEngine.cc:            qmcoordsFile = (*it_segment)->get("qmcoords").as<string>();            
src/tools/Md2QmEngine.cc:            this->getIntCoords(qmcoordsFile, intCoords);
src/tools/Md2QmEngine.cc:         list<Property *> fragments = (*it_segment)->Select(key);
src/tools/Md2QmEngine.cc:            segment->AddFragment( fragment );
src/tools/Md2QmEngine.cc:            // Load local-frame definition
src/tools/Md2QmEngine.cc:            vector<int> trihedron = (*it_fragment)->get("localframe")
src/tools/Md2QmEngine.cc:                trihedron.push_back(-1);
src/tools/Md2QmEngine.cc:            fragment->setTrihedron(trihedron);
src/tools/Md2QmEngine.cc:             string mdatoms = (*it_fragment)->get("mdatoms").as<string>();
src/tools/Md2QmEngine.cc:             string qmatoms = (*it_fragment)->get("qmatoms").as<string>();
src/tools/Md2QmEngine.cc:             string weights = (*it_fragment)->get("weights").as<string>();
src/tools/Md2QmEngine.cc:                      << " in fragment " << fragment->getName()
src/tools/Md2QmEngine.cc:                      << " in segment " << segment->getName()
src/tools/Md2QmEngine.cc:                      << "a single ':' in the associated QM-atoms column and "
src/tools/Md2QmEngine.cc:               int qm_atom_id = -1;
src/tools/Md2QmEngine.cc:                        << " has no QM counterpart despite non-zero weight. "
src/tools/Md2QmEngine.cc:                   this->_map_mol_resNr_atm_atmType.at(molMdName)
src/tools/Md2QmEngine.cc:                   this->_map_mol_resNr_atm_atmType[molMdName]
src/tools/Md2QmEngine.cc:               fragment->AddAtom(atom);
src/tools/Md2QmEngine.cc:               segment->AddAtom(atom);
src/tools/Md2QmEngine.cc:               molecule->AddAtom(atom);
src/tools/Md2QmEngine.cc:    qmtop->CleanUp();
src/tools/Md2QmEngine.cc:    qmtop->setBox(mdtop->getBox());
src/tools/Md2QmEngine.cc:    qmtop->setStep(mdtop->getStep());
src/tools/Md2QmEngine.cc:    qmtop->setTime(mdtop->getTime());
src/tools/Md2QmEngine.cc:    qmtop->setCanRigidify(true);
src/tools/Md2QmEngine.cc:    for (typeit = this->_qmUnits.begin();
src/tools/Md2QmEngine.cc:         typeit != this->_qmUnits.end();
src/tools/Md2QmEngine.cc:        string name = (*typeit)->getName();
src/tools/Md2QmEngine.cc:        string basis = (*typeit)->getBasisName();
src/tools/Md2QmEngine.cc:        string orbitals = (*typeit)->getOrbitalsFile();
src/tools/Md2QmEngine.cc:        string qmcoords = (*typeit)->getQMCoordsFile();
src/tools/Md2QmEngine.cc:        bool canRigidify = (*typeit)->canRigidify();
src/tools/Md2QmEngine.cc:        CTP::SegmentType *segType = qmtop->AddSegmentType(name);
src/tools/Md2QmEngine.cc:        segType->setBasisName(basis);
src/tools/Md2QmEngine.cc:        segType->setOrbitalsFile(orbitals);
src/tools/Md2QmEngine.cc:        segType->setQMCoordsFile(qmcoords);
src/tools/Md2QmEngine.cc:        segType->setCanRigidify(canRigidify);
src/tools/Md2QmEngine.cc:        if (!canRigidify) { qmtop->setCanRigidify(false); }
src/tools/Md2QmEngine.cc:    // Populate topology in a trickle-down manner
src/tools/Md2QmEngine.cc:    for (mit = mdtop->Molecules().begin();
src/tools/Md2QmEngine.cc:         mit != mdtop->Molecules().end();
src/tools/Md2QmEngine.cc:         string nameMolMD = molMD->getName();
src/tools/Md2QmEngine.cc:         CTP::Molecule *molQM = this->MoleculeFactory(molMD);
src/tools/Md2QmEngine.cc:         string nameMolQM = molQM->getName();
src/tools/Md2QmEngine.cc:         CTP::Molecule *product = this->ExportMolecule(molQM, qmtop);
src/tools/Md2QmEngine.cc:    string nameMolQM = this->getMoleculeName(molMDTemplate->getName());
src/tools/Md2QmEngine.cc:    CTP::Molecule *molQMTemplate = this->getMoleculeType(nameMolQM);
src/tools/Md2QmEngine.cc:    int resnrOffset = molMDTemplate->getBead(0)->getResnr();
src/tools/Md2QmEngine.cc:    for (int i = 0; i < molMDTemplate->BeadCount(); i++) {
src/tools/Md2QmEngine.cc:        CSG::Bead *atomMD = molMDTemplate->getBead(i);
src/tools/Md2QmEngine.cc:                 this->getAtomType(molMDTemplate->getName(),
src/tools/Md2QmEngine.cc:                                   atomMD->getResnr()-resnrOffset+1,
src/tools/Md2QmEngine.cc:                                   atomMD->getName());
src/tools/Md2QmEngine.cc:            counterpart->setPos(atomMD->getPos());
src/tools/Md2QmEngine.cc:                 << atomMD->getName() << " in residue number "
src/tools/Md2QmEngine.cc:                 << atomMD->getResnr() << " in molecule "
src/tools/Md2QmEngine.cc:                 << molMDTemplate->getName() << ". Skipping..."
src/tools/Md2QmEngine.cc:    CTP::Molecule *newMol = qmtop->AddMolecule(refMol->getName());
src/tools/Md2QmEngine.cc:    for (segIt = refMol->Segments().begin();
src/tools/Md2QmEngine.cc:         segIt < refMol->Segments().end();
src/tools/Md2QmEngine.cc:        CTP::Segment *newSeg = qmtop->AddSegment(refSeg->getName());
src/tools/Md2QmEngine.cc:        newSeg->setType( qmtop->getSegmentType(refSeg->getType()->getId()) );
src/tools/Md2QmEngine.cc:        for (fragIt = refSeg->Fragments().begin();
src/tools/Md2QmEngine.cc:             fragIt < refSeg->Fragments().end();
src/tools/Md2QmEngine.cc:            CTP::Fragment *newFrag = qmtop->AddFragment(refFrag->getName());
src/tools/Md2QmEngine.cc:            newFrag->setTrihedron(refFrag->getTrihedron());
src/tools/Md2QmEngine.cc:            for (atomIt = refFrag->Atoms().begin();
src/tools/Md2QmEngine.cc:                 atomIt < refFrag->Atoms().end();
src/tools/Md2QmEngine.cc:                CTP::Atom *newAtom = qmtop->AddAtom(refAtom->getName());
src/tools/Md2QmEngine.cc:                newAtom->setWeight(refAtom->getWeight());
src/tools/Md2QmEngine.cc:                newAtom->setResnr(refAtom->getResnr());
src/tools/Md2QmEngine.cc:                newAtom->setResname(refAtom->getResname());
src/tools/Md2QmEngine.cc:                newAtom->setElement(refAtom->getElement());
src/tools/Md2QmEngine.cc:                if (refAtom->HasQMPart()) {
src/tools/Md2QmEngine.cc:                    newAtom->setQMPart(refAtom->getQMId(),
src/tools/Md2QmEngine.cc:                                       refAtom->getQMPos());
src/tools/Md2QmEngine.cc:                newAtom->setPos(refAtom->getPos());
src/tools/Md2QmEngine.cc:                newFrag->AddAtom(newAtom);
src/tools/Md2QmEngine.cc:                newSeg->AddAtom(newAtom);
src/tools/Md2QmEngine.cc:                newMol->AddAtom(newAtom);
src/tools/Md2QmEngine.cc:            newFrag->calcPos();
src/tools/Md2QmEngine.cc:            newSeg->AddFragment(newFrag);
src/tools/Md2QmEngine.cc:            newMol->AddFragment(newFrag);
src/tools/Md2QmEngine.cc:        newSeg->calcPos();
src/tools/Md2QmEngine.cc:        newMol->AddSegment(newSeg);
src/tools/Md2QmEngine.cc:    string fragment_name = property->get("name").as<string>();
src/tools/Md2QmEngine.cc:    string segment_name = property->get("name").as<string>();
src/tools/Md2QmEngine.cc:    string molecule_name = property->get("name").as<string>();
src/tools/Md2QmEngine.cc:    string molecule_mdname = property->get("mdname").as<string>();
src/tools/Md2QmEngine.cc:    string qmunit_name = property->get("name").as<string>();
src/tools/Md2QmEngine.cc:    if (property->exists("qmcoords")) {
src/tools/Md2QmEngine.cc:        qmCoordsFile = property->get("qmcoords").as<string>();
src/tools/Md2QmEngine.cc:    if (property->exists("orbitals")) {
src/tools/Md2QmEngine.cc:        orbitalsFile = property->get("orbitals").as<string>();
src/tools/Md2QmEngine.cc:    if (property->exists("basisset")) {
src/tools/Md2QmEngine.cc:        basisSetName = property->get("basisset").as<string>();
src/tools/Md2QmEngine.cc:    return this->_map_mol_resNr_atm_atmType.at(molMdName)
src/tools/Md2QmEngine.cc:         cout << "[ " << (*mit)->getName() << " ]";
src/tools/Md2QmEngine.cc:    for (mssit = this->_map_MoleculeMDName_MoleculeName.begin();
src/tools/Md2QmEngine.cc:         mssit != this->_map_MoleculeMDName_MoleculeName.end();
src/tools/Md2QmEngine.cc:         cout << "MD [ " << mssit->first << " ] mapped to "
src/tools/Md2QmEngine.cc:              << "QM [ " << mssit->second << " ] \n" << endl;
src/tools/Md2QmEngine.cc:         cout << "[ " << mol->getName() << " ]" << endl;
src/tools/Md2QmEngine.cc:         for (sit = mol->Segments().begin();
src/tools/Md2QmEngine.cc:              sit != mol->Segments().end();
src/tools/Md2QmEngine.cc:              cout << " - Segment [ " << seg->getName() << " ]"
src/tools/Md2QmEngine.cc:                   << " ID " << seg->getId() << endl;
src/tools/Md2QmEngine.cc:              for (fit = seg->Fragments().begin();
src/tools/Md2QmEngine.cc:                   fit != seg->Fragments().end();
src/tools/Md2QmEngine.cc:                   cout << "   - Fragment [ " << frag->getName() << " ]"
src/tools/Md2QmEngine.cc:                        << " ID " << frag->getId() << ": "
src/tools/Md2QmEngine.cc:                        << frag->Atoms().size() << " atoms " << endl;
src/tools/Md2QmEngine.cc:    for (it0 = this->_map_mol_resNr_atm_atmType.begin();
src/tools/Md2QmEngine.cc:         it0 != this->_map_mol_resNr_atm_atmType.end();
src/tools/Md2QmEngine.cc:         for (it1 = it0->second.begin();
src/tools/Md2QmEngine.cc:              it1 != it0->second.end();
src/tools/Md2QmEngine.cc:              for (it2 = it1->second.begin();
src/tools/Md2QmEngine.cc:                   it2 != it1->second.end();
src/tools/Md2QmEngine.cc:               it0->first.c_str(),
src/tools/Md2QmEngine.cc:               it2->second->getResnr(),
src/tools/Md2QmEngine.cc:               it2->first.c_str(),
src/tools/Md2QmEngine.cc:               it2->second->getId(),
src/tools/Md2QmEngine.cc:               it2->second->getQMId());
src/tools/Md2QmEngine.cc:    for (molIt = outtop->Molecules().begin();
src/tools/Md2QmEngine.cc:         molIt < outtop->Molecules().end();
src/tools/Md2QmEngine.cc:        mol->WritePDB(outPDB);
src/tools/Md2QmEngine.cc:    for (segIt = outtop->Segments().begin();
src/tools/Md2QmEngine.cc:         segIt < outtop->Segments().end();
src/tools/Md2QmEngine.cc:        seg->WritePDB(outPDB);
src/tools/Md2QmEngine.cc:    outtop->WritePDB(outPDB);
src/tools/Md2QmEngine.cc:        this->PrintInfo();
src/tools/Md2QmEngine.cc:        outtop->PrintInfo(cout);
src/tools/Md2QmEngine.h:    // MD <-> QM Maps
src/tools/ctp_map.cc:    topread->ReadTopology(topfile, this->_mdtopol);
src/tools/ctp_map.cc:    trjread->Open(trjfile);
src/tools/ctp_map.cc:    trjread->FirstFrame(this->_mdtopol);
src/tools/ctp_map.cc:    if (_op_vm.count("first-frame")) {
src/tools/ctp_map.cc:        firstFrame = _op_vm["first-frame"].as<int> ();
src/tools/ctp_map.cc:         hasFrame = trjread->NextFrame(this->_mdtopol)) {
src/tools/ctp_map.cc:             firstFrame--;
src/tools/ctp_map.cc:        trjread->Close();
src/tools/ctp_map.cc:         hasFrame = trjread->NextFrame(this->_mdtopol), saved++) {
src/tools/ctp_map.cc:        this->Save("");
src/tools/ctp_map.cc:    // trjread->Close();
src/tools/ctp_run.cc:                PrintDescription( (iter->first).c_str(), _short );
src/tools/ctp_run.cc:                    if ( (*n).compare( (iter->first).c_str() ) == 0 ) {
src/tools/ctp_run.cc:                         PrintDescription( (iter->first).c_str(), _long );
src/tools/CMakeFiles/ctp_map.dir/cmake_clean.cmake:# Per-language clean rules from dependency scanning.
src/tools/CMakeFiles/ctp_map.dir/link.txt:/usr/bin/c++       CMakeFiles/ctp_map.dir/ctp_map.cc.o CMakeFiles/ctp_map.dir/Md2QmEngine.cc.o  -o ctp_map -rdynamic ../libctp/libvotca_ctp.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt /people/thnfs/homes/melnyk/votca/lib/libvotca_csg.so /people/thnfs/homes/melnyk/votca/lib/libvotca_moo.so /people/thnfs/homes/melnyk/votca/lib/libvotca_tools.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt -Wl,-rpath,/people/thnfs/homes/melnyk/votca/src/ctp/src/libctp:/people/thnfs/homes/melnyk/votca/lib 
src/tools/CMakeFiles/ctp_map.dir/relink.txt:/usr/bin/c++       CMakeFiles/ctp_map.dir/ctp_map.cc.o CMakeFiles/ctp_map.dir/Md2QmEngine.cc.o  -o CMakeFiles/CMakeRelink.dir/ctp_map -rdynamic ../libctp/libvotca_ctp.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt /people/thnfs/homes/melnyk/votca/lib/libvotca_csg.so /people/thnfs/homes/melnyk/votca/lib/libvotca_moo.so /people/thnfs/homes/melnyk/votca/lib/libvotca_tools.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt -Wl,-rpath,/people/thnfs/homes/melnyk/votca/lib 
src/tools/CMakeFiles/ctp_map.dir/flags.make:CXX_FLAGS = -I/people/thnfs/homes/melnyk/votca/src/ctp/include -I/people/thnfs/homes/melnyk/votca/include   
src/tools/CMakeFiles/ctp_map.dir/build.make:RM = /usr/bin/cmake -E remove -f
src/tools/CMakeFiles/ctp_map.dir/build.make:# The top-level source directory on which CMake was run.
src/tools/CMakeFiles/ctp_map.dir/build.make:# The top-level build directory on which CMake was run.
src/tools/CMakeFiles/ctp_map.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_1)
src/tools/CMakeFiles/ctp_map.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/tools/CMakeFiles/ctp_map.dir/ctp_map.cc.o"
src/tools/CMakeFiles/ctp_map.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/ctp_map.dir/ctp_map.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/ctp_map.cc
src/tools/CMakeFiles/ctp_map.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/ctp_map.dir/ctp_map.cc.i"
src/tools/CMakeFiles/ctp_map.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/ctp_map.cc > CMakeFiles/ctp_map.dir/ctp_map.cc.i
src/tools/CMakeFiles/ctp_map.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/ctp_map.dir/ctp_map.cc.s"
src/tools/CMakeFiles/ctp_map.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/ctp_map.cc -o CMakeFiles/ctp_map.dir/ctp_map.cc.s
src/tools/CMakeFiles/ctp_map.dir/build.make:	$(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/ctp_map.cc.o.provides.build
src/tools/CMakeFiles/ctp_map.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_2)
src/tools/CMakeFiles/ctp_map.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/tools/CMakeFiles/ctp_map.dir/Md2QmEngine.cc.o"
src/tools/CMakeFiles/ctp_map.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/ctp_map.dir/Md2QmEngine.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/Md2QmEngine.cc
src/tools/CMakeFiles/ctp_map.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/ctp_map.dir/Md2QmEngine.cc.i"
src/tools/CMakeFiles/ctp_map.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/Md2QmEngine.cc > CMakeFiles/ctp_map.dir/Md2QmEngine.cc.i
src/tools/CMakeFiles/ctp_map.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/ctp_map.dir/Md2QmEngine.cc.s"
src/tools/CMakeFiles/ctp_map.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/Md2QmEngine.cc -o CMakeFiles/ctp_map.dir/Md2QmEngine.cc.s
src/tools/CMakeFiles/ctp_map.dir/build.make:	$(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/Md2QmEngine.cc.o.provides.build
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/ctp_map: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/ctp_map: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/ctp_map: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/ctp_map: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/ctp_map: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/ctp_map: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX executable ctp_map"
src/tools/CMakeFiles/ctp_map.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/ctp_map.dir/link.txt --verbose=$(VERBOSE)
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_map: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_map: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_map: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_map: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_map: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_map: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_map.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX executable CMakeFiles/CMakeRelink.dir/ctp_map"
src/tools/CMakeFiles/ctp_map.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/ctp_map.dir/relink.txt --verbose=$(VERBOSE)
src/tools/CMakeFiles/ctp_map.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && $(CMAKE_COMMAND) -P CMakeFiles/ctp_map.dir/cmake_clean.cmake
src/tools/CMakeFiles/ctp_map.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/tools /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/tools /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/CMakeFiles/ctp_map.dir/DependInfo.cmake --color=$(COLOR)
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_map.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/cmake_clean.cmake:# Per-language clean rules from dependency scanning.
src/tools/CMakeFiles/ctp_run.dir/link.txt:/usr/bin/c++       CMakeFiles/ctp_run.dir/ctp_run.cc.o  -o ctp_run -rdynamic ../libctp/libvotca_ctp.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt /people/thnfs/homes/melnyk/votca/lib/libvotca_csg.so /people/thnfs/homes/melnyk/votca/lib/libvotca_moo.so /people/thnfs/homes/melnyk/votca/lib/libvotca_tools.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt -Wl,-rpath,/people/thnfs/homes/melnyk/votca/src/ctp/src/libctp:/people/thnfs/homes/melnyk/votca/lib 
src/tools/CMakeFiles/ctp_run.dir/relink.txt:/usr/bin/c++       CMakeFiles/ctp_run.dir/ctp_run.cc.o  -o CMakeFiles/CMakeRelink.dir/ctp_run -rdynamic ../libctp/libvotca_ctp.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt /people/thnfs/homes/melnyk/votca/lib/libvotca_csg.so /people/thnfs/homes/melnyk/votca/lib/libvotca_moo.so /people/thnfs/homes/melnyk/votca/lib/libvotca_tools.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt -Wl,-rpath,/people/thnfs/homes/melnyk/votca/lib 
src/tools/CMakeFiles/ctp_run.dir/flags.make:CXX_FLAGS = -I/people/thnfs/homes/melnyk/votca/src/ctp/include -I/people/thnfs/homes/melnyk/votca/include   
src/tools/CMakeFiles/ctp_run.dir/build.make:RM = /usr/bin/cmake -E remove -f
src/tools/CMakeFiles/ctp_run.dir/build.make:# The top-level source directory on which CMake was run.
src/tools/CMakeFiles/ctp_run.dir/build.make:# The top-level build directory on which CMake was run.
src/tools/CMakeFiles/ctp_run.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_1)
src/tools/CMakeFiles/ctp_run.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/tools/CMakeFiles/ctp_run.dir/ctp_run.cc.o"
src/tools/CMakeFiles/ctp_run.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/ctp_run.dir/ctp_run.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/ctp_run.cc
src/tools/CMakeFiles/ctp_run.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/ctp_run.dir/ctp_run.cc.i"
src/tools/CMakeFiles/ctp_run.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/ctp_run.cc > CMakeFiles/ctp_run.dir/ctp_run.cc.i
src/tools/CMakeFiles/ctp_run.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/ctp_run.dir/ctp_run.cc.s"
src/tools/CMakeFiles/ctp_run.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/ctp_run.cc -o CMakeFiles/ctp_run.dir/ctp_run.cc.s
src/tools/CMakeFiles/ctp_run.dir/build.make:	$(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/ctp_run.cc.o.provides.build
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/ctp_run: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/ctp_run: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/ctp_run: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/ctp_run: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/ctp_run: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/ctp_run: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX executable ctp_run"
src/tools/CMakeFiles/ctp_run.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/ctp_run.dir/link.txt --verbose=$(VERBOSE)
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_run: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_run: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_run: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_run: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_run: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_run: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_run.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX executable CMakeFiles/CMakeRelink.dir/ctp_run"
src/tools/CMakeFiles/ctp_run.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/ctp_run.dir/relink.txt --verbose=$(VERBOSE)
src/tools/CMakeFiles/ctp_run.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && $(CMAKE_COMMAND) -P CMakeFiles/ctp_run.dir/cmake_clean.cmake
src/tools/CMakeFiles/ctp_run.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/tools /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/tools /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/CMakeFiles/ctp_run.dir/DependInfo.cmake --color=$(COLOR)
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_run.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/cmake_clean.cmake:# Per-language clean rules from dependency scanning.
src/tools/CMakeFiles/ctp_app.dir/link.txt:/usr/bin/c++       CMakeFiles/ctp_app.dir/ctp_app.cc.o  -o ctp_app -rdynamic ../libctp/libvotca_ctp.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt /people/thnfs/homes/melnyk/votca/lib/libvotca_csg.so /people/thnfs/homes/melnyk/votca/lib/libvotca_moo.so /people/thnfs/homes/melnyk/votca/lib/libvotca_tools.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt -Wl,-rpath,/people/thnfs/homes/melnyk/votca/src/ctp/src/libctp:/people/thnfs/homes/melnyk/votca/lib 
src/tools/CMakeFiles/ctp_app.dir/relink.txt:/usr/bin/c++       CMakeFiles/ctp_app.dir/ctp_app.cc.o  -o CMakeFiles/CMakeRelink.dir/ctp_app -rdynamic ../libctp/libvotca_ctp.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt /people/thnfs/homes/melnyk/votca/lib/libvotca_csg.so /people/thnfs/homes/melnyk/votca/lib/libvotca_moo.so /people/thnfs/homes/melnyk/votca/lib/libvotca_tools.so -lboost_program_options-mt -lboost_serialization-mt -lboost_filesystem-mt -Wl,-rpath,/people/thnfs/homes/melnyk/votca/lib 
src/tools/CMakeFiles/ctp_app.dir/flags.make:CXX_FLAGS = -I/people/thnfs/homes/melnyk/votca/src/ctp/include -I/people/thnfs/homes/melnyk/votca/include   
src/tools/CMakeFiles/ctp_app.dir/build.make:RM = /usr/bin/cmake -E remove -f
src/tools/CMakeFiles/ctp_app.dir/build.make:# The top-level source directory on which CMake was run.
src/tools/CMakeFiles/ctp_app.dir/build.make:# The top-level build directory on which CMake was run.
src/tools/CMakeFiles/ctp_app.dir/build.make:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles $(CMAKE_PROGRESS_1)
src/tools/CMakeFiles/ctp_app.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Building CXX object src/tools/CMakeFiles/ctp_app.dir/ctp_app.cc.o"
src/tools/CMakeFiles/ctp_app.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++   $(CXX_DEFINES) $(CXX_FLAGS) -o CMakeFiles/ctp_app.dir/ctp_app.cc.o -c /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/ctp_app.cc
src/tools/CMakeFiles/ctp_app.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/ctp_app.dir/ctp_app.cc.i"
src/tools/CMakeFiles/ctp_app.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -E /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/ctp_app.cc > CMakeFiles/ctp_app.dir/ctp_app.cc.i
src/tools/CMakeFiles/ctp_app.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/ctp_app.dir/ctp_app.cc.s"
src/tools/CMakeFiles/ctp_app.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && /usr/bin/c++  $(CXX_DEFINES) $(CXX_FLAGS) -S /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/ctp_app.cc -o CMakeFiles/ctp_app.dir/ctp_app.cc.s
src/tools/CMakeFiles/ctp_app.dir/build.make:	$(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/ctp_app.cc.o.provides.build
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/ctp_app: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/ctp_app: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/ctp_app: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/ctp_app: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/ctp_app: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/ctp_app: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX executable ctp_app"
src/tools/CMakeFiles/ctp_app.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/ctp_app.dir/link.txt --verbose=$(VERBOSE)
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_app: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_app: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_app: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_app: /usr/lib64/libboost_program_options-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_app: /usr/lib64/libboost_serialization-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:src/tools/CMakeFiles/CMakeRelink.dir/ctp_app: /usr/lib64/libboost_filesystem-mt.so
src/tools/CMakeFiles/ctp_app.dir/build.make:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --red --bold "Linking CXX executable CMakeFiles/CMakeRelink.dir/ctp_app"
src/tools/CMakeFiles/ctp_app.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/ctp_app.dir/relink.txt --verbose=$(VERBOSE)
src/tools/CMakeFiles/ctp_app.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp/src/tools && $(CMAKE_COMMAND) -P CMakeFiles/ctp_app.dir/cmake_clean.cmake
src/tools/CMakeFiles/ctp_app.dir/build.make:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_depends "Unix Makefiles" /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/tools /people/thnfs/homes/melnyk/votca/src/ctp /people/thnfs/homes/melnyk/votca/src/ctp/src/tools /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/CMakeFiles/ctp_app.dir/DependInfo.cmake --color=$(COLOR)
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/CMakeFiles/ctp_app.dir/CXX.includecache:-
src/tools/Makefile:RM = /usr/bin/cmake -E remove -f
src/tools/Makefile:# The top-level source directory on which CMake was run.
src/tools/Makefile:# The top-level build directory on which CMake was run.
src/tools/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
src/tools/Makefile:	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
src/tools/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
src/tools/Makefile:	/usr/bin/cmake -P cmake_install.cmake
src/tools/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
src/tools/Makefile:	/usr/bin/cmake -P cmake_install.cmake
src/tools/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
src/tools/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
src/tools/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
src/tools/Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
src/tools/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
src/tools/Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
src/tools/Makefile:	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles /people/thnfs/homes/melnyk/votca/src/ctp/src/tools/CMakeFiles/progress.marks
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/tools/all
src/tools/Makefile:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/tools/clean
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/tools/preinstall
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/tools/preinstall
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/tools/CMakeFiles/ctp_app.dir/rule
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/build
src/tools/Makefile:# Manual pre-install relink rule for target.
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/tools/CMakeFiles/ctp_app.dir/preinstall
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/tools/CMakeFiles/ctp_map.dir/rule
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/build
src/tools/Makefile:# Manual pre-install relink rule for target.
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/tools/CMakeFiles/ctp_map.dir/preinstall
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/tools/CMakeFiles/ctp_run.dir/rule
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/build
src/tools/Makefile:# Manual pre-install relink rule for target.
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f CMakeFiles/Makefile2 src/tools/CMakeFiles/ctp_run.dir/preinstall
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/Md2QmEngine.cc.o
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/Md2QmEngine.cc.i
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/Md2QmEngine.cc.s
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/ctp_app.cc.o
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/ctp_app.cc.i
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/ctp_app.cc.s
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/ctp_map.cc.o
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/ctp_map.cc.i
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/ctp_map.cc.s
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/ctp_run.cc.o
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/ctp_run.cc.i
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/ctp_run.cc.s
src/tools/Makefile:	cd /people/thnfs/homes/melnyk/votca/src/ctp && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
src/tools/cmake_install.cmake:    STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
src/tools/ctp_app.cc:    // Tools-related
src/tools/ctp_app.cc:    // Options-related
src/tools/ctp_app.cc:    AddProgramOptions() ("nthreads,t", propt::value<int>()->default_value(1),
src/tools/ctp_app.cc:            PrintDescription( (iter->first).c_str(), _short );
src/tools/ctp_app.cc:                if ( (*n).compare( (iter->first).c_str() ) == 0 ) {
src/tools/ctp_app.cc:                    PrintDescription( (iter->first).c_str(), _long );
src/tools/ctp_app.cc:        this->AddTool(QMTools().Create((*it).c_str()));
src/tools/ctp_app.cc:                Property *pname=&( (*iter)->get( string("name") ) );
src/tools/ctp_app.cc:                Property *pdesc=&( (*iter)->get( string("description") ) );
src/tools/ctp_app.cc:                //Property *pdflt=&( (*iter)->get( string("default") ) );
src/tools/ctp_app.cc:                if ( ! (pname->value()).empty() ) {
src/tools/ctp_app.cc:                    string out_name = "  <" + pname->value() + ">";
src/tools/ctp_app.cc:                    //cout << string("  <") << _fwstring(pname->value(), 20) << string(">");
src/tools/ctp_app.cc:                    cout << pdesc->value() << endl;
src/tools/ctp_app.cc:        cout << "... " << (*it)->Identify() << " ";
src/tools/ctp_app.cc:        (*it)->setnThreads(nThreads);
src/tools/ctp_app.cc:        (*it)->Initialize(&_options);        
src/tools/ctp_app.cc:        cout << "... " << (*it)->Identify() << " " << flush;
src/tools/ctp_app.cc:        (*it)->Evaluate();
src/tools/ctp_app.cc:        (*it)->EndEvaluate();
src/tools/ctp_diode.cc:                PrintDescription( (iter->first).c_str(), _short );
src/tools/ctp_diode.cc:                    if ( (*n).compare( (iter->first).c_str() ) == 0 ) {
src/tools/ctp_diode.cc:                         PrintDescription( (iter->first).c_str(), _long );
CMakeFiles/CMakeOutput.log:The system is: Linux - 3.4.28-2.20-desktop - x86_64
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2158360404.dir/build.make CMakeFiles/cmTryCompileExec2158360404.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc    -o CMakeFiles/cmTryCompileExec2158360404.dir/testCCompiler.c.o   -c /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/testCCompiler.c
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2158360404.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc         CMakeFiles/cmTryCompileExec2158360404.dir/testCCompiler.c.o  -o cmTryCompileExec2158360404 -rdynamic 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2776231329.dir/build.make CMakeFiles/cmTryCompileExec2776231329.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc    -o CMakeFiles/cmTryCompileExec2776231329.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake/Modules/CMakeCCompilerABI.c
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2776231329.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc       -v CMakeFiles/cmTryCompileExec2776231329.dir/CMakeCCompilerABI.c.o  -o cmTryCompileExec2776231329 -rdynamic  
CMakeFiles/CMakeOutput.log:Using built-in specs.
CMakeFiles/CMakeOutput.log:COLLECT_LTO_WRAPPER=/usr/lib64/gcc/x86_64-suse-linux/4.7/lto-wrapper
CMakeFiles/CMakeOutput.log:Target: x86_64-suse-linux
CMakeFiles/CMakeOutput.log:Configured with: ../configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-languages=c,c++,objc,fortran,obj-c++,java,ada --enable-checking=release --with-gxx-include-dir=/usr/include/c++/4.7 --enable-ssp --disable-libssp --disable-libitm --disable-plugin --with-bugurl=http://bugs.opensuse.org/ --with-pkgversion='SUSE Linux' --disable-libgcj --disable-libmudflap --with-slibdir=/lib64 --with-system-zlib --enable-__cxa_atexit --enable-libstdcxx-allocator=new --disable-libstdcxx-pch --enable-version-specific-runtime-libs --enable-linker-build-id --program-suffix=-4.7 --enable-linux-futex --without-system-libunwind --with-arch-32=i586 --with-tune=generic --build=x86_64-suse-linux
CMakeFiles/CMakeOutput.log:gcc version 4.7.1 20120723 [gcc-4_7-branch revision 189773] (SUSE Linux) 
CMakeFiles/CMakeOutput.log:COMPILER_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/bin/
CMakeFiles/CMakeOutput.log:LIBRARY_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/:/lib/../lib64/:/usr/lib/../lib64/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../:/lib/:/usr/lib/
CMakeFiles/CMakeOutput.log:COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec2776231329' '-rdynamic' '-mtune=generic' '-march=x86-64'
CMakeFiles/CMakeOutput.log: /usr/lib64/gcc/x86_64-suse-linux/4.7/collect2 --build-id --eh-frame-hdr -m elf_x86_64 -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTryCompileExec2776231329 /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crt1.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crti.o /usr/lib64/gcc/x86_64-suse-linux/4.7/crtbegin.o -L/usr/lib64/gcc/x86_64-suse-linux/4.7 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../.. CMakeFiles/cmTryCompileExec2776231329.dir/CMakeCCompilerABI.c.o -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib64/gcc/x86_64-suse-linux/4.7/crtend.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crtn.o
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2776231329.dir/build.make CMakeFiles/cmTryCompileExec2776231329.dir/build]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/gcc    -o CMakeFiles/cmTryCompileExec2776231329.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake/Modules/CMakeCCompilerABI.c]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2776231329.dir/link.txt --verbose=1]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/gcc       -v CMakeFiles/cmTryCompileExec2776231329.dir/CMakeCCompilerABI.c.o  -o cmTryCompileExec2776231329 -rdynamic  ]
CMakeFiles/CMakeOutput.log:  ignore line: [Using built-in specs.]
CMakeFiles/CMakeOutput.log:  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib64/gcc/x86_64-suse-linux/4.7/lto-wrapper]
CMakeFiles/CMakeOutput.log:  ignore line: [Target: x86_64-suse-linux]
CMakeFiles/CMakeOutput.log:  ignore line: [Configured with: ../configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-languages=c,c++,objc,fortran,obj-c++,java,ada --enable-checking=release --with-gxx-include-dir=/usr/include/c++/4.7 --enable-ssp --disable-libssp --disable-libitm --disable-plugin --with-bugurl=http://bugs.opensuse.org/ --with-pkgversion='SUSE Linux' --disable-libgcj --disable-libmudflap --with-slibdir=/lib64 --with-system-zlib --enable-__cxa_atexit --enable-libstdcxx-allocator=new --disable-libstdcxx-pch --enable-version-specific-runtime-libs --enable-linker-build-id --program-suffix=-4.7 --enable-linux-futex --without-system-libunwind --with-arch-32=i586 --with-tune=generic --build=x86_64-suse-linux]
CMakeFiles/CMakeOutput.log:  ignore line: [gcc version 4.7.1 20120723 [gcc-4_7-branch revision 189773] (SUSE Linux) ]
CMakeFiles/CMakeOutput.log:  ignore line: [COMPILER_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/bin/]
CMakeFiles/CMakeOutput.log:  ignore line: [LIBRARY_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/:/lib/../lib64/:/usr/lib/../lib64/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../:/lib/:/usr/lib/]
CMakeFiles/CMakeOutput.log:  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec2776231329' '-rdynamic' '-mtune=generic' '-march=x86-64']
CMakeFiles/CMakeOutput.log:  link line: [ /usr/lib64/gcc/x86_64-suse-linux/4.7/collect2 --build-id --eh-frame-hdr -m elf_x86_64 -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTryCompileExec2776231329 /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crt1.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crti.o /usr/lib64/gcc/x86_64-suse-linux/4.7/crtbegin.o -L/usr/lib64/gcc/x86_64-suse-linux/4.7 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../.. CMakeFiles/cmTryCompileExec2776231329.dir/CMakeCCompilerABI.c.o -lgcc --as-needed -lgcc_s --no-as-needed -lc -lgcc --as-needed -lgcc_s --no-as-needed /usr/lib64/gcc/x86_64-suse-linux/4.7/crtend.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crtn.o]
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/collect2] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [--build-id] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [--eh-frame-hdr] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-m] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-export-dynamic] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-dynamic-linker] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crt1.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crti.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/crtbegin.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64]
CMakeFiles/CMakeOutput.log:    arg [-L/lib/../lib64] ==> dir [/lib/../lib64]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib/../lib64] ==> dir [/usr/lib/../lib64]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../..] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../..]
CMakeFiles/CMakeOutput.log:    arg [-lgcc] ==> lib [gcc]
CMakeFiles/CMakeOutput.log:    arg [--as-needed] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-lgcc_s] ==> lib [gcc_s]
CMakeFiles/CMakeOutput.log:    arg [--no-as-needed] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-lc] ==> lib [c]
CMakeFiles/CMakeOutput.log:    arg [-lgcc] ==> lib [gcc]
CMakeFiles/CMakeOutput.log:    arg [--as-needed] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-lgcc_s] ==> lib [gcc_s]
CMakeFiles/CMakeOutput.log:    arg [--no-as-needed] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/crtend.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crtn.o] ==> ignore
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7] ==> [/usr/lib64/gcc/x86_64-suse-linux/4.7]
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64] ==> [/usr/lib64]
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib] ==> [/usr/x86_64-suse-linux/lib]
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../..] ==> [/usr/lib64]
CMakeFiles/CMakeOutput.log:  implicit dirs: [/usr/lib64/gcc/x86_64-suse-linux/4.7;/usr/lib64;/lib64;/usr/x86_64-suse-linux/lib]
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2871171105.dir/build.make CMakeFiles/cmTryCompileExec2871171105.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/c++     -o CMakeFiles/cmTryCompileExec2871171105.dir/testCXXCompiler.cxx.o -c /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2871171105.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/c++          CMakeFiles/cmTryCompileExec2871171105.dir/testCXXCompiler.cxx.o  -o cmTryCompileExec2871171105 -rdynamic 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec269258459.dir/build.make CMakeFiles/cmTryCompileExec269258459.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/c++     -o CMakeFiles/cmTryCompileExec269258459.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake/Modules/CMakeCXXCompilerABI.cpp
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec269258459.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/c++        -v CMakeFiles/cmTryCompileExec269258459.dir/CMakeCXXCompilerABI.cpp.o  -o cmTryCompileExec269258459 -rdynamic  
CMakeFiles/CMakeOutput.log:Using built-in specs.
CMakeFiles/CMakeOutput.log:COLLECT_LTO_WRAPPER=/usr/lib64/gcc/x86_64-suse-linux/4.7/lto-wrapper
CMakeFiles/CMakeOutput.log:Target: x86_64-suse-linux
CMakeFiles/CMakeOutput.log:Configured with: ../configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-languages=c,c++,objc,fortran,obj-c++,java,ada --enable-checking=release --with-gxx-include-dir=/usr/include/c++/4.7 --enable-ssp --disable-libssp --disable-libitm --disable-plugin --with-bugurl=http://bugs.opensuse.org/ --with-pkgversion='SUSE Linux' --disable-libgcj --disable-libmudflap --with-slibdir=/lib64 --with-system-zlib --enable-__cxa_atexit --enable-libstdcxx-allocator=new --disable-libstdcxx-pch --enable-version-specific-runtime-libs --enable-linker-build-id --program-suffix=-4.7 --enable-linux-futex --without-system-libunwind --with-arch-32=i586 --with-tune=generic --build=x86_64-suse-linux
CMakeFiles/CMakeOutput.log:gcc version 4.7.1 20120723 [gcc-4_7-branch revision 189773] (SUSE Linux) 
CMakeFiles/CMakeOutput.log:COMPILER_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/bin/
CMakeFiles/CMakeOutput.log:LIBRARY_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/:/lib/../lib64/:/usr/lib/../lib64/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../:/lib/:/usr/lib/
CMakeFiles/CMakeOutput.log:COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec269258459' '-rdynamic' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
CMakeFiles/CMakeOutput.log: /usr/lib64/gcc/x86_64-suse-linux/4.7/collect2 --build-id --eh-frame-hdr -m elf_x86_64 -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTryCompileExec269258459 /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crt1.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crti.o /usr/lib64/gcc/x86_64-suse-linux/4.7/crtbegin.o -L/usr/lib64/gcc/x86_64-suse-linux/4.7 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../.. CMakeFiles/cmTryCompileExec269258459.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib64/gcc/x86_64-suse-linux/4.7/crtend.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crtn.o
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/gmake -f CMakeFiles/cmTryCompileExec269258459.dir/build.make CMakeFiles/cmTryCompileExec269258459.dir/build]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/c++     -o CMakeFiles/cmTryCompileExec269258459.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake/Modules/CMakeCXXCompilerABI.cpp]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec269258459.dir/link.txt --verbose=1]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/c++        -v CMakeFiles/cmTryCompileExec269258459.dir/CMakeCXXCompilerABI.cpp.o  -o cmTryCompileExec269258459 -rdynamic  ]
CMakeFiles/CMakeOutput.log:  ignore line: [Using built-in specs.]
CMakeFiles/CMakeOutput.log:  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib64/gcc/x86_64-suse-linux/4.7/lto-wrapper]
CMakeFiles/CMakeOutput.log:  ignore line: [Target: x86_64-suse-linux]
CMakeFiles/CMakeOutput.log:  ignore line: [Configured with: ../configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-languages=c,c++,objc,fortran,obj-c++,java,ada --enable-checking=release --with-gxx-include-dir=/usr/include/c++/4.7 --enable-ssp --disable-libssp --disable-libitm --disable-plugin --with-bugurl=http://bugs.opensuse.org/ --with-pkgversion='SUSE Linux' --disable-libgcj --disable-libmudflap --with-slibdir=/lib64 --with-system-zlib --enable-__cxa_atexit --enable-libstdcxx-allocator=new --disable-libstdcxx-pch --enable-version-specific-runtime-libs --enable-linker-build-id --program-suffix=-4.7 --enable-linux-futex --without-system-libunwind --with-arch-32=i586 --with-tune=generic --build=x86_64-suse-linux]
CMakeFiles/CMakeOutput.log:  ignore line: [gcc version 4.7.1 20120723 [gcc-4_7-branch revision 189773] (SUSE Linux) ]
CMakeFiles/CMakeOutput.log:  ignore line: [COMPILER_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/bin/]
CMakeFiles/CMakeOutput.log:  ignore line: [LIBRARY_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/:/lib/../lib64/:/usr/lib/../lib64/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../:/lib/:/usr/lib/]
CMakeFiles/CMakeOutput.log:  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec269258459' '-rdynamic' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
CMakeFiles/CMakeOutput.log:  link line: [ /usr/lib64/gcc/x86_64-suse-linux/4.7/collect2 --build-id --eh-frame-hdr -m elf_x86_64 -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTryCompileExec269258459 /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crt1.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crti.o /usr/lib64/gcc/x86_64-suse-linux/4.7/crtbegin.o -L/usr/lib64/gcc/x86_64-suse-linux/4.7 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../.. CMakeFiles/cmTryCompileExec269258459.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib64/gcc/x86_64-suse-linux/4.7/crtend.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crtn.o]
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/collect2] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [--build-id] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [--eh-frame-hdr] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-m] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-export-dynamic] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-dynamic-linker] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crt1.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crti.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/crtbegin.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64]
CMakeFiles/CMakeOutput.log:    arg [-L/lib/../lib64] ==> dir [/lib/../lib64]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib/../lib64] ==> dir [/usr/lib/../lib64]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../..] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../..]
CMakeFiles/CMakeOutput.log:    arg [-lstdc++] ==> lib [stdc++]
CMakeFiles/CMakeOutput.log:    arg [-lm] ==> lib [m]
CMakeFiles/CMakeOutput.log:    arg [-lgcc_s] ==> lib [gcc_s]
CMakeFiles/CMakeOutput.log:    arg [-lgcc] ==> lib [gcc]
CMakeFiles/CMakeOutput.log:    arg [-lc] ==> lib [c]
CMakeFiles/CMakeOutput.log:    arg [-lgcc_s] ==> lib [gcc_s]
CMakeFiles/CMakeOutput.log:    arg [-lgcc] ==> lib [gcc]
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/crtend.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crtn.o] ==> ignore
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7] ==> [/usr/lib64/gcc/x86_64-suse-linux/4.7]
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64] ==> [/usr/lib64]
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib] ==> [/usr/x86_64-suse-linux/lib]
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../..] ==> [/usr/lib64]
CMakeFiles/CMakeOutput.log:  implicit dirs: [/usr/lib64/gcc/x86_64-suse-linux/4.7;/usr/lib64;/lib64;/usr/x86_64-suse-linux/lib]
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec1716976858.dir/build.make CMakeFiles/cmTryCompileExec1716976858.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc   -DCHECK_FUNCTION_EXISTS=VotcaToolsFromC   -o CMakeFiles/cmTryCompileExec1716976858.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1716976858.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc     -DCHECK_FUNCTION_EXISTS=VotcaToolsFromC    CMakeFiles/cmTryCompileExec1716976858.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1716976858 -rdynamic /people/thnfs/homes/melnyk/votca/lib/libvotca_tools.so -Wl,-rpath,/people/thnfs/homes/melnyk/votca/lib 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2180135685.dir/build.make CMakeFiles/cmTryCompileExec2180135685.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc   -DCHECK_FUNCTION_EXISTS=VotcaCsgFromC   -o CMakeFiles/cmTryCompileExec2180135685.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2180135685.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc     -DCHECK_FUNCTION_EXISTS=VotcaCsgFromC    CMakeFiles/cmTryCompileExec2180135685.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2180135685 -rdynamic /people/thnfs/homes/melnyk/votca/lib/libvotca_csg.so -Wl,-rpath,/people/thnfs/homes/melnyk/votca/lib 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2074693029.dir/build.make CMakeFiles/cmTryCompileExec2074693029.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc   -DCHECK_FUNCTION_EXISTS=VotcaMooFromC   -o CMakeFiles/cmTryCompileExec2074693029.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2074693029.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc     -DCHECK_FUNCTION_EXISTS=VotcaMooFromC    CMakeFiles/cmTryCompileExec2074693029.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2074693029 -rdynamic /people/thnfs/homes/melnyk/votca/lib/libvotca_moo.so -Wl,-rpath,/people/thnfs/homes/melnyk/votca/lib 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2115509168.dir/build.make CMakeFiles/cmTryCompileExec2115509168.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc    -o CMakeFiles/cmTryCompileExec2115509168.dir/CheckIncludeFile.c.o   -c /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CheckIncludeFile.c
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2115509168.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc         CMakeFiles/cmTryCompileExec2115509168.dir/CheckIncludeFile.c.o  -o cmTryCompileExec2115509168 -rdynamic 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec1006618091.dir/build.make CMakeFiles/cmTryCompileExec1006618091.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/c++     -o CMakeFiles/cmTryCompileExec1006618091.dir/CheckIncludeFile.cxx.o -c /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CheckIncludeFile.cxx
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1006618091.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/c++          CMakeFiles/cmTryCompileExec1006618091.dir/CheckIncludeFile.cxx.o  -o cmTryCompileExec1006618091 -rdynamic 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2384139551.dir/build.make CMakeFiles/cmTryCompileExec2384139551.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc   -DCHECK_FUNCTION_EXISTS=sqrt   -o CMakeFiles/cmTryCompileExec2384139551.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
CMakeFiles/CMakeOutput.log:/usr/share/cmake/Modules/CheckFunctionExists.c:3:6: warning: conflicting types for built-in function 'sqrt' [enabled by default]
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2384139551.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc     -DCHECK_FUNCTION_EXISTS=sqrt    CMakeFiles/cmTryCompileExec2384139551.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2384139551 -rdynamic -lm 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec723642518.dir/build.make CMakeFiles/cmTryCompileExec723642518.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gfortran    -c /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/testFortranCompiler.f -o CMakeFiles/cmTryCompileExec723642518.dir/testFortranCompiler.f.o
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec723642518.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gfortran         CMakeFiles/cmTryCompileExec723642518.dir/testFortranCompiler.f.o  -o cmTryCompileExec723642518 -rdynamic 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2715342284.dir/build.make CMakeFiles/cmTryCompileExec2715342284.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gfortran    -c /usr/share/cmake/Modules/CMakeFortranCompilerABI.F -o CMakeFiles/cmTryCompileExec2715342284.dir/CMakeFortranCompilerABI.F.o
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2715342284.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gfortran   -v     CMakeFiles/cmTryCompileExec2715342284.dir/CMakeFortranCompilerABI.F.o  -o cmTryCompileExec2715342284 -rdynamic  
CMakeFiles/CMakeOutput.log:Driving: /usr/bin/gfortran -v CMakeFiles/cmTryCompileExec2715342284.dir/CMakeFortranCompilerABI.F.o -o cmTryCompileExec2715342284 -rdynamic -l gfortran -l m -shared-libgcc
CMakeFiles/CMakeOutput.log:Using built-in specs.
CMakeFiles/CMakeOutput.log:COLLECT_LTO_WRAPPER=/usr/lib64/gcc/x86_64-suse-linux/4.7/lto-wrapper
CMakeFiles/CMakeOutput.log:Target: x86_64-suse-linux
CMakeFiles/CMakeOutput.log:Configured with: ../configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-languages=c,c++,objc,fortran,obj-c++,java,ada --enable-checking=release --with-gxx-include-dir=/usr/include/c++/4.7 --enable-ssp --disable-libssp --disable-libitm --disable-plugin --with-bugurl=http://bugs.opensuse.org/ --with-pkgversion='SUSE Linux' --disable-libgcj --disable-libmudflap --with-slibdir=/lib64 --with-system-zlib --enable-__cxa_atexit --enable-libstdcxx-allocator=new --disable-libstdcxx-pch --enable-version-specific-runtime-libs --enable-linker-build-id --program-suffix=-4.7 --enable-linux-futex --without-system-libunwind --with-arch-32=i586 --with-tune=generic --build=x86_64-suse-linux
CMakeFiles/CMakeOutput.log:gcc version 4.7.1 20120723 [gcc-4_7-branch revision 189773] (SUSE Linux) 
CMakeFiles/CMakeOutput.log:Reading specs from /usr/lib64/gcc/x86_64-suse-linux/4.7/libgfortran.spec
CMakeFiles/CMakeOutput.log:COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec2715342284' '-rdynamic' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
CMakeFiles/CMakeOutput.log:COMPILER_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/bin/
CMakeFiles/CMakeOutput.log:LIBRARY_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/:/lib/../lib64/:/usr/lib/../lib64/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../:/lib/:/usr/lib/
CMakeFiles/CMakeOutput.log:COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec2715342284' '-rdynamic' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
CMakeFiles/CMakeOutput.log: /usr/lib64/gcc/x86_64-suse-linux/4.7/collect2 --build-id --eh-frame-hdr -m elf_x86_64 -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTryCompileExec2715342284 /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crt1.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crti.o /usr/lib64/gcc/x86_64-suse-linux/4.7/crtbegin.o -L/usr/lib64/gcc/x86_64-suse-linux/4.7 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../.. CMakeFiles/cmTryCompileExec2715342284.dir/CMakeFortranCompilerABI.F.o -lgfortran -lm -lgcc_s -lgcc -lquadmath -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib64/gcc/x86_64-suse-linux/4.7/crtend.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crtn.o
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2715342284.dir/build.make CMakeFiles/cmTryCompileExec2715342284.dir/build]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/gfortran    -c /usr/share/cmake/Modules/CMakeFortranCompilerABI.F -o CMakeFiles/cmTryCompileExec2715342284.dir/CMakeFortranCompilerABI.F.o]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2715342284.dir/link.txt --verbose=1]
CMakeFiles/CMakeOutput.log:  ignore line: [/usr/bin/gfortran   -v     CMakeFiles/cmTryCompileExec2715342284.dir/CMakeFortranCompilerABI.F.o  -o cmTryCompileExec2715342284 -rdynamic  ]
CMakeFiles/CMakeOutput.log:  ignore line: [Driving: /usr/bin/gfortran -v CMakeFiles/cmTryCompileExec2715342284.dir/CMakeFortranCompilerABI.F.o -o cmTryCompileExec2715342284 -rdynamic -l gfortran -l m -shared-libgcc]
CMakeFiles/CMakeOutput.log:  ignore line: [Using built-in specs.]
CMakeFiles/CMakeOutput.log:  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib64/gcc/x86_64-suse-linux/4.7/lto-wrapper]
CMakeFiles/CMakeOutput.log:  ignore line: [Target: x86_64-suse-linux]
CMakeFiles/CMakeOutput.log:  ignore line: [Configured with: ../configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man --libdir=/usr/lib64 --libexecdir=/usr/lib64 --enable-languages=c,c++,objc,fortran,obj-c++,java,ada --enable-checking=release --with-gxx-include-dir=/usr/include/c++/4.7 --enable-ssp --disable-libssp --disable-libitm --disable-plugin --with-bugurl=http://bugs.opensuse.org/ --with-pkgversion='SUSE Linux' --disable-libgcj --disable-libmudflap --with-slibdir=/lib64 --with-system-zlib --enable-__cxa_atexit --enable-libstdcxx-allocator=new --disable-libstdcxx-pch --enable-version-specific-runtime-libs --enable-linker-build-id --program-suffix=-4.7 --enable-linux-futex --without-system-libunwind --with-arch-32=i586 --with-tune=generic --build=x86_64-suse-linux]
CMakeFiles/CMakeOutput.log:  ignore line: [gcc version 4.7.1 20120723 [gcc-4_7-branch revision 189773] (SUSE Linux) ]
CMakeFiles/CMakeOutput.log:  ignore line: [Reading specs from /usr/lib64/gcc/x86_64-suse-linux/4.7/libgfortran.spec]
CMakeFiles/CMakeOutput.log:  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec2715342284' '-rdynamic' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
CMakeFiles/CMakeOutput.log:  ignore line: [COMPILER_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/bin/]
CMakeFiles/CMakeOutput.log:  ignore line: [LIBRARY_PATH=/usr/lib64/gcc/x86_64-suse-linux/4.7/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/:/lib/../lib64/:/usr/lib/../lib64/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib/:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../:/lib/:/usr/lib/]
CMakeFiles/CMakeOutput.log:  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTryCompileExec2715342284' '-rdynamic' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
CMakeFiles/CMakeOutput.log:  link line: [ /usr/lib64/gcc/x86_64-suse-linux/4.7/collect2 --build-id --eh-frame-hdr -m elf_x86_64 -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cmTryCompileExec2715342284 /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crt1.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crti.o /usr/lib64/gcc/x86_64-suse-linux/4.7/crtbegin.o -L/usr/lib64/gcc/x86_64-suse-linux/4.7 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib -L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../.. CMakeFiles/cmTryCompileExec2715342284.dir/CMakeFortranCompilerABI.F.o -lgfortran -lm -lgcc_s -lgcc -lquadmath -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib64/gcc/x86_64-suse-linux/4.7/crtend.o /usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crtn.o]
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/collect2] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [--build-id] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [--eh-frame-hdr] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-m] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-export-dynamic] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-dynamic-linker] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crt1.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crti.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/crtbegin.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64]
CMakeFiles/CMakeOutput.log:    arg [-L/lib/../lib64] ==> dir [/lib/../lib64]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib/../lib64] ==> dir [/usr/lib/../lib64]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib]
CMakeFiles/CMakeOutput.log:    arg [-L/usr/lib64/gcc/x86_64-suse-linux/4.7/../../..] ==> dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../..]
CMakeFiles/CMakeOutput.log:    arg [-lgfortran] ==> lib [gfortran]
CMakeFiles/CMakeOutput.log:    arg [-lm] ==> lib [m]
CMakeFiles/CMakeOutput.log:    arg [-lgcc_s] ==> lib [gcc_s]
CMakeFiles/CMakeOutput.log:    arg [-lgcc] ==> lib [gcc]
CMakeFiles/CMakeOutput.log:    arg [-lquadmath] ==> lib [quadmath]
CMakeFiles/CMakeOutput.log:    arg [-lm] ==> lib [m]
CMakeFiles/CMakeOutput.log:    arg [-lgcc_s] ==> lib [gcc_s]
CMakeFiles/CMakeOutput.log:    arg [-lgcc] ==> lib [gcc]
CMakeFiles/CMakeOutput.log:    arg [-lc] ==> lib [c]
CMakeFiles/CMakeOutput.log:    arg [-lgcc_s] ==> lib [gcc_s]
CMakeFiles/CMakeOutput.log:    arg [-lgcc] ==> lib [gcc]
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/crtend.o] ==> ignore
CMakeFiles/CMakeOutput.log:    arg [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64/crtn.o] ==> ignore
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7] ==> [/usr/lib64/gcc/x86_64-suse-linux/4.7]
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../lib64] ==> [/usr/lib64]
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/lib] ==> [/usr/x86_64-suse-linux/lib]
CMakeFiles/CMakeOutput.log:  collapse dir [/usr/lib64/gcc/x86_64-suse-linux/4.7/../../..] ==> [/usr/lib64]
CMakeFiles/CMakeOutput.log:  implicit dirs: [/usr/lib64/gcc/x86_64-suse-linux/4.7;/usr/lib64;/lib64;/usr/x86_64-suse-linux/lib]
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec362967751.dir/build.make CMakeFiles/cmTryCompileExec362967751.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gfortran    -c /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/testFortranCompilerF90.f90 -o CMakeFiles/cmTryCompileExec362967751.dir/testFortranCompilerF90.f90.o
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec362967751.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gfortran         CMakeFiles/cmTryCompileExec362967751.dir/testFortranCompilerF90.f90.o  -o cmTryCompileExec362967751 -rdynamic 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec1164740510.dir/build.make CMakeFiles/cmTryCompileExec1164740510.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gfortran    -c /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/testFortranCompiler.f -o CMakeFiles/cmTryCompileExec1164740510.dir/testFortranCompiler.f.o
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1164740510.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gfortran         CMakeFiles/cmTryCompileExec1164740510.dir/testFortranCompiler.f.o  -o cmTryCompileExec1164740510 -rdynamic /usr/lib64/libblas.so 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec1473039219.dir/build.make CMakeFiles/cmTryCompileExec1473039219.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc    -o CMakeFiles/cmTryCompileExec1473039219.dir/CheckIncludeFiles.c.o   -c /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CheckIncludeFiles.c
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1473039219.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc         CMakeFiles/cmTryCompileExec1473039219.dir/CheckIncludeFiles.c.o  -o cmTryCompileExec1473039219 -rdynamic 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec2540803241.dir/build.make CMakeFiles/cmTryCompileExec2540803241.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc   -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTryCompileExec2540803241.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec2540803241.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gcc     -DCHECK_FUNCTION_EXISTS=pthread_create    CMakeFiles/cmTryCompileExec2540803241.dir/CheckFunctionExists.c.o  -o cmTryCompileExec2540803241 -rdynamic -lpthread 
CMakeFiles/CMakeOutput.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec4035755966.dir/build.make CMakeFiles/cmTryCompileExec4035755966.dir/build
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeOutput.log:/usr/bin/gfortran    -c /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/testFortranCompiler.f -o CMakeFiles/cmTryCompileExec4035755966.dir/testFortranCompiler.f.o
CMakeFiles/CMakeOutput.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec4035755966.dir/link.txt --verbose=1
CMakeFiles/CMakeOutput.log:/usr/bin/gfortran         CMakeFiles/cmTryCompileExec4035755966.dir/testFortranCompiler.f.o  -o cmTryCompileExec4035755966 -rdynamic /usr/lib64/liblapack.so /usr/lib64/libblas.so 
CMakeFiles/CompilerIdC/CMakeCCompilerId.c:# define PLATFORM_ID "HP-UX"
CMakeFiles/CompilerIdC/CMakeCCompilerId.c:# define PLATFORM_ID "MP-RAS"
CMakeFiles/CompilerIdC/CMakeCCompilerId.c:/*--------------------------------------------------------------------------*/
CMakeFiles/CMakeSystem.cmake:SET(CMAKE_SYSTEM "Linux-3.4.28-2.20-desktop")
CMakeFiles/CMakeSystem.cmake:SET(CMAKE_SYSTEM_VERSION "3.4.28-2.20-desktop")
CMakeFiles/CMakeSystem.cmake:SET(CMAKE_HOST_SYSTEM "Linux-3.4.28-2.20-desktop")
CMakeFiles/CMakeSystem.cmake:SET(CMAKE_HOST_SYSTEM_VERSION "3.4.28-2.20-desktop")
CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp:# define PLATFORM_ID "HP-UX"
CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp:# define PLATFORM_ID "MP-RAS"
CMakeFiles/CompilerIdCXX/CMakeCXXCompilerId.cpp:/*--------------------------------------------------------------------------*/
CMakeFiles/CMakeCCompiler.cmake:SET(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "/usr/lib64/gcc/x86_64-suse-linux/4.7;/usr/lib64;/lib64;/usr/x86_64-suse-linux/lib")
CMakeFiles/CMakeCXXCompiler.cmake:SET(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/usr/lib64/gcc/x86_64-suse-linux/4.7;/usr/lib64;/lib64;/usr/x86_64-suse-linux/lib")
CMakeFiles/CompilerIdFortran/CMakeFortranCompilerId.F:        PRINT *, 'INFO:platform[HP-UX]'
CMakeFiles/CompilerIdFortran/CMakeFortranCompilerId.F:        PRINT *, 'INFO:platform[MP-RAS]'
CMakeFiles/CMakeError.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec3485420609.dir/build.make CMakeFiles/cmTryCompileExec3485420609.dir/build
CMakeFiles/CMakeError.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeError.log:/usr/bin/gcc    -o CMakeFiles/cmTryCompileExec3485420609.dir/CheckSymbolExists.c.o   -c /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CheckSymbolExists.c
CMakeFiles/CMakeError.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec3485420609.dir/link.txt --verbose=1
CMakeFiles/CMakeError.log:/usr/bin/gcc         CMakeFiles/cmTryCompileExec3485420609.dir/CheckSymbolExists.c.o  -o cmTryCompileExec3485420609 -rdynamic 
CMakeFiles/CMakeError.log:/usr/bin/gmake -f CMakeFiles/cmTryCompileExec1350581235.dir/build.make CMakeFiles/cmTryCompileExec1350581235.dir/build
CMakeFiles/CMakeError.log:/usr/bin/cmake -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/CMakeTmp/CMakeFiles 1
CMakeFiles/CMakeError.log:/usr/bin/gcc   -DCHECK_FUNCTION_EXISTS=pthread_create   -o CMakeFiles/cmTryCompileExec1350581235.dir/CheckFunctionExists.c.o   -c /usr/share/cmake/Modules/CheckFunctionExists.c
CMakeFiles/CMakeError.log:/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec1350581235.dir/link.txt --verbose=1
CMakeFiles/CMakeError.log:/usr/bin/gcc     -DCHECK_FUNCTION_EXISTS=pthread_create    CMakeFiles/cmTryCompileExec1350581235.dir/CheckFunctionExists.c.o  -o cmTryCompileExec1350581235 -rdynamic -lpthreads 
CMakeFiles/CMakeError.log:/usr/lib64/gcc/x86_64-suse-linux/4.7/../../../../x86_64-suse-linux/bin/ld: cannot find -lpthreads
CMakeFiles/CMakeFortranCompiler.cmake:SET(CMAKE_Fortran_IMPLICIT_LINK_DIRECTORIES "/usr/lib64/gcc/x86_64-suse-linux/4.7;/usr/lib64;/lib64;/usr/x86_64-suse-linux/lib")
CMakeFiles/Makefile2:RM = /usr/bin/cmake -E remove -f
CMakeFiles/Makefile2:# The top-level source directory on which CMake was run.
CMakeFiles/Makefile2:# The top-level build directory on which CMake was run.
CMakeFiles/Makefile2:	$(MAKE) -f scripts/CMakeFiles/ctp_dipro.dir/build.make scripts/CMakeFiles/ctp_dipro.dir/depend
CMakeFiles/Makefile2:	$(MAKE) -f scripts/CMakeFiles/ctp_dipro.dir/build.make scripts/CMakeFiles/ctp_dipro.dir/build
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
CMakeFiles/Makefile2:	$(MAKE) -f CMakeFiles/Makefile2 scripts/CMakeFiles/ctp_dipro.dir/all
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
CMakeFiles/Makefile2:	$(MAKE) -f scripts/CMakeFiles/ctp_dipro.dir/build.make scripts/CMakeFiles/ctp_dipro.dir/clean
CMakeFiles/Makefile2:	$(MAKE) -f src/libctp/CMakeFiles/hgversion.dir/build.make src/libctp/CMakeFiles/hgversion.dir/depend
CMakeFiles/Makefile2:	$(MAKE) -f src/libctp/CMakeFiles/hgversion.dir/build.make src/libctp/CMakeFiles/hgversion.dir/build
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
CMakeFiles/Makefile2:	$(MAKE) -f CMakeFiles/Makefile2 src/libctp/CMakeFiles/hgversion.dir/all
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
CMakeFiles/Makefile2:	$(MAKE) -f src/libctp/CMakeFiles/hgversion.dir/build.make src/libctp/CMakeFiles/hgversion.dir/clean
CMakeFiles/Makefile2:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/depend
CMakeFiles/Makefile2:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/build
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles  15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 45
CMakeFiles/Makefile2:	$(MAKE) -f CMakeFiles/Makefile2 src/libctp/CMakeFiles/votca_ctp.dir/all
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
CMakeFiles/Makefile2:# Pre-install relink rule for target.
CMakeFiles/Makefile2:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/preinstall
CMakeFiles/Makefile2:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/clean
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/depend
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/build
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles  8
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 46
CMakeFiles/Makefile2:	$(MAKE) -f CMakeFiles/Makefile2 src/tools/CMakeFiles/ctp_app.dir/all
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
CMakeFiles/Makefile2:# Pre-install relink rule for target.
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/preinstall
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/clean
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/depend
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/build
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles  9 10
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 47
CMakeFiles/Makefile2:	$(MAKE) -f CMakeFiles/Makefile2 src/tools/CMakeFiles/ctp_map.dir/all
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
CMakeFiles/Makefile2:# Pre-install relink rule for target.
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/preinstall
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/clean
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/depend
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/build
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles  11
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 46
CMakeFiles/Makefile2:	$(MAKE) -f CMakeFiles/Makefile2 src/tools/CMakeFiles/ctp_run.dir/all
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
CMakeFiles/Makefile2:# Pre-install relink rule for target.
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/preinstall
CMakeFiles/Makefile2:	$(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/clean
CMakeFiles/Makefile2:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/depend
CMakeFiles/Makefile2:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/requires
CMakeFiles/Makefile2:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/build
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles  1 2 3 4 5 6 7
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 7
CMakeFiles/Makefile2:	$(MAKE) -f CMakeFiles/Makefile2 src/dipro/CMakeFiles/DIPRO.x.dir/all
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
CMakeFiles/Makefile2:# Pre-install relink rule for target.
CMakeFiles/Makefile2:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/preinstall
CMakeFiles/Makefile2:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/clean
CMakeFiles/Makefile2:	$(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/depend
CMakeFiles/Makefile2:	$(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/requires
CMakeFiles/Makefile2:	$(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/build
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_report /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles  12 13 14
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 3
CMakeFiles/Makefile2:	$(MAKE) -f CMakeFiles/Makefile2 src/dipro/CMakeFiles/mergeorbitals.x.dir/all
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
CMakeFiles/Makefile2:	$(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/clean
CMakeFiles/Makefile2:	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
CMakeFiles/Makefile.cmake:  "/usr/share/cmake/Modules/Compiler/GNU-C.cmake"
CMakeFiles/Makefile.cmake:  "/usr/share/cmake/Modules/Compiler/GNU-CXX.cmake"
CMakeFiles/Makefile.cmake:  "/usr/share/cmake/Modules/Compiler/GNU-Fortran.cmake"
CMakeFiles/Makefile.cmake:  "/usr/share/cmake/Modules/Platform/Linux-GNU-C.cmake"
CMakeFiles/Makefile.cmake:  "/usr/share/cmake/Modules/Platform/Linux-GNU-CXX.cmake"
CMakeFiles/Makefile.cmake:  "/usr/share/cmake/Modules/Platform/Linux-GNU-Fortran.cmake"
CMakeFiles/Makefile.cmake:  "/usr/share/cmake/Modules/Platform/Linux-GNU.cmake"
CMakeCache.txt:BLAS_Accelerate_LIBRARY:FILEPATH=BLAS_Accelerate_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_acml_LIBRARY:FILEPATH=BLAS_acml_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_acml_mp_LIBRARY:FILEPATH=BLAS_acml_mp_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_complib.sgimath_LIBRARY:FILEPATH=BLAS_complib.sgimath_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_cxml_LIBRARY:FILEPATH=BLAS_cxml_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_dxml_LIBRARY:FILEPATH=BLAS_dxml_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_essl_LIBRARY:FILEPATH=BLAS_essl_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_f77blas_LIBRARY:FILEPATH=BLAS_f77blas_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_goto2_LIBRARY:FILEPATH=BLAS_goto2_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_scsl_LIBRARY:FILEPATH=BLAS_scsl_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_sgemm_LIBRARY:FILEPATH=BLAS_sgemm_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_sunperf_LIBRARY:FILEPATH=BLAS_sunperf_LIBRARY-NOTFOUND
CMakeCache.txt:BLAS_vecLib_LIBRARY:FILEPATH=BLAS_vecLib_LIBRARY-NOTFOUND
CMakeCache.txt:Boost_DIR:PATH=Boost_DIR-NOTFOUND
CMakeCache.txt:Boost_FILESYSTEM_LIBRARY:FILEPATH=/usr/lib64/libboost_filesystem-mt.so
CMakeCache.txt:Boost_FILESYSTEM_LIBRARY_DEBUG:FILEPATH=/usr/lib64/libboost_filesystem-mt.so
CMakeCache.txt:Boost_FILESYSTEM_LIBRARY_RELEASE:FILEPATH=/usr/lib64/libboost_filesystem-mt.so
CMakeCache.txt:Boost_PROGRAM_OPTIONS_LIBRARY:FILEPATH=/usr/lib64/libboost_program_options-mt.so
CMakeCache.txt:Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG:FILEPATH=/usr/lib64/libboost_program_options-mt.so
CMakeCache.txt:Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE:FILEPATH=/usr/lib64/libboost_program_options-mt.so
CMakeCache.txt:Boost_SERIALIZATION_LIBRARY:FILEPATH=/usr/lib64/libboost_serialization-mt.so
CMakeCache.txt:Boost_SERIALIZATION_LIBRARY_DEBUG:FILEPATH=/usr/lib64/libboost_serialization-mt.so
CMakeCache.txt:Boost_SERIALIZATION_LIBRARY_RELEASE:FILEPATH=/usr/lib64/libboost_serialization-mt.so
CMakeCache.txt:CMAKE_CXX_FLAGS_DEBUG:STRING=-g
CMakeCache.txt:CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
CMakeCache.txt:CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
CMakeCache.txt:CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g
CMakeCache.txt:CMAKE_C_FLAGS_DEBUG:STRING=-g
CMakeCache.txt:CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
CMakeCache.txt:CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
CMakeCache.txt:CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g
CMakeCache.txt:CMAKE_Fortran_FLAGS_DEBUG:STRING=-g
CMakeCache.txt:CMAKE_Fortran_FLAGS_MINSIZEREL:STRING=-Os
CMakeCache.txt:CMAKE_Fortran_FLAGS_RELEASE:STRING=-O3
CMakeCache.txt:CMAKE_Fortran_FLAGS_RELWITHDEBINFO:STRING=-O2 -g
CMakeCache.txt:CMAKE_PROJECT_NAME:STATIC=votca-ctp
CMakeCache.txt:LAPACK_Accelerate_LIBRARY:FILEPATH=LAPACK_Accelerate_LIBRARY-NOTFOUND
CMakeCache.txt:LAPACK_goto2_LIBRARY:FILEPATH=LAPACK_goto2_LIBRARY-NOTFOUND
CMakeCache.txt:LAPACK_vecLib_LIBRARY:FILEPATH=LAPACK_vecLib_LIBRARY-NOTFOUND
CMakeCache.txt://pkg-config executable
CMakeCache.txt:PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/bin/pkg-config
CMakeCache.txt:votca-ctp_BINARY_DIR:STATIC=/people/thnfs/homes/melnyk/votca/src/ctp
CMakeCache.txt:votca-ctp_SOURCE_DIR:STATIC=/people/thnfs/homes/melnyk/votca/src/ctp
CMakeCache.txt:votca_ctp_LIB_DEPENDS:STATIC=general;/people/thnfs/homes/melnyk/votca/lib/libvotca_csg.so;general;/people/thnfs/homes/melnyk/votca/lib/libvotca_moo.so;general;/people/thnfs/homes/melnyk/votca/lib/libvotca_tools.so;general;/usr/lib64/libboost_program_options-mt.so;general;/usr/lib64/libboost_serialization-mt.so;general;/usr/lib64/libboost_filesystem-mt.so;
CMakeCache.txt:BLAS_Accelerate_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_acml_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_acml_mp_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_blas_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_blas_WORKS-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_complib.sgimath_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_cxml_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_dxml_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_essl_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_f77blas_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_goto2_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_scsl_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_sgemm_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_sunperf_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:BLAS_vecLib_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_FILESYSTEM_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_FILESYSTEM_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_FILESYSTEM_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_INCLUDE_DIR-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_LIBRARY_DIRS-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_PROGRAM_OPTIONS_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_SERIALIZATION_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_SERIALIZATION_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
CMakeCache.txt:Boost_SERIALIZATION_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_AR-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_BUILD_TOOL-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_Fortran_COMPILER-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_Fortran_FLAGS-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_Fortran_FLAGS_DEBUG-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_Fortran_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_Fortran_FLAGS_RELEASE-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_Fortran_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_LINKER-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_NM-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_RANLIB-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_STRIP-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_USE_RELATIVE_PATHS-ADVANCED:INTERNAL=1
CMakeCache.txt:CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
CMakeCache.txt:FIND_PACKAGE_MESSAGE_DETAILS_PKG_CONFIG:INTERNAL=[/usr/bin/pkg-config][v0.25()]
CMakeCache.txt:LAPACK_Accelerate_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:LAPACK_goto2_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:LAPACK_lapack_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:LAPACK_lapack_WORKS-ADVANCED:INTERNAL=1
CMakeCache.txt:LAPACK_vecLib_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:MATH_LIBRARIES-ADVANCED:INTERNAL=1
CMakeCache.txt:PC_SQLITE3_LDFLAGS:INTERNAL=-lsqlite3
CMakeCache.txt:PC_SQLITE3_STATIC_LDFLAGS:INTERNAL=-lsqlite3;-ldl;-lpthread
CMakeCache.txt:PC_VOTCA_CSG_CFLAGS:INTERNAL=-pthread;-DGMX_SOFTWARE_INVSQRT;-DGMX_THREADS;-I/people/thnfs/homes/melnyk/votca/include;-I/sw/linux/gromacs/4.5/shared/inst2011-01-11/include
CMakeCache.txt:PC_VOTCA_CSG_CFLAGS_OTHER:INTERNAL=-pthread;-DGMX_SOFTWARE_INVSQRT;-DGMX_THREADS
CMakeCache.txt:PC_VOTCA_CSG_INCLUDE_DIRS:INTERNAL=/people/thnfs/homes/melnyk/votca/include;/sw/linux/gromacs/4.5/shared/inst2011-01-11/include
CMakeCache.txt:PC_VOTCA_CSG_LDFLAGS:INTERNAL=-pthread;-L/people/thnfs/homes/melnyk/votca/lib;-L/sw/linux/gromacs/4.5/shared/inst2011-01-11/lib;-lvotca_csg;-lvotca_tools;-lexpat;-lboost_program_options-mt;-lpthread;-lgmx;-lsqlite3;-lgsl;-lgslcblas;-lfftw3;-lm
CMakeCache.txt:PC_VOTCA_CSG_LIBRARIES:INTERNAL=votca_csg;votca_tools;expat;boost_program_options-mt;pthread;gmx;sqlite3;gsl;gslcblas;fftw3;m
CMakeCache.txt:PC_VOTCA_CSG_LIBRARY_DIRS:INTERNAL=/people/thnfs/homes/melnyk/votca/lib;/sw/linux/gromacs/4.5/shared/inst2011-01-11/lib
CMakeCache.txt:PC_VOTCA_CSG_STATIC_CFLAGS:INTERNAL=-pthread;-DGMX_SOFTWARE_INVSQRT;-DGMX_THREADS;-I/people/thnfs/homes/melnyk/votca/include;-I/sw/linux/gromacs/4.5/shared/inst2011-01-11/include
CMakeCache.txt:PC_VOTCA_CSG_STATIC_CFLAGS_OTHER:INTERNAL=-pthread;-DGMX_SOFTWARE_INVSQRT;-DGMX_THREADS
CMakeCache.txt:PC_VOTCA_CSG_STATIC_INCLUDE_DIRS:INTERNAL=/people/thnfs/homes/melnyk/votca/include;/sw/linux/gromacs/4.5/shared/inst2011-01-11/include
CMakeCache.txt:PC_VOTCA_CSG_STATIC_LDFLAGS:INTERNAL=-pthread;-L/people/thnfs/homes/melnyk/votca/lib;-L/sw/linux/gromacs/4.5/shared/inst2011-01-11/lib;-lvotca_csg;-lvotca_tools;-lexpat;-lboost_program_options-mt;-lgmx;-lsqlite3;-ldl;-lpthread;-lgsl;-lgslcblas;-lfftw3;-lm
CMakeCache.txt:PC_VOTCA_CSG_STATIC_LIBRARIES:INTERNAL=votca_csg;votca_tools;expat;boost_program_options-mt;gmx;sqlite3;dl;pthread;gsl;gslcblas;fftw3;m
CMakeCache.txt:PC_VOTCA_CSG_STATIC_LIBRARY_DIRS:INTERNAL=/people/thnfs/homes/melnyk/votca/lib;/sw/linux/gromacs/4.5/shared/inst2011-01-11/lib
CMakeCache.txt:PC_VOTCA_MOO_CFLAGS:INTERNAL=-I/people/thnfs/homes/melnyk/votca/include
CMakeCache.txt:PC_VOTCA_MOO_LDFLAGS:INTERNAL=-L/people/thnfs/homes/melnyk/votca/lib;-lvotca_moo;-lvotca_tools;-lexpat;-lboost_program_options-mt;-lpthread;-lsqlite3;-lgsl;-lgslcblas;-lfftw3;-lm
CMakeCache.txt:PC_VOTCA_MOO_LIBRARIES:INTERNAL=votca_moo;votca_tools;expat;boost_program_options-mt;pthread;sqlite3;gsl;gslcblas;fftw3;m
CMakeCache.txt:PC_VOTCA_MOO_STATIC_CFLAGS:INTERNAL=-I/people/thnfs/homes/melnyk/votca/include
CMakeCache.txt:PC_VOTCA_MOO_STATIC_LDFLAGS:INTERNAL=-L/people/thnfs/homes/melnyk/votca/lib;-lvotca_moo;-lvotca_tools;-lexpat;-lboost_program_options-mt;-lsqlite3;-ldl;-lpthread;-lgsl;-lgslcblas;-lfftw3;-lm
CMakeCache.txt:PC_VOTCA_MOO_STATIC_LIBRARIES:INTERNAL=votca_moo;votca_tools;expat;boost_program_options-mt;sqlite3;dl;pthread;gsl;gslcblas;fftw3;m
CMakeCache.txt:PC_VOTCA_TOOLS_CFLAGS:INTERNAL=-I/people/thnfs/homes/melnyk/votca/include
CMakeCache.txt:PC_VOTCA_TOOLS_LDFLAGS:INTERNAL=-L/people/thnfs/homes/melnyk/votca/lib;-lvotca_tools;-lexpat;-lboost_program_options-mt;-lpthread;-lsqlite3;-lgsl;-lgslcblas;-lfftw3;-lm
CMakeCache.txt:PC_VOTCA_TOOLS_LIBRARIES:INTERNAL=votca_tools;expat;boost_program_options-mt;pthread;sqlite3;gsl;gslcblas;fftw3;m
CMakeCache.txt:PC_VOTCA_TOOLS_STATIC_CFLAGS:INTERNAL=-I/people/thnfs/homes/melnyk/votca/include
CMakeCache.txt:PC_VOTCA_TOOLS_STATIC_LDFLAGS:INTERNAL=-L/people/thnfs/homes/melnyk/votca/lib;-lvotca_tools;-lexpat;-lboost_program_options-mt;-lsqlite3;-ldl;-lpthread;-lgsl;-lgslcblas;-lfftw3;-lm
CMakeCache.txt:PC_VOTCA_TOOLS_STATIC_LIBRARIES:INTERNAL=votca_tools;expat;boost_program_options-mt;sqlite3;dl;pthread;gsl;gslcblas;fftw3;m
CMakeCache.txt:PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
CMakeCache.txt:SQLITE3_INCLUDE_DIR-ADVANCED:INTERNAL=1
CMakeCache.txt:SQLITE3_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:VOTCA_CSG_INCLUDE_DIR-ADVANCED:INTERNAL=1
CMakeCache.txt:VOTCA_CSG_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:VOTCA_MOO_INCLUDE_DIR-ADVANCED:INTERNAL=1
CMakeCache.txt:VOTCA_MOO_LIBRARY-ADVANCED:INTERNAL=1
CMakeCache.txt:VOTCA_TOOLS_INCLUDE_DIR-ADVANCED:INTERNAL=1
CMakeCache.txt:VOTCA_TOOLS_LIBRARY-ADVANCED:INTERNAL=1
Makefile:RM = /usr/bin/cmake -E remove -f
Makefile:# The top-level source directory on which CMake was run.
Makefile:# The top-level build directory on which CMake was run.
Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
Makefile:	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
Makefile:	/usr/bin/cmake -P cmake_install.cmake
Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
Makefile:	/usr/bin/cmake -P cmake_install.cmake
Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
Makefile:	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
Makefile:	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
Makefile:	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
Makefile:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles/progress.marks
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 all
Makefile:	$(CMAKE_COMMAND) -E cmake_progress_start /people/thnfs/homes/melnyk/votca/src/ctp/CMakeFiles 0
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 clean
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 preinstall
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 preinstall
Makefile:	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 ctp_dipro
Makefile:	$(MAKE) -f scripts/CMakeFiles/ctp_dipro.dir/build.make scripts/CMakeFiles/ctp_dipro.dir/build
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 hgversion
Makefile:	$(MAKE) -f src/libctp/CMakeFiles/hgversion.dir/build.make src/libctp/CMakeFiles/hgversion.dir/build
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 votca_ctp
Makefile:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/build
Makefile:# Manual pre-install relink rule for target.
Makefile:	$(MAKE) -f src/libctp/CMakeFiles/votca_ctp.dir/build.make src/libctp/CMakeFiles/votca_ctp.dir/preinstall
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 ctp_app
Makefile:	$(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/build
Makefile:# Manual pre-install relink rule for target.
Makefile:	$(MAKE) -f src/tools/CMakeFiles/ctp_app.dir/build.make src/tools/CMakeFiles/ctp_app.dir/preinstall
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 ctp_map
Makefile:	$(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/build
Makefile:# Manual pre-install relink rule for target.
Makefile:	$(MAKE) -f src/tools/CMakeFiles/ctp_map.dir/build.make src/tools/CMakeFiles/ctp_map.dir/preinstall
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 ctp_run
Makefile:	$(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/build
Makefile:# Manual pre-install relink rule for target.
Makefile:	$(MAKE) -f src/tools/CMakeFiles/ctp_run.dir/build.make src/tools/CMakeFiles/ctp_run.dir/preinstall
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 DIPRO.x
Makefile:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/build
Makefile:# Manual pre-install relink rule for target.
Makefile:	$(MAKE) -f src/dipro/CMakeFiles/DIPRO.x.dir/build.make src/dipro/CMakeFiles/DIPRO.x.dir/preinstall
Makefile:	$(MAKE) -f CMakeFiles/Makefile2 mergeorbitals.x
Makefile:	$(MAKE) -f src/dipro/CMakeFiles/mergeorbitals.x.dir/build.make src/dipro/CMakeFiles/mergeorbitals.x.dir/build
Makefile:	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
cmake_install.cmake:    STRING(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
