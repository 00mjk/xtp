/*
 * Copyright 2009-2011 The VOTCA Development Team (http://www.votca.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

#ifndef __VOTCA_CTP_FRAGMENT_H
#define	__VOTCA_CTP_FRAGMENT_H


#include <votca/ctp/segment.h>

namespace votca { namespace ctp {

/**
    \brief Rigid fragment. One conjugated segment contains several rigid fragments.

 * Apart from the position and orientation it has a pointer to a conjugated segment 
 * it belongs to as well as postions of atoms which belong to it of two types those 
 * which are generated by MD and those obtained by substitution of rigid copies
 */

class Fragment {
public:
     Fragment(){}
     
    ~Fragment(){}
      
    /// Sets a pointer to a conjugated segment this fragment belongs to
    void setSegment(Segment * segment){
        _segment = segment;
    }

    /// Returns a pointer to a segment this fragment belongs to 
    Segment* GetSegment(){
        return _segment;
    }

private:

    /// Conjugated segment this fragment belongs to
    Segment * _segment;
    
};

}}

#endif	/* __VOTCA_CTP_FRAGMENT_H */

